{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"keywords","boost":15},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["introduct"],"Prefix Sum and Subarray/Subarray Sum.html":["&nums)","(int","*","*/","+","...","/**","//","0","0;","1)","138.","1;","1]",";","=","=>","@param","@return:","class","code","first","here","https://www.lintcode.com/problem/subarray","includ","index","int","integ","j)","last","lintcod","list","map;","map[0]","num[0]","num[1]","num[i","num[j]","number","nums.size();","nums:","nums[i]","prefix(i","prefix(j)","preix(i)","problem","public:","size","solut","std::unordered_map","subarray","subarraysum(vector","sum","sum(i,","sum/descript","vector","write","{"],"Prefix Sum and Subarray/Subarray Sum II.html":["&a,","(int","(l","*","*/","+","++l;","++r;","+=","...,","/**","//","0);","1","1,","138.",";","=","@param","@return:","a1,","a2,","a:","answer","array","bound.","class","code","count","count;","end)","end:","here","https://www.lintcode.com/problem/subarray","ii","int","integ","l;","lintcod","number","pinpoint","possibl","prefix(n","problem","public:","r","return","s0,","s1,","s2,","sn","solut","start","start)","start,","start:","subarray","subarraysumii(vector","sum","sum/descript","upper","write","{","}","};"],"Prefix Sum and Subarray/Submatrix Sum.html":["&matrix)","(a","(e","(i","(int","(m","*","*/","+","...","/*","/**","//","0","0);","0;","1)","1;","1d","2","405.",";","=","=>",">","@param","@return:","appli","array)","array.size();","array[0]","array[1]","array[i];","b","b)","c","class","code","column","column.","columns,","const","coordin","d","down","e","f","f)","first","g","gener","h","here","https://www.lintcode.com/problem/submatrix","int","integ","j","j)","k","l","left","lintcod","m","match;","match[0]","matrix","matrix.size();","matrix:","matrix[0].size();","merg","n","n)","num_c","num_r","number","o","o(c^2","p","prefix(i","prefix(i)","prefix(j)","problem","public:","r)","right","scan","size","solut","solv","span","std::unordered_map","std::vector&","subarray","subarraysum(","submatrix","submatrixsum(vector>","sum","sum(i,","sum/descript","suppos","syn(num_r,","synthet","up","us","vector>","want","write","{"],"Prefix Sum and Subarray/Subarray Sum Closest.html":["&nums)","(int","(n","*","*/","+",".","...,","/*","/**","//","0","0)","1","1));","1,","139.","1]","1],","1};",":",";","=","==","@param","@return:","class","closest","closest/descript","code","find","first","gap.","here","https://www.lintcode.com/problem/subarray","includ","index","index(index)","index)","index;","int","integ","last","lintcod","list","minimum","n","neighbor","number","nums.size();","nums:","nums[0]","nums[1]","nums[n","pair","prefix","prefix(n","problem","public:","record","record(0,","record(int","return","s[0]","s[0],","s[1]","s[1],","s[2]","s[2],","s[3]","s[n","s[n]","solut","sort","std::vector","struct","subarray","subarraysumclosest(vector","sum","sum(sum),","sum,","sum;","vector","write","{","}","};"],"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":["!=","&nums,","(an","(r","(size","(sum","*","*/","+","++l;","++r;","/**","//","0)","0,","0;","1;","2","406.",":","=","==",">=","@param","@return:","adjust","an","array","array.","b","bound","c","class","code","control","d","descpretion.","e","each","eqaul","f","fulfil","g","h","here","https://www.lintcode.com/problem/minimum","implementation,","int","integ","l","l,","less","lintcod","main","minimum","minimumsize(vector","movement","name","note:","nums.size();","nums:","nums[l];","pointer","pointers,","prefix","prefix[l],","prefix[r]","problem","procedure,","public:","r","real","repres","return","s)","s);","s,","s:","scan","singl","size","slide","smaller","solut","std::min(ans,","std::numeric_limits::max())?","std::numeric_limits::max();","subarray","sum","sum/descript","time,","tri","us","varabl","window","window);","window.","write","{","}","};"],"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":["&nums,","(int","(valu","*","*/","/**","//","0","0;","1","2","3","5","6","911.",";","=","@param","@return:","an","array","class","code","equal","hashtable(key","here","https://www.lintcode.com/problem/maximum","index)","int","int_min;","k","k)","k/descript","k:","length","lintcod","map;","maximum","maxsubarraylen(vector","n","nums.size();","nums:","prefix","problem","public:","size","solut","std::unordered_map","subarray","sum","sum)","target","valu","write","{"],"Prefix Sum and Subarray/Maximum Subarray.html":["&nums)","(int","(local","*","*/","+=","/**","//","0;","41.",":","=","@param","@return:","an","class","code","here","https://www.lintcode.com/problem/maximum","indic","int","integ","lintcod","list","local","local);","max","maximum","maxsubarray(vector","num","num;","nums)","nums:","nums[0];","problem","public:","solut","std::max(ans,","subarray","subarray/descript","sum","write","{"],"Prefix Sum and Subarray/Maximum Submatrix.html":["&","&matrix)","(a1","(int","(num_c","(num_r","*","*/","+",",",".","/**","//","0","0)","0);","0,","0;","944.",";","=","==","=>",">","@param","@return:","a,","a1","a2","a3","ak","an","array)","b","b1","b2","b3","bk","bn","c1","c1)","c2","c3","ck","class","cn","code","d1","d2","d3","dn","given","here","https://www.lintcode.com/problem/maximum","int","j","largest","lintcod","matrix","matrix.size();","matrix:","matrix[0].size();","maximum","maxsubmatrix(vector>","num_c","num_r","possibl","problem","public:","return","s1","s2","s3","sk","sn","solut","std::numeric_limits::min();","submatrix","submatrix/descript","sum","syn(num_r,","write","{","}"],"Prefix Sum and Subarray/Continuous Subarray Sum.html":["&a)","(end","(n","*","*/","+","++end;","/*","/**","//","0)","0,","0;","1,","1};","402.","=","==",">","@param","@return:","a,","a.size();","a:","a[0],","array","b","bgn","bgn;","class","code","continu","continuoussubarraysum(vector","end","end;","first","here","https://www.lintcode.com/problem/continu","includ","index","int","integ","last","lintcod","list","max","max)","max_bgn","max_end","n","number","problem","public:","return","solut","subarray","sum","sum/descript","sum;","vector","write","{","}"],"Prefix Sum and Subarray/Continuous Subarray Sum II.html":["&","&&","&a)","(bgn","(end","(i","(j","(min.bgn","(sum","*","*/","+","++end;","/*","/**","//","0","0)","0,","0;","1","1)","1.","1;","2","403.",":","=","==","=>",">","@param","@return:","a:","aforement","array","array,","bgn","bgn(bgn),","bgn,","bgn;","boundari","class","code","compar","continu","continuoussubarraysumii(vector","cyclic","denot","e.g:","end","end(end),","end,","end;","end};","exce","finally,","findmax(const","first","gener","handl","here","however,","https://www.lintcode.com/problem/continu","ii","ii/description?_from=ladder&&fromid=4","impli","includ","index","input","int","integ","j).","j,","last","lintcod","list","locat","max","max)","max.end};","max_bgn","max_end","maximum","min","min);","min.bgn","min.end","min.sum)","min_bgn","min_end","min_end,","minimum","n","n)","need","negative.","normal","number","nums,","nums[0],","private:","problem","public:","range.","real","record","record(int","record(min_bgn,","result","return","s(i,","s0","s1","s2","scenario","scenarios.","si","sj","sn","solut","span","std::vector&","struct","subarray","subarray,","subarray.","subract","sum","sum(sum)","sum)","sum;","then,","thu","thus,","total","vector","write","{","{bgn,","{max.bgn,","}","};"],"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":["&prices)","(int","(size","*","*/","/**","//","0)","0;","1","149.",";","=","==","@param","@return:","array","best","buy","class","code","given","here","https://www.lintcode.com/problem/best","int","integ","lintcod","maximum","maxprofit(vector","min","opt","prices.size();","prices:","prices[0];","problem","profit","public:","return","sell","size","solut","stock","stock/descript","time","write","{","}"],"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":["&prices)","(0,","(2,","(end","(n","*","*/",",","/**","//","0)","0,","0;","1","1),","150.","1;","2","4","5","6","6)","7",":","=","==","@param","@return:","_____________","aggreg","an","array","ascend","best","bgn","buy","class","code","end","given","here","https://www.lintcode.com/problem/best","ii","ii/descript","int","integ","lintcod","maximum","maxprofit(vector","n","objective:","prices.size();","prices:","problem","profit","public:","return","segments.","segments:","sell","solut","stock","time","valu","write","{","}"],"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":["&prices)","(int","*","*/","+","/**","//","0;","151.",":","=","@param","@return:","^^^^^^^^","array","best","buy","buy_1st","buy_1st,","buy_2nd","buy_2nd,","buy_first","buy_second","class","code","conduct","day.","first","given","here","https://www.lintcode.com/problem/best","iii","iii/descript","int","integ","ith","lintcod","maximum","maxprofit(vector","max{","price","price);","price:","prices)","prices:","price}","problem","profit","public:","purchase.","return","second","sell","sell_1st","sell_1st,","sell_1st:","sell_2nd","sell_2nd,","sell_2nd:","sell_first","sell_second","sell_second;","selling.","solut","std::max(buy_first,","std::max(buy_second,","std::max(sell_first,","std::max(sell_second,","std::numeric_limits::min();","stock","time","write","{","}","};"],"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":["&prices)","(int","(k","(n","(price[j]","*","*/","+","+=","/","/*","/**","//","0","0)","0));","0;","1","1,","1]","1])","1];","1][h]","1][j]","2)","393.",";","=","==","=>",">=","@param","@return:","array","best","buy","cach","class","code","conduct","day,","days.","determin","dp(k","dp[i","dp[i][j","dp[i][j]","dp[i][j]:","first","here","https://www.lintcode.com/problem/best","int","integ","iv","iv/descript","j","jth","k","k,","k:","lintcod","max","maxdiff","maxdiff,","maximum","maxprofit(int","max{","n","n^2)","o(k","o(kn)","optim","otherwise,","price[h])","price[j]","price[j]},","prices.size();","prices:","prices[i","prices[i]","problem","profit","public:","return","sell","solut","std::vector(n,","std::vector>","stock","sum","sum;","time","transact","updat","valu","vector","write","{","|","||","}"],"Knapsack Problem/Backpack I.html":["&a)","(int","*","*/","+","/**","//","0));","1","1,","1]);","1][j","1][j],","1][j];","1]]","92",";","=",">","@param","@return:","a:","a[i","a[i]","aggreg","backpack","backpack(int","class","code","continue;","denot","dp(n","dp[i","dp[i][j]","dp[i][j]:","dp[n][m];","first","given","here","hold","https://www.lintcode.com/problem/backpack/descript","int","integ","item","items.","j","j)","knapsack","lintcod","m","m,","m:","maxim","maximum","n","problem","public:","return","size","solut","std::max(dp[i","std::vector(m","unit","us","vector","weight","write","{","|","}","};"],"Knapsack Problem/Backpack II.html":["&a,","&v)","(int","*","*/","+","/**","//","0));","1","1,","125","1]","1][j","1][j]);","1][j];","1]],",";","=",">","@param","@return:","a:","a[i","a[i]","aggreg","backpack","backpackii(int","class","code","continue;","denot","dp(n","dp[i","dp[i][j]","dp[i][j]:","dp[n][m];","first","given","here","hold","https://www.lintcode.com/problem/backpack","ii","ii/descript","int","integ","item","items.","j","j)","knapsack","lintcod","m","m,","m:","maxim","maximum","n","problem","public:","return","size","solut","std::max(","std::vector(m","unit","us","v:","v[i","v[i]","valu","vector","w[i]","weight","write","{","|","}","};"],"Knapsack Problem/Backpack III.html":["&a,","&v,","(int","*","*/","+","/**","//","0));","1","1,","1]","1][j],","1][j];","1]]);","440",";","=",">","@param","@return:","a:","a[i","aggreg","array","backpack","backpackiii(vector","class","code","continue;","dp(n","dp[i","dp[i][j","dp[i][j]","dp[i][j]:","dp[n][m];","first","here","hod","https://www.lintcode.com/problem/backpack","iii","iii/descript","int","integ","item","items.","j","j)","knapsack","lintcod","m)","m:","maxim","multipl","note:","problem","public:","return","solut","std::max(dp[i","std::vector(m","times.","unit","us","v:","v[i","valu","vector","w[i]","weight","write","{","|","}","};"],"Knapsack Problem/Backpack IV.html":["&nums,","(int","*","*/","+","/**","//","0","0));","1,","1][j]","1][j];","1]];","562",";","=",">","@param","@return:","array","backpack","backpackiv(vector","class","code","continue;","dp(n","dp[i","dp[i][j","dp[i][j]","dp[i][j]:","dp[n][target];","duplic","fill","first","here","hold","https://www.lintcode.com/problem/backpack","int","integ","item","items.","iv","iv/descript","j","j)","knapsack","lintcod","multipl","note:","number","numbers,","nums:","nums[i","nums[i]","posit","problem","public:","return","solut","std::vector(target","target)","target:","times.","unit","us","way","weight","write","{","|","}","};"],"Knapsack Problem/Backpack V.html":["&nums,","(int","*","*/","+","/**","//","0","0));","1,","1][j","1][j]","1][j];","1]];","563",";","=",">","@param","@return:","array","backpack","backpackv(vector","class","code","continue;","dp(n","dp[i","dp[i][j]","dp[i][j]:","dp[n][target];","fill","first","here","hold","https://www.lintcode.com/problem/backpack","int","integ","items.","j","j)","knapsack","lintcod","number","nums:","nums[i","nums[i]","posit","problem","public:","return","solut","std::vector(target","target)","target:","unit","us","v","v/descript","way","weight","write","{","|","}","};"],"Knapsack Problem/Backpack VI.html":["&nums,","(int","*","*/","+","+=","/**","//","0","0);","1","1,","1;","564",";","=",">=","@param","@return:","array","backpack","backpackvi(vector","class","code","combin","continue;","dp(target","dp[0]","dp[i","dp[i]","dp[i]:","dp[target];","duplic","here","https://www.lintcode.com/problem/combin","i)","int","integ","iv","iv/descript","lintcod","num];","number","numbers,","numbers.","nums:","nums[j]","nums[j]}","posit","problem","public:","return","solut","sum","target)","target:","up","us","vi","way","write","{","|","}","};"],"Knapsack Problem/K Sum.html":["&a,","(int","(k","*","+","/**","//","0","0)));","1,","1][h","1][j","1][j][h]","1][j][h];","1]];","89",";","=",">>","@param","a:","a[i","a[i]","array","class","code","compos","continue;","dp(n","dp[i","dp[i][j][h]","dp[i][j][h]:","dp[n][k][target];","first","h)","h.","here","https://www.lintcode.com/problem/k","int","integ","j","k","k,","k:","lintcod","number","posit","problem","public:","return","solut","std::vector(target","std::vector>(","sum","sum/descript","target)","us","way","write","{","|","}","};"],"Matrix Chain Multiplication/Stone Game.html":["&a)","(int","*","*/","+","/**","//","0));","0);","1","1,","1]","1][j]","476.","::max();",";","=",">","@param","@return:","a:","array","class","code","cost","dp(n,","dp[i][j]","dp[i][j]:","dp[i][k]","dp[k","game","game/descript","here","https://www.lintcode.com/problem/ston","int","integ","ith","j)","jth","k","lintcod","merg","min","minimum","pile","pile.","prefix(n","prefix[i];","prefix[j","problem","public:","solut","start","std::vector(n,","stone","stonegame(vector","sum","sum(i,","write","{","}"],"Matrix Chain Multiplication/Stone Game II.html":["&a)","(int","*","*/","+","/**","//","0","0));","0);","1","1,","1]","1][j]","2","593.","::max();",";","=","=>",">","@param","@return:","a:","array","b","break","c","class","code","consecut","cost","d","dp(nn,","dp[i][j]","dp[i][j]:","dp[i][k]","dp[k","e","flatten","game","good","here","https://www.lintcode.com/problem/ston","ii","ii/descript","int","integ","ith","j)","jth","k","lintcod","loop","merg","min","minimum","pile","pile.","prefix(nn","prefix[i];","prefix[j","problem","public:","replicas.","solut","start","std::vector(nn,","stone","stonegame2(vector","sum","sum(i,","way","write","{","}"],"Matrix Chain Multiplication/Burst Balloons.html":["&nums)","(int","*","*/","+","...","....",".......","........","...........","............","/**","//","0));","1","168.","1]","1][j]","1}","2,",";","=","@param","@return:","b","balloon","balloon.","balloons/descript","burst","class","code","coin","consid","dp(n","dp[i][j]","dp[i][j]:","dp[i][k","dp[k","here","https://www.lintcode.com/problem/burst","i>","int","integ","integer,","ith","j).","jth","k","l","last","lintcod","list","max","maxcoins(vector","maximum","nums:","nums[i","nums[j","nums[k]","problem","public:","range(i,","score","secur","solut","std::vector(n","write","{","|","}"],"Fibonacci Sequence/Decode Ways.html":["&s)","'0')","'1')","'2')","('0'","(int","(n","(str[s1]","*","*/","+","+=","...,","/**","//","0","0)","0;","1","1)","1);","1,","1;","1]","1]:","2","2)","2,","2]","2];","4,","512.","6}","8,","9}",":",";","=","==",">","?","@param","@return:","class","code","countonedigit(const","counttwodigits(const","counttwodigits(s,","decod","digit:","digits:","dp(n","dp[i","dp[i]","dp[i]:","dp[n];","encod","end","handl","here","https://www.lintcode.com/problem/decod","i.","index","int","integer,","lintcod","messag","n","number","numdecodings(str","prefix","private:","problem","public:","return","s.length();","s1)","s1,","s2)","s:","s[i","s[i]:","solut","std::string&","std::vector","str,","string,","way","ways/descript","write","{","{0,","{1,","{3,","{7,","}"],"Fibonacci Sequence/Decode Ways II.html":["&s)","(i","(int","(n","*","*****","******","*******","*/","+",",","...,","/**","//","0","0)","0);","0,","0;","1","1)","1,","15","1;","1]","1]:","2","2)","2]","2]:","6","676.","6}","8,","9","9}",":",";","=","==",">","@param","@return:","be","class","code","decod","dp(n","dp[0]","dp[i","dp[i]","dp[i]:","encod","end","given","here","https://www.lintcode.com/problem/decod","ii","ii/descript","int","integ","ith","j","letter.","lintcod","messag","mod(1000000007)","n","number","numdecodings(str","problem","public:","return","s.length();","s:","s[2]:","s[i","s[i]:","solut","solution()","std::vector","substr","way","write","{","{0,","{1,","{3,","{7,","}"],"Fibonacci Sequence/House Robber.html":["&a)","(int","(n","*","*/","+","/**","//","0)","0);","0;","1]","2","2],","392.",";","=","==","@param","@return:","a.size();","a:","a[0];","a[1]);","aggreg","amount","array","class","code","dp(n,","dp[0]","dp[1]","dp[i","dp[i]","dp[i]:","first","here","hous","houserobber(vector","houses.","https://www.lintcode.com/problem/hous","int","integ","lintcod","long","maximum","max{","money","n","neg","non","problem","profit","profit[i]","public:","return","rob","robber","robber/descript","solut","std::max(a[0],","std::vector","tonight","write","{","}"],"Fibonacci Sequence/House Robber II.html":["&nums)","(0,","(1,","(a","(b","(int","(n","*","*/","+","/**","//","0)","0);","0,","0;","1)","1));","1).","1,","1.","1]","1]);","1st","2","2),","2).","2.","2],","534.",";","=","==","=>","@param","@return:","aggreg","amount","array","b","bgn","bgn,","break","c","class","code","d","d)","dp(n,","dp[bgn","dp[bgn]","dp[i","dp[i]","dp[i]:","e","e)","end)","first","gener","here","hous","house,","houserobber2(vector","houses.","https://www.lintcode.com/problem/hous","ii","ii/descript","int","integers.","key","last","lintcod","loop","max","maximum","money","n","n,","neg","non","nums,","nums.size();","nums:","nums[0];","nums[bgn","nums[bgn];","private:","problem","profit","profit[i]","public:","rang","respectively.","return","rob","rob(const","rob(nums,","robber","solut","solv","std::max(nums[bgn],","std::max(rob(nums,","std::vector","std::vector&","subproblem","tonight","within","write","{","}"],"Fibonacci Sequence/House Robber III.html":["(!root)","(memo.count(root)","(root","*","*/","*left,","*right;","+","/","/**","//","0,","0;","1)","535.","=","==",">l",">l]",">left",">left)",">left,",">r",">r]",">right",">right)",">right,",">val","@param","@return:","\\","aggreg","amount","b","binari","c","c.","class","code","d","definit","dp[c","dp[c]","dp[c]:","e","f","g","here","hous","houserobber3(treenod","https://www.lintcode.com/problem/hous","iii","iii/descript","int","l","lintcod","ll","lr","max","max;","maximum","memo)","memo);","memo;","memo[root]","memo[root];","money","null;","private:","problem","profit","public:","r","r);","return","rl","rl,","rob","robber","root","root)","root,","root:","rr","runpostorder(root","runpostorder(root,","runpostorder(treenode*","solut","std::max(root","std::unordered_map","std::unordered_map&","subtre","tonight","tree.","treenod","treenode(int","treenode:","val)","val;","write","{","|","}","};"],"String and Sequence Extremum/Minimum Edit Distance.html":["&s,","&t)","(int","*","*/","+",",","/**","//","0","1","1));","1,","119.","1]","1],","1][j","1][j]",";","=","==","@param","@return:","a[i]","a[i].","b","b[j],","class","code","cost","delet","distanc","distance/descript","dp(n","dp[i","dp[i][i]","dp[i][j","dp[i][j]:","edit","end","here","https://www.lintcode.com/problem/edit","index","insert","int","j.","letter.","lintcod","min","mindistance(str","minimum","ns","nt","number","otherwis","prefix","problem","public:","replac","s.length();","solut","std::vector(nt","std::vector>","steps.","string","t.length();","transform","word1:","word2:","write","{","|"],"String and Sequence Extremum/Longest Common Subsequence.html":["&a,","&b)","(int","*","*/","+",",","/**","//","0));","1","1,","1]","1])","1][j","1][j],","77.",";","=","==","@param","@return:","a(0,","a.size();","a:","a[i]","b","b(0,","b.size();","b:","b[j],","class","code","common","dp(na","dp[i","dp[i][j","dp[i][j]","dp[i][j]:","here","https://www.lintcode.com/problem/longest","i)","int","j).","lc","length","lintcod","longest","longestcommonsubsequence(str","max(dp[i","na","nb","otherwis","prefix","problem","public:","solut","std::vector(nb","std::vector>","string","subsequ","subsequence/descript","write","{","|"],"String and Sequence Extremum/Longest Common Substring.html":["&a,","&b)","(int","*","*/","+",",","/**","//","0","0));","0;","1","1,","1]","1][j","2","79.",";","=","==","@param","@return:","a(0,","a.size();","a:","a[i]","abcd,","an","b","b(0,","b.size();","b:","b[j],","c","cbce","class","code","common","d","dp(na","dp[i","dp[i][j]","dp[i][j]:","e","e.g.:","here","https://www.lintcode.com/problem/longest","i)","int","j).","length","lintcod","longest","longestcommonsubstring(str","na","nb","otherwis","prefix","problem","public:","solut","std::vector(nb","std::vector>","string","substr","substring.","substring/descript","write","{","|"],"String and Sequence Extremum/Longest Palindromic Subsequence.html":["&s)","(int","(n","*","*/","+",",","/**","//","0","0)","0));","0;","1000","1]","1],","1][j","1][j]","2","667.",";","=","==","@param","@return:","class","code","dp(n,","dp[i","dp[i][j","dp[i][j]","dp[i][j]:","end","here","https://www.lintcode.com/problem/longest","index","int","j.","length","lintcod","longest","longestpalindromesubseq(str","maximum","max{","n","otherwis","palindrom","problem","public:","return","s","s.length();","s:","s[i]","s[j],","solut","start","std::vector(n,","std::vector>","subsequ","subsequence'","subsequence/descript","substr","write","{","|","}"],"String and Sequence Extremum/Longest Palindromic Substring.html":["\"\";","&&","&s)","(int","(n","*","*/","+","/**","//","0","0)","0;","1;","1]","1][j","200.",";","=","==","@param","@return:","alreadi","begin","bgn","class","code","data","end","extra","false));","here","https://www.lintcode.com/problem/longest","i;","index","information.","input","int","j","l;","length","lintcod","longest","longestpalindrome(str","lp","lps)","lps);","n","need","offset","palin(n,","palin[i","palin[i][j]","palin[i][j]:","palindrom","palindromic.","problem","public:","record","return","s.length();","s.substr(bgn,","s:","s[i]","s[j]","show","solut","start","std::vector(n,","std::vector>","string","structur","substr","substring,","substring/descript","whether","write","{","}","};"],"String and Sequence Extremum/Longest Increasing Subsequence.html":["&nums)","(cand","(int","(l","(longest","(n","*","*/","+","/**","//","0)","0,","0;","1","1;","2","3","4","5","7","77.",";","=","==",">","@param","@return:","[1]","[2]","[3]","array","cand","cand;","class","code","continue;","dp[0]","here","https://www.lintcode.com/problem/longest","increas","int","integ","l","length","li","lintcod","lis.back())","lis.push_back(nums[0]);","lis.push_back(nums[i]);","lis.size()","lis.size();","lis;","lis[l]","lis[l])","lis[m])","lis[r]","longest","longestincreasingsubsequence(vector","m;","n","nums.size();","nums:","nums[i];","o(nlogn)","problem","public:","r","return","solut","std::vector","subsequ","subsequence)","subsequence/descript","write","{","}","};"],"String and Sequence Extremum/Longest Increasing Substring.html":["&a)","(a[i]","(int","(n","(substring)","*","*/","+","++dp;",",","/**","//","0","0)","0;","1","1.","1;","1]","1])","2","397.",";","=","==",">",">=","@param","@return:","a.size();","a:","a[i","a[i]","an","ans;","array","class","code","continu","current","dp","dp);","dp[i","dp[i]","dp[i]:","end","here","https://www.lintcode.com/problem/longest","i)","i.","increas","index","int","integ","length","lintcod","longest","longestincreasingcontinuoussubsequence(vector","n","otherwis","problem","public:","return","solut","std::max(ans,","subsequ","subsequence/descript","substr","write","{","|","}","};"],"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":["&&","&matrix)","(const","(int","(num_c","(num_r","*","*/","+","/**","//","0","0)","0;","0},","1));","1);","1,","1;","1},","1}})","2d","398.",":",";","=","==",">",">=","@param","@return:","an","ans;","array","bool","class","code","const","continu","directs({{1,","directs;","dp(num_r,","dp[nx][ny]","dp[nx][ny]);","dp[x][y]","dynam","here","https://www.lintcode.com/problem/longest","ii","ii/descript","increas","int","integ","lhs,","lhs.val","lintcod","longest","longestcontinuousincreasingsubsequence2(vector>","matrix","matrix.size();","matrix:","matrix[0].size();","num_c","num_r","nx","ny","operator()","prioriti","private:","problem","program","public:","queue","queue;","record","record&","record(int","recordcompar","recordcompare>","return","rhs)","rhs.val;","solut","solution()","std::max(ans,","std::max(dp[nx][ny],","std::priority_queue,","std::vector(num_c,","std::vector>","struct","subsequ","val(val)","val)","val;","write","x(x),","x,","x;","y(y),","y,","y;","{","{0,","}","};"],"String and Sequence Extremum/Longest Repeating Subsequence.html":["!=","&str)","(int","(n","*","*/","+",",","/**","//","0","0)","0));","0;","1","1,","1]","1],","1][j","1][j]","581.",";","=","==","@param","@return:","class","code","common","dp(n","dp[i","dp[i][j","dp[i][j]","dp[i][j]:","end","found","here","https://www.lintcode.com/problem/longest","index","int","j,","j.","length","lintcod","longest","longestrepeatingsubsequence(str","max{","n","otherwis","otherwise,","prefix","problem","public:","repeat","return","s[i]","s[j],","solut","std::vector(n","std::vector>","str","str.length();","str:","string","subsequ","subsequence/descript","write","{","|","}"],"String Scramble/Distinct Subsequences.html":["&s,","&t)","(int","*","*/","+",",","/**","//","0","0));","1","1,","118.","1]","1][j","1][j]","2","3",";","=","==","@param","@return:","b","charact","class","code","count","distinct","dp(n","dp[i","dp[i][j]","dp[i][j]:","end","form","here","https://www.lintcode.com/problem/distinct","int","ith","jth","lintcod","ns","nt","number","numdistinct(str","otherwis","posit","position.","prefix","problem","public:","r","remov","s","s.length();","s:","s[i]","solut","std::vector(nt","std::vector>","string","subsequ","subsequences/descript","t","t.length();","t:","t[j],","way","write","{","|"],"String Scramble/Interleaving String.html":["!=","&&","&s1,","&s2,","&s3)","(i","(int","(n1","(s1[i]","(s2[j]","*","*/","+","/**","//","1","1,","1])","1][j])","29.",";","=","==","@param","@return:","bool","charact","class","code","determin","dp(n1","dp[0][0]","dp[i","dp[i][j","dp[i][j]","dp[i][j]:","false));","false;","first","form","here","https://www.lintcode.com/problem/interleav","int","interleav","isinterleave(str","j","j)","j]","lintcod","n1","n2","n3","n3)","problem","public:","return","s1","s1.length();","s1:","s2","s2.","s2.length();","s2:","s3","s3.length();","s3:","s3[i","solut","std::vector(n2","std::vector>","string","string/descript","true;","us","whether","write","{","||","}"],"String Scramble/Scramble String.html":["!=","\"abc\",","\"abcde\".","\"de\",","\"deabc\"","&&","&s1,","&s2)","(int","(memo.count(s)","(s","(s1.length()","*","*/","+","/**","//","0","1","1)","2","430.",";","=","==","=>","@param","@return:","anoth","atgre,","auto&","bool","cach","canscramble(const","canscramble(s1,","check","class","code","const","decomps","deriv","determin","eatgr","equal:","example,","false;","first.","gener","given","great","here","https://www.lintcode.com/problem/scrambl","int","interexchan","interexchang","isscramble(str","lintcod","memo)","memo);","memo;","memo[s].count(t)","memo[s][t]","memo[s][t];","n","one!","part","prefix","prefix,","private:","problem","public:","respect","result","return","s","s,","s.length();","s1","s1:","s2","s2,","s2.length())","s2:","scrambl","solut","sp","ss","std::unordered_map>","string","string/descript","strings,","substr","suffix,","suffix.","t","t)","t,","tgrea","tp","tp,","true;","ts","ts,","version","whether","write","{","}"],"Game Theory/Coins in a Line.html":["(int","(l)3","(n","(w)2","*","*/","+","/","/**","//","0)","1","1(w)","1,","1.","1]","2","2(w)","2)","2.","2]","3","394.","4(w)",";","=","==","@param","@return:","\\","alway","b","bool","boolean","class","code","coin","competitor","dp(n","dp[1]","dp[2]","dp[i","dp[i]","dp[i]:","equal","fals","false);","false;","first","firstwillwin(int","game","game.","go","guarante","hard","here","https://www.lintcode.com/problem/coin","integ","line","line.","line/descript","lintcod","losabl","lose","matter","n","n)","n:","player","problem","public:","push","return","solut","state,","state.","std::vector","step","then,","tries,","true","true;","whether","win","winnabl","winnable.","write","{","||","}"],"Game Theory/Coins in a Line II.html":["&values)","(i+1)th","(int","(n","(sum[i","*","*/","+",",","/**","//","0","0)","0);","1","1)","1.","1]","1])","1];","2","2)","2.","2]","2])","2];","3","395.",";","=","==",">",">=","@param","@return:","aggreg","b","b,","bool","boolean","choices.","class","code","coin","coin,","competitor","cover","current","dp(n,","dp[0]","dp[i","dp[i]","dp[i]:","dp[n","equal","false;","first","firstwillwin(vector","here","https://www.lintcode.com/problem/coin","i)","ii","ii/descript","int","integ","iteration.","ith","last","left.","line","lintcod","max","maximum","n","next","one.","person","pick","plan_a","plan_b","plan_b);","player","problem","public:","remain","remained,","return","sa","sa:","sb''.","sb'.","sb:","solut","std::max(plan_a,","std::vector","sum(i","sum(i)","sum(i):","sum(n,","sum[0];","sum[i","sum[i]","sum[n","total","true","true;","valu","values.size();","values:","values[i","values[i]","values[i];","values[n","vector","win","write","{","|","||","}","};"],"Game Theory/Coins in a Line III.html":["&values)","(int","(j","(n","*","*/","+","/**","//","0","0)","0));","1)","1,","1.","1]","1];","1][j]","2","2.","396.",";","=","==","@param","@return:","aggreg","b","b,","bool","boolean","choices.","class","code","coin","coin,","competitor","cover","current","dp(n,","dp[i","dp[i][j","dp[i][j]","dp[i][j]:","equal","false;","first","firstwillwin(vector","here","https://www.lintcode.com/problem/coin","iii","iii/descript","int","integ","iteration.","ith","j","j)","j):","jth","left.","line","lintcod","max","maximum","n","next","one.","person","pick","player","problem","public:","remain","remained,","return","sa","sa:","sb''.","sb'.","sb:","solut","std::vector(n,","std::vector>","sum(i","sum(i,","sum(n,","sum[0][n","sum[i][j]","total","true","true;","valu","values.size();","values:","values[i]","values[j]","vector","win","write","{","|","}","};"],"Iterator/Binary Tree Iterative Preorder Traversal.html":["(!root)","(!stk.empty())","(curr","*","*/","*left,","*right;","/**","//","66.","=",">left",">left)",">left);",">right",">right)",">right);",">val",">val);","@param","@return:","ans.push_back(curr","ans;","arraylist","auto","binari","class","code","contain","curr","definit","here","https://www.lintcode.com/problem/binari","int","iter","lintcod","node","null;","preorder","preordertraversal(treenod","problem","public:","return","root)","root:","solut","std::stack","std::vector","stk.pop();","stk.push(curr","stk.push(root);","stk.top();","stk;","travers","traversal/descript","tree","treenod","treenode(int","treenode:","val)","val;","values.","vector","write","{","{};","}","};"],"Iterator/Binary Tree Iterative Inorder Traversal.html":["(!root)","(!stk.empty())","(curr)","*","*/","*left,","*right;","/**","//","67.","=",">left",">left;",">right",">right;",">val",">val);","@param","@return:","ans.push_back(curr","ans;","arraylist","auto","binari","class","code","contain","curr","definit","here","https://www.lintcode.com/problem/binari","inord","inordertraversal(treenod","int","iter","lintcod","node","null;","problem","public:","return","root)","root:","root;","solut","std::stack","std::vector","stk.pop();","stk.push(curr);","stk.top();","stk;","travers","traversal/descript","tree","treenod","treenode(int","treenode:","val)","val;","values.","vector","write","{","{};","}","};"],"Iterator/Binary Tree Iterative Postorder Traversal.html":["(!root)","(!stk.empty())","(root","(root)","(stk.top()","*","*/","*left,","*right;","/**","//","68.","=","==",">left",">left)",">left;",">right",">right,",">right;",">val",">val);","@param","@return:","ans.push_back(curr","ans;","arraylist","auto","binari","class","code","contain","curr","curr)","definit","findsuccessor(root,","findsuccessor(stk.top()","findsuccessor(treenode*","here","https://www.lintcode.com/problem/binari","int","iter","lintcod","node","null;","postord","postordertraversal(treenod","private:","problem","public:","return","root","root)","root,","root:","solut","std::stack","std::stack&","std::vector","stk)","stk);","stk.pop();","stk.push(root);","stk.top();","stk;","travers","traversal/descript","tree","treenod","treenode(int","treenode:","val)","val;","values.","vector","void","write","{","{};","}","};"],"Iterator/Flatten Binary Tree to Linked List.html":["(!root)","(last_l)","(last_r)","*","*/","*left,","*right;","/","/**","//","1","1:","2","2:","3","3*","3:","4","4*","453.","4:","5","6","6*","=","=>",">left",">left);",">left;",">right",">right);",">right;",">val","@param","@return:","\\","auto","b","binari","c","case","child","children","class","code","definit","demo:","flatten","flatten(treenod","here","https://www.lintcode.com/problem/flatten","int","last","last_l","last_l;","last_r","last_r;","left","link","lintcod","list","list/","node.","noth","null;","nullptr;","private:","problem","public:","return","right","root","root)","root:","root;","runpostorder(root","runpostorder(root);","runpostorder(treenode*","solut","tree","treenod","treenode(int","treenode*","treenode,","treenode:","two","val)","val;","void","write","{","}","};"],"Iterator/Flatten Nested List.html":["!=","&getlist()","&nestedlist)","(!list.empty())","(!nestedlist.empty())","(!stk.empty())","(bgn","*","*/","++bgn;","/**","//","22.","=",">getinteger());",">getlist());",">isinteger())","@param","@return","allow","ans.push_back(bgn","ans;","auto","auto&","bgn","bool","break;","class","code","const","const;","const_cast&>(bgn","creat","end","end)","end));","flatten","flatten(vector","getinteger()","here","hold","holds,","https://www.lintcode.com/problem/flatten","implement","int","integ","integer,","interfac","isinteger()","it,","lintcod","list","list.","list.end()));","list/descript","lists.","nest","nestedinteg","nestedlist","nestedlist.end()));","problem","public:","result","return","singl","solut","specul","std::stack::iterator,","std::vector","std::vector::iterator>>","stk.pop();","stk.push(std::make_pair(bgn,","stk.push(std::make_pair(list.begin(),","stk.push(std::make_pair(nestedlist.begin(),","stk.top();","stk;","top","top.first;","top.second;","true","undefin","vector","write","{","}","};"],"Iterator/Flatten Nested List Iterator.html":["!=","&getlist()","&nestedlist)","(!list.empty())","(!nestedlist.empty())","(!stk.empty())","(bgn","(i.hasnext())","*","*/","++bgn;","/**","//","528.","=",">getinteger();",">getlist());",">isinteger())","@return","allow","auto","auto&","bgn","bool","cach","cache;","call","class","code","const","const;","const_cast&>(bgn","creat","data","element","end","end)","end));","fals","false;","flatten","getinteger()","hasnext()","here","here.","hold","holds,","https://www.lintcode.com/problem/flatten","i(nestedlist);","implement","initi","instanti","int","integ","integer,","interfac","isinteger()","it,","iter","iterator/descript","lintcod","list","list.","list.end()));","lists.","more","nest","nestedinteg","nestediter","nestediterator(vector","nestedlist.end()));","next","next()","object","private:","problem","public:","result","return","singl","solut","specul","std::stack::iterator,","std::vector::iterator>>","stk.pop();","stk.push(std::make_pair(bgn,","stk.push(std::make_pair(list.begin(),","stk.push(std::make_pair(nestedlist.begin(),","stk.top();","stk;","structur","such:","top","top.first;","top.second;","true","true;","undefin","v.push_back(i.next());","vector","write","{","{boolean}","{int}","}","};"],"Iterator/Flatten 2D Vector.html":["(i.hasnext())","(index_row","*","/**","//","2d","601.",":",">","cache;","call","class","cout","data","flatten","here","https://www.lintcode.com/problem/flatten","i(vec2d);","index_col(0),","index_row(0),","initi","instanti","int","lintcod","object","problem","public:","solut","structur","such:","total_col(0),","total_row(vec2d.size()),","vec2d(vec2d)","vec2d)","vec2d;","vector","vector/descript","vector2d","vector2d(vector>&","{","};"],"Iterator/ZigZag Iterator.html":["!=","&&","(bgn_first","(bgn_second","(solution.hasnext())","(turn","*","*/","*/zigzagiterator(vector&","*bgn_first;","*bgn_second;","++bgn_first;","++bgn_second;","/*","/**","//","1d","540.",":","=","==","@param","@return:","bgn_first(v1.begin()),","bgn_first,","bgn_second","bgn_second(v2.begin()),","bgn_second,","bool","cach","cache;","call","char","class","code","end_first","end_first(v1.end()),","end_first)","end_first,","end_second(v2.end()),","end_second)","end_second;","enum","false;","first,","hasnext()","here","https://www.lintcode.com/problem/zigzag","instanti","int","integ","intial","iter","iterator/descript","lintcod","necessari","next","next()","object","ouptut","private:","problem","public:","result","result.push_back(solution.next());","return","second","solut","solution(v1,","std::vector::iter","such:","true","true;","turn","turn(turn::first)","turn::first)","turn::first;","turn::second;","turn;","v1,","v1:","v2)","v2);","v2:","vector","vector&","write","zigzag","zigzagiter","{","}","};"],"Iterator/ZigZag Iterator II.html":["%","(!vec.empty())","(auto&","(bgns[turn]","(solution.hasnext())","(total","(turn","*","*/","*/zigzagiterator2(vector>&","*bgns[turn];","+","++bgns[turn];","++total;","/*","/**","//","0)","0;","1)","1d","541.",":","=","==",">","@param","@return:","bgns.emplace_back(vec.begin());","bgns.erase(bgns.begin()","bgns.push_back(vec.begin());","bgns;","bool","cach","cache;","call","class","code","elem","elem;","ends.emplace_back(vec.end());","ends.erase(ends.begin()","ends.push_back(vec.end());","ends;","ends[turn])","false;","hasnext()","here","https://www.lintcode.com/problem/zigzag","ii","ii/descript","instanti","int","integ","intial","iter","lintcod","list","necessari","next","next()","object","ouptut","private:","problem","public:","result","result.push_back(solution.next());","return","solut","solution(vecs);","std::vector::iterator>","std::vector>","such:","total","total(0),","total;","true","true;","turn","turn(0)","turn(0),","turn);","turn,","turn;","vec","vecs(vecs)","vecs)","vecs:","vecs;","vector","write","zigzag","zigzagiterator2","{","}","};"],"Iterator/Nested List Weight Sum.html":["!=","&getlist()","(!list.empty())","(!stk.empty())","(bgn","*","*/","+","++bgn;","+=","/**","//","0;","1,","551.",":","=",">getinteger()",">getlist());",">isinteger())","allow","auto","auto&","bgn","bgn(bgn),","bgn,","bool","break;","class","code","const","const;","const_cast&>(bgn","const_cast&>(nestedlist);","creat","depth","depth(depth),","depth,","depth;","depthsum(const","end","end(end)","end)","end;","getinteger()","here","hold","holds,","https://www.lintcode.com/problem/nest","implement","input","input.begin(),","input.end()));","int","integ","integer,","interfac","isinteger()","it,","lintcod","list","list.","list.begin(),","list.end()));","lists.","nest","nestedinteg","nestedlist)","problem","public:","record","record(int","result","return","singl","solut","specul","std::move(bgn),","std::move(end)));","std::stack","std::vector::iter","std::vector::iterator&&","stk.pop();","stk.push(record(1,","stk.push(record(depth","stk.push(record(depth,","stk.top();","stk;","struct","sum","sum/descript","sum;","top","top.bgn;","top.depth;","top.end;","true","undefin","vector","vector&","weight","write","{","}","};"],"Iterator/Nested List Weight Sum II.html":["!=","(!list.empty())","(!stk.empty())","(auto&","(bgn","(max_depth","(nestedlist.empty())","*","*/","+","++bgn;","+=","/**","//","0;","1","1);","1,","1]","1],","1]]","2,","2]","2],","905.",":","=","=>",">getinteger(),",">getlist());",">isinteger())","@param","@return:","[1,","[2,","[[1,","adjust","auto","auto&","auto&&","bgn","bgn(bgn),","bgn,","break;","cache)","cache.emplace_back(bgn","cache;","class","code","const_cast&>(bgn","depth","depth(depth),","depth);","depth,","depth;","depthsuminverse(vector","elem","elem.num","elem.weight","element","element(int","end","end(end)","end)","end;","final","gener","here.","https://www.lintcode.com/problem/nest","ii","ii/descript","int","lintcod","list","list.begin(),","list.end()));","max_depth","maximum","nest","nestedinteg","nestedlist)","nestedlist.begin(),","nestedlist.end()));","nestedlist:","num(num),","num,","origin","problem","public:","record","record(int","return","solut","std::max(max_depth,","std::move(bgn),","std::move(end)));","std::stack","std::vector","std::vector::iter","stk.pop();","stk.push(record(1,","stk.push(record(depth","stk.push(record(depth,","stk.top();","stk;","struct","sum","sum;","top","top.bgn;","top.depth;","top.end;","weight","weight(weight)","weight)","weight;","write","{","}","};"],"Binary Tree/Valid Binary Search Tree.html":["!r.is_bst)","!root","&&","(!l.is_bst","(!root","(!root)","(root","*","*/","*left,","*right;","/**","//","95.",":","=",">",">left",">left);",">right",">right)",">right);",">val",">val,","@param","@return:","auto","binari","bool","bst,","class","code","definit","fals","here","https://www.lintcode.com/problem/valid","int","is_bst(is_bst)","is_bst)","is_bst;","isvalidbst(treenod","l","l.max","l.max)","l.min,","lintcod","max(max),","max(std::numeric_limits::min()),","max,","max;","min(min),","min(std::numeric_limits::max()),","min,","min;","null;","private:","problem","public:","r","result","result(bool","result(false);","result(int","result(root","result(true);","result.is_bst;","return","root","root)","root:","runpostorder(root","runpostorder(root);","runpostorder(treenode*","search","solut","struct","tree","tree.","tree/descript","treenod","treenode(int","treenode:","true","true);","val)","val,","val;","valid","write","{","||","}","};"],"Binary Tree/Balanced Binary Tree.html":["!r.balanced)","!root","&&","(!l.balanc","(!root","(!root)","(diff","*","*/","*left,","*right;","+","/**","//","0);","1)","1);","95.",":","=",">",">left",">left);",">right",">right)",">right);",">val","@param","@return:","auto","balanc","balanced(balanced),","balanced,","balanced;","binari","bool","class","code","definit","diff","false.","height(height)","height)","height;","here","https://www.lintcode.com/problem/balanc","int","isbalanced(treenod","l","lintcod","null;","private:","problem","public:","r","r.height)","r.height);","re","record","record(bool","record(false,","record(true,","res.balanced;","return","root","root)","root:","runpostorder(root","runpostorder(root);","runpostorder(treenode*","solut","std::abs(l.height","std::max(l.height,","struct","tree","tree.","tree/descript","treenod","treenode(int","treenode:","true","val)","val;","write","{","||","}","};"],"Binary Tree/Complete Binary Tree.html":["(!queue.empty())","(!root)","(int","(node","*","*/","*left;","*right;","+","/**","//","0","0;","1));","2","2));","958.",":",";","=",">left,",">right)",">right,","binari","bool","check","class","complet","count","counter","definit","https://leetcode.com/problems/check","int","iscompletetree(treenode*","label","label(label)","label)","label;","leetcod","left(null),","left)","level","node(node),","node,","node.","node;","order","problem","public:","queue.push(record(nod","queue.push(record(root,","queue.size();","queue;","record","record(treenode*","return","right(null)","root)","size","solut","std::queue","struct","travers","tree","tree/","treenod","treenode(int","treenode*","true;","val(x),","val;","x)","{","{}","}","};"],"Binary Tree/Maximum Width of Binary Tree.html":["(!queue.empty())","(!root)","(int","(node","*","*/","*left,","*right;","+","/**","//","0","0;","1));","1);","1101.","2","2));",":",";","=",">left",">left,",">right",">right)",">right,",">val","@param","@return:","binari","class","code","definit","given","here","https://www.lintcode.com/problem/maximum","int","int_max;","int_min;","label","label(label)","label)","label;","left)","level","lintcod","max","maximum","min","node(node),","node,","node;","null;","order","problem","public:","queue.push(record(nod","queue.push(record(root,","queue.size();","queue;","record","record(treenode*","return","root","root)","root:","size","solut","std::max(width,","std::queue","struct","travers","tree","tree/descript","treenod","treenode(int","treenode*","treenode:","val)","val;","width","width;","widthofbinarytree(treenod","write","{","}","};"],"Binary Tree/Diameter of Binary Tree.html":["!root","&&","(!root","(!root)","*","*/","*left,","*right;","+","/**","//","0;","1181.","1;","2","=",">left",">left,",">right",">right)",">right,",">val","@param","@return:","an","ans)","ans);","ans;","binari","both","branch","calcul","class","code","collect","combin","conquer","definit","depth","diamet","diameter.","diameterofbinarytree(treenod","diamter","divid","each","essenti","form","here","https://www.lintcode.com/problem/diamet","int","int&","integ","l","l);","left","lintcod","maximum","merg","node","note","null;","path.","pleas","postord","private:","problem","public:","r","r)","r,","r.","return","right","root","root)","root,","root:","runpostorder(root","runpostorder(root,","runpostorder(treenode*","segment","segments,","solut","std::max(ans,","std::max(l,","std::numeric_limits::min();","subtre","then,","therefore,","travers","tree","tree.","tree/descript","treenod","treenode(int","treenode:","val)","val;","write","{","}","};"],"Binary Tree/Minimum Depth of Binary Tree.html":["!root","&&","(!root","(!root)","(root","*","*/","*left,","*right;","+","/**","//","0;","1,","155.","=",">left",">left)",">left,",">right",">right)",">right,",">val","@param","@return:","an","ans)","ans);","ans;","binari","class","code","comparison","definit","depth","h","h,","height","here","https://www.lintcode.com/problem/minimum","int","int&","integ","lintcod","mindepth(treenod","minimum","null;","preorder","private:","problem","public:","return","return;","root","root)","root,","root:","runpreorder(root","runpreorder(root,","runpreorder(treenode*","solut","std::min(h,","std::numeric_limits::max();","travers","tree","tree/descript","treenod","treenode(int","treenode:","val)","val;","void","write","{","}","};"],"Binary Tree/Maximum Depth of Binary Tree.html":["!root","&&","(!root","(!root)","(root","*","*/","*left,","*right;","+","/**","//","0;","1,","97.","=",">left",">left)",">left,",">right",">right)",">right,",">val","@param","@return:","an","ans)","ans);","ans;","binari","class","code","comparison","definit","depth","h","h);","h,","height","here","https://www.lintcode.com/problem/maximum","int","int&","integ","lintcod","maxdepth(treenod","maximum","null;","preorder","private:","problem","public:","return","root","root)","root,","root:","runpreorder(root","runpreorder(root,","runpreorder(treenode*","solut","std::max(ans,","std::numeric_limits::min();","travers","tree","tree.","tree/descript","treenod","treenode(int","treenode:","val)","val;","void","write","{","}","};"],"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":["&&","(root","*","*/","*left,","*right;","/**","//","1311.","=",">",">left",">left,",">right",">right,",">val",">val)","@param","@return:","ancestor","binari","class","code","common","definit","find","here","https://www.lintcode.com/problem/lowest","int","lca","lintcod","lowest","lowestcommonancestor(root","lowestcommonancestor(treenod","node","null;","p","p,","p:","problem","public:","q","q)","q);","q:","return","root","root,","root:","root;","search","solut","tree","tree/descript","treenod","treenode(int","treenode:","val","val)","val;","write","{","}","};"],"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":["&&","(!root)","(l","(l)","(r)","(root","*","*/","*left,","*right;","/*","/**","//","88.","=","==",">left",">left,",">right",">right,",">val","@param","@return:","a,","a:","ancestor","ancestor(lca)","auto","b","b)","b);","b:","binari","binary.","class","code","common","definit","found.","here","https://www.lintcode.com/problem/lowest","int","l","l;","lintcod","lowest","lowestcommonancestor(root","lowestcommonancestor(treenod","nodes.","note","null;","nullptr;","postord","problem","public:","r","r)","r;","return","root","root,","root:","root;","search","solut","travers","tree","tree.","tree/descript","treenod","treenode(int","treenode:","two","val)","val;","work","write","{","||","}","};"],"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":["(curr)","(set.count(curr)","*","*/","*left,","*parent,","*right;","/*","/**","//","1)","474.","=","==",">parent;","@param","@return:","a,","a:","a;","ancestor","auto","b","b)","b:","b;","binari","class","code","common","curr","curr;","definit","here","https://www.lintcode.com/problem/lowest","ii","ii/descript","int","lintcod","lowest","lowestcommonancestorii(parenttreenod","node","nullptr;","parenttreenod","parenttreenode:","problem","public:","return","root","root,","root:","set.insert(curr);","set;","solut","std::unordered_set","tree","val;","write","{","}","};"],"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":["&&","(!root)","(curr.found_a","(l.lca)","(r.lca)","(root","*","*/","*left,","*right;","/*","/**","//","578.",":","=","==",">left",">left,",">right",">right,",">val","@param","@return:","a)","a,","a:","ancestor","ancestor(lca)","auto","b)","b);","b:","binari","binary.","bool","class","code","common","curr.found_a","curr.found_b","curr.found_b)","curr.lca","curr;","definit","found_a(false),","found_a(found_a),","found_a,","found_a;","found_b(false),","found_b(found_b),","found_b,","found_b;","here","https://www.lintcode.com/problem/lowest","iii","iii/descript","int","l","l.found_a","l.found_b","l;","lca(lca)","lca(nullptr)","lca)","lca;","lintcod","lowest","lowestcommonancestor(treenod","nodes.","null;","private:","problem","public:","r","r.found_a;","r.found_b;","r;","re","record","record()","record();","record(bool","res.lca;","return","root","root,","root:","root;","runpostorder(root","runpostorder(root,","runpostorder(treenode*","search","solut","struct","tree","tree.","treenod","treenode(int","treenode*","treenode:","true;","two","val)","val;","write","{","||","}","};"],"Binary Tree/Recover Binary Search Tree.html":["&&","(!src)","(4,","(5,","(curr","(pred","(src","(src)","*","*/","*dst","*left,","*pred","*right;","*src","/**","//","1","1)","2","2)","3","3,","4","4}.","5","691.","=","=>",">",">left",">left)",">left,",">right",">right)",">right,",">val",">val)",">val);",">val,","@param","@return:","anoth","appli","binari","bstswappednode(treenod","case","class","code","consid","curr","curr,","curr.","curr;","definit","discov","dst","dst)","dst);","find","first","given","here","https://www.lintcode.com/problem/recov","inord","int","invers","lintcod","name","null;","nullptr,","nullptr;","number","out","pair,","pairs.","pointer","pred","pred,","pred.","pred;","predecessor","private:","problem","public:","record","recov","return","root)","root:","root;","runinorder(","runinorder(curr","runinorder(root,","search","second","solut","specifically,","src","src,","std::swap(src","swap","time,","travers","tree","tree.","tree/descript","treenod","treenode(int","treenode*","treenode*&","treenode:","trival","us","val)","val;","void","write","wrong!","{","{1,","}","};"],"Expression Parsing/Convert Infix Expression to Postfix Expression.html":["!=","\"(\")","\")\")","\",","&exp)","(","('0'","(const","(d","(stack.top()","(token",")","*","*,","*/","+","+*","+*(","+*(+","+,","+/","/","/**","//","/:","0","0}})","1,","1},","2,","2},","370.",":","==","@param","@return:","ab","abc","abc/","abc/d","abc/de+","abc/de+*+","abc/de+*+f","array","auto&","b","c","class","code","convert","converttorpn(vector","d","e","e)","exp)","express","expression:","f","here","https://www.lintcode.com/problem/convert","infix","lintcod","map({{\"*\",","map;","notat","notation/descript","polish","postfix","problem","public:","revers","rpn.push_back(stack.top());","rpn;","solut","solution()","stack","stack.pop();","stack.push(token);","stack;","std::stack","std::vector","string","symbol","token","vector","write","{","{\"","{\"(\",","{\"+\",","{\"/\",","}","};"],"Expression Parsing/Convert Infix Expression to Prefix Expression.html":["!=","\"(\")","\")\")","\",","&exp)","('0'","(int","(stack.top()","(token","*","*/","/**","//","0","0}})","1","1},","2},","369.",":",";","=","==",">=","@param","@return:","array","auto&","class","code","const","convert","converttopn(vector","exp.size();","exp[i];","express","expression:","here","https://www.lintcode.com/problem/convert","i)","infix","int","lintcod","map({{\"*\",","map;","n","notat","notation/descript","pn.push_back(stack.top());","pn;","polish","prefix","problem","public:","solut","solution()","stack.pop();","stack.push(token);","stack;","std::stack","std::vector","string","token","vector","write","{","{\"","{\"(\",","{\"+\",","{\"/\",","}","};"],"Expression Parsing/Evaluate Postfix Expression.html":["\"","\")","\"*\")","\"+\")","\"/\")","&tokens)","'","');","'*');","'*':","'+');","'+':","'/');","'/':","':","(const","(token","*","*/","+","/","/**","//","424.",":","=","==","@param","@return:","auto&","break;","case","char","class","code","evalrpn(vector","evalu","evaluate(stack,","evaluate(std::stack&","express","here","https://www.lintcode.com/problem/evalu","int","lintcod","notat","notation/descript","op)","op1","op2","op2;","polish","postfix","private:","problem","public:","result","result;","return","revers","solut","stack,","stack.pop();","stack.push(result);","stack.push(std::stoi(token));","stack.top();","stack;","std::stack","switch(op)","token","tokens)","tokens:","valu","void","write","{","}","};"],"Expression Parsing/Evaluate Infix Expression.html":["\",","&expression)","(","(!stk.empty())","('0'","(const","*","*,","*/","+,","/**","//","/:","0","0}})","1","1},","2","2},","368.",":","=","@param","@return:","auto","auto&","class","code","converttorpn(const","converttorpn(expression);","evalu","evaluateexpression(vector","evaluaterpn(const","evaluaterpn(rpn);","evaluation/descript","exp)","express","expression:","here","https://www.lintcode.com/problem/express","infix","int","integ","lintcod","list","map({{\"*\",","map;","precedence)","private:","problem","public:","return","rpn","rpn)","rpn.push_back(stk.top());","rpn;","solut","solution()","std::stack","std::vector","std::vector&","stk.pop();","stk.push(token);","stk;","string","token","write","{","{\"","{\"(\",","{\"+\",","{\"/\",","}","};"],"Expression Parsing/Expression Tree Construction.html":["!stk.empty()","\",","&expression)","(","(!stk.empty())","('0'","(const","*","*,","*/","*left,","*right;","+,","/*","/**","//","/:","0","0}})","1","1},","2","2},","367.",":","=",">left",">right",">symbol","?","@param","@return:","array","auto","auto&","build","build(vector","build/descript","buildtree(const","buildtree(rpn);","class","code","construct","converttorpn(const","converttorpn(expression);","definit","exp)","express","expression:","expressiontreenod","expressiontreenode(str","expressiontreenode*","expressiontreenode:","here","https://www.lintcode.com/problem/express","left","left;","lintcod","map({{\"*\",","map;","null;","nullptr;","precedence)","private:","problem","public:","return","right;","root","rpn","rpn)","rpn.push_back(stk.top());","rpn;","solut","solution()","std::stack","std::unordered_map","std::vector","std::vector&","stk.pop();","stk.push(root);","stk.push(token);","stk.top()","stk;","string","symbol)","symbol;","token","tree","write","{","{\"","{\"(\",","{\"+\",","{\"/\",","}","};"],"Word Puzzle/Word Break.html":["&&","&dict)","&s,","(int","(n","(s.substr(j","*","*/","+","/*","/**","//","0","0)","1","1,","107.",";","=","==","@param","@return:","bool","boolean","break","break/descript","class","code","compos","continue;","dict","dict)","dict:","dictionari","dp(n","dp[0]","dp[i]","dp[i]:","dp[j]","dp[j])","dp[n];","end","false);","here","https://www.lintcode.com/problem/word","i)","i.","int","ith","len);","lintcod","n","posit","prefix","problem","public:","return","s.length();","s.substr(i,","s:","solut","std::vector","string","true;","unordered_set","whether","word","wordbreak(str","words.","write","{","||","}","};"],"Word Puzzle/Word Break II.html":["!=","\"","&s,","&worddict)","(!piece.empty())","(const","(l","(memo.count(str)","(prefix","(s.empty())","(str.empty())","*","*/","+","...","/*","/**","//","0)","1)","582.",":","=","==","=>",">","@param","@return:","ans.push_back(prefix","ans.push_back(prefix);","ans;","auto","auto&","b","bc","bcd","break","c","class","co","cod","code","const","continue;","d","de","dict)","dict,","e","here","https://www.lintcode.com/problem/word","ii","ii/descript","int","intcod","l","l);","li","lin","lint","lintcod","memo)","memo);","memo;","memo[str]","memo[str];","n","nt","ntcode","od","piec","piece);","piece:","possibl","prefix","prefix:","private:","problem","public:","re","res)","return","runbacktracking(","runbacktracking(s,","runbacktracking(suffix,","s:","sentences.","set","solut","std::move(ans);","std::string&","std::unordered_map>","std::unordered_map>&","std::unordered_set&","std::vector","str,","str.length();","str.substr(0,","str.substr(l,","string","suffix","t","tcode","unordered_set","vector","word","word)","word.length();","wordbreak(str","worddict,","worddict:","words.","write","{","{\"\"};","{};","||","}","};"],"Word Puzzle/Word Break III.html":["(const","(int","(s.substr(j","(word","*","*/","+","+=","/*","/**","//","0","0);","1,","1;","683.",":",";","=","==","@param","@return:","[](char","auto&","break","ch)","class","code","continue;","decompos","dict)","dict.emplace(std::move(norm));","dict;","dp(n","dp[0]","dp[i","dp[i]","dp[i]:","dp[i];","dp[j],","dp[n];","end","here","https://www.lintcode.com/problem/word","iii","iii/descript","int","ith","j)","l))","l]","lintcod","n)","norm(word);","norm.begin(),","norm.end(),","number","offset.","possibl","prefix","problem","public:","return","s,","s.substr(i,","sentences.","set","solut","std::string","std::tolower(ch);","std::transform(norm.begin(),","std::vector","string","sum","unordered_set&","way","word","wordbreak3(string&","words)","write","{","}","});","};"],"Binary Approximation/Sqrt.html":["(l","(r","*","*/","+","/**","//","1","1,","141.",":","=",">","?","@param","@return:","class","code","here","https://www.lintcode.com/problem/sqrtx/descript","int","integ","l","lintcod","m)","m;","problem","public:","r","r;","return","solut","sqrt","sqrt(int","sqrt(x)","write","x","x)","x:","x;","{","}","};"],"Binary Approximation/Sqrt II.html":["(l","(x","*","*/","+","/","/**","//","0)","0;","1","1)","10","1;","1e","586.",":","=","==",">",">=","?","@param","@return:","class","code","doubl","here","https://www.lintcode.com/problem/sqrtx","ii","ii/descript","l","l;","lintcod","m)","m;","problem","public:","r","r)","return","root","solut","sqrt(doubl","sqrt(x)","squar","write","x","x)","x:","{","}","};"],"Binary Approximation/Wood Cut.html":["&","&l,","(countsmallpieces(l,","(int","(l","(l.empty()","(len","*","*/","+","+=","...","/","/**","//","0)","0;","1","1,","183.","1;","2",":","=","==",">","?","@param","@return:","abov","approach","approxim","besides,","binari","class","code","count","count;","cut","cut/descript","equal","find","fuction","given","gradual","here","https://www.lintcode.com/problem/wood","ideal","int","integ","k","k)","k.","k:","l","l)","l,","l1/","l2/","l:","l[i]","len","len;","length","lintcod","lmax","ln/","m;","maximal.","maximum","n","need","o(nlogl)","piec","problem","public:","r","r)","return","s","s)","s:","s;","small","solut","this,","us","wood","woodcut(vector","write","{","||","}","};"],"Binary Approximation/Copy Books.html":["&","&books,","(book","(books.empty()","(int","(l","(left","*","*/","+","+=","/**","//","0)","0;","1","1,","1;","437.",":","=","==",">","@param","@return:","acquir","algorithm.","approximation,","array","binari","book","book;","books)","books,","books/descript","boost","candid","check","class","code","copi","copier","copiers,","copybooks(vector","estim","false;","find","finish","given","gradual","hence,","here","however,","https://www.lintcode.com/problem/copi","ideal","increas","int","integ","k","k)","k:","l","left","lintcod","n","need","number","o(nlogs)","o(ns)","page","pages:","perform","period","period)","period,","period.","period;","problem","public:","r","return","s","s.","shortest","slowest","solut","solution.","still","sum","t","t,","thu","time","total","whether","work","work.","write","{","||","}"],"Binary Approximation/Copy Books II.html":["&times)","(int","(l","(times.empty()","*","*/","*=","+","/**","//","0)","0;","1","1;","438.",":times)","=","==","@param","@return:","acquir","algorithm.","approximation,","array","binari","book","books,","boost","candid","check","class","code","copi","copier","copiers,","copybooksii(int","estim","find","finish","given","gradual","hence,","here","however,","https://www.lintcode.com/problem/copi","ideal","ii","ii/descript","increas","int","integ","job.","k","l","lintcod","n","n,","n:","n;","need","number","o(nlogs)","o(ns)","page","perform","period","period.","problem","public:","r","return","s","s.","shortest","solut","solution.","std::max(r,","still","t","t,","task","thu","time","time);","times:","total","vector","whether","write","{","||","}","};"],"Binary Approximation/Find the Duplicate Number.html":["&nums)","(countnumber(nums,","(n","(p","(x","*","*/","+","...,","/**","//","1","1)","1),","1,","183.","2,","3","=",">=","@param","@return:","amount","array","base","between","bound","class","code","contain","cut","cut/descript","decras","divid","duplic","duplicate.","find","findduplicate(vector","here","hole","https://www.lintcode.com/problem/wood","int","integ","know","l","l)","lintcod","m","m;","n","number","numbers,","nums:","on","otherwise,","p","p,","p:","pigeon","portions.","problem","public:","r","return","solut","suppos","target.","theory,","upper","wood","write","{","|","}"],"Binary Approximation/Maximum Average Subarray II.html":["&nums,","(a[i]","(a[j]","(int","(j","(l","(n","(nums[i])","(nums[i]));","*","*/","+","+=",",","...","/","/**","//","0","0)","0;","1","1)","1e","5","617.",";","=","==","=>",">=","@param","@return:","a[i]","a[j]","approximation,","array","averag","b[i]","b[j]","binari","check","class","code","doubl","equal","find","here","https://www.lintcode.com/problem/maximum","ii","ii/descript","int","integ","j","k","k)","k:","k])","l","l_sum","l_sum);","less","lintcod","max","maxaverage(vector","maximum","min","min_l_sum","min_l_sum)","min_l_sum;","n","neg","number","nums.size();","nums:","nums[0],","nums[0];","posit","possibl","problem","public:","r","r_sum","return","solut","static_cast(nums[i","static_cast(nums[i])","static_cast(nums[i]));","std::max(r,","std::min(min_l_sum,","subarray","sum","t","t)","t.","transform","true;","us","whose","write","x;","{","|","||","}","};"],"Sweep Line/Number of Airplanes in the Sky.html":["&airplanes)","(const","(lhs.time","*","***","*******","*******************","*/","/**","//","0","1","10","2","3","391.","4","5","6","7","8","9",":","=","==",">end",">start","@param","@return:","[]","airplan","airplanes)","airplanes:","array","auto&","char","class","classs","code","const","count","countofairplanes(vector","definit","end)","end;","event::land));","event::take_off));","here","https://www.lintcode.com/problem/numb","int","interv","interval(int","interval:","lhs,","lhs.type","lintcod","number","problem","public:","record","record(int","records.end(),","records.push_back(record(airplane.end,","records.push_back(record(airplane.start,","records;","return","rhs)","rhs.time)","ski","sky.","sky/descript","solut","start,","start;","std::sort(records.begin(),","std::vector","struct","time(time),","time,","time;","type(type)","type)","type;","write","{","}","};"],"Sweep Line/Time Intersection.html":["&seqa,","&seqb)","(const","(count","(lhs.time","(rec.ev","*","***","***********","**************","*/","++count;","...","/**","//","0;","1","100","2","2)","3","4","5","6","821.",":","=","==",">end",">start","@param","@return:","[]","ans.push_back(interval);","ans;","auto&","char","class","classs","code","const","count","count;","definit","end)","end;","enum","event","event(event)","event)","event::log_in)","event::log_in));","event::log_out));","event;","here","https://www.lintcode.com/problem/tim","int","intersect","intersection/descript","interv","interval(int","interval.end","interval.start","interval:","interval;","lhs,","lhs.event","lintcod","list","log_in","log_out,","period","private:","problem","public:","rec","rec.time;","record","record(int","recs)","recs.end(),","recs.push_back(record(seq.end,","recs.push_back(record(seq.start,","recs;","return","rhs)","rhs.time)","seq","seqa)","seqa:","seqb)","seqb:","solut","start,","start;","std::sort(recs.begin(),","std::vector","struct","time","time(time),","time,","time;","timeintersection(vector","vector","write","{","}","};"],"Sweep Line/Meeting Rooms.html":["&intervals)","(const","(lhs.start","(n","*","*/","/**","//","0)","920.","=","==",">end",">start","@param","@return:","[]","array","attend","bool","canattendmeetings(vector","class","classs","code","const","definit","end)","end;","here","https://www.lintcode.com/problem/meet","int","interv","interval&","interval(int","interval:","intervals.end(),","intervals.size();","intervals:","lhs,","lhs.end","lintcod","meet","n","person","problem","public:","return","rhs)","rhs.start)","room","rooms/descript","solut","start,","start;","std::sort(intervals.begin(),","time","true;","write","{","}"],"Sweep Line/Meeting Rooms II.html":["&intervals)","(const","(lhs.time","*","****","******************","*/","/**","//","0","10","15","20","25","30","5","919.",":","=","==",">end",">start","@param","@return:","[]","array","auto&","char","class","classs","code","confer","const","definit","end)","end;","event::bgn));","event::end));","here","https://www.lintcode.com/problem/meet","ii","ii/descript","int","interv","interval(int","interval:","intervals)","intervals:","lhs,","lhs.type","lintcod","meet","minimum","minmeetingrooms(vector","number","problem","public:","record","record(int","recs.end(),","recs.push_back(record(interval.end,","recs.push_back(record(interval.start,","recs;","requir","return","rhs)","rhs.time)","room","solut","start,","start;","std::sort(recs.begin(),","std::vector","struct","time","time(time),","time,","time;","type(type)","type)","type;","write","{","}","};"],"Data Structure Design/Trie.html":["&prefix)","&word)","(char","(curr","(prefix","*","*/","/*","//","0)","442.",":","=","==",">branch.count(ch)",">branch[ch]",">branch[ch];",">is_word",">is_word;","@param","@return:","auto","bool","branch;","ch","class","code","curr","false;","given","here","https://www.lintcode.com/problem/impl","implement","insert(str","intial","is_word(false)","is_word;","lintcod","necessari","noth","prefix","prefix)","prefix.","prefix:","private:","problem","public:","return","root(std::make_shared())","root;","search(str","solut","start","startswith(str","std::make_shared();","std::shared_ptr","std::unordered_map>","string","struct","tree)","tree/descript","trie","trie()","trie.","trienod","trienode()","true;","void","word","word)","word:","write","{","}","};"],"Data Structure Design/Insert Delete GetRandom.html":["%","(index","(refs.count(val)","*","*/","/*","/**","//","0)","1)","1;","657.","=","==","@param","@return:","alreadi","bool","call","class","clean","code","contain","delet","element","element.","entries.","fals","false;","getrandom","getrandom()","here","https://www.lintcode.com/problem/insert","index","index;","insert","insert(int","instanti","int","intial","last","necessari","new","number","nums.pop_back();","nums.push_back(val);","nums.size()","nums.size();","nums;","nums[index]);","nums[index];","o(1)","o1/descript","obj","obj.getrandom();","obj.insert(val);","obj.remove(val);","object","otherwise,","param","private:","problem","public:","random","random()","randomizedset","randomizedset()","randomizedset();","refs.erase(val);","refs;","refs[nums[index]]","refs[val]","refs[val];","relev","remov","remove(int","return","set","simpli","solut","specifi","srand(time(nullptr));","std::swap(nums.back(),","std::unordered_map","std::vector","structur","such:","swap","true","true;","updat","val)","val:","valu","vector,","want","write","{","}","};"],"Data Structure Design/LRU Cache.html":["#includ","(refs.count(key)","(size","*","*/","*/lrucache(int","+","++size;","/*","//","0)","1)","134.","1;",":","=","==",">first;",">second;","@param","@return:","auto","cach","cache/descript","capac","capacity(capacity)","capacity)","capacity:","capacity;","class","code","expired_key","get(int","here","https://www.lintcode.com/problem/lru","int","integ","intial","iter","key)","key,","key:","list.begin();","list.end();","list.erase(iter);","list.push_front(std::make_pair(key,","list;","lru","lrucach","necessari","noth","private:","problem","public:","refs.erase(expired_key);","refs;","refs[key]","refs[key];","return","return;","set(int","size(0),","size;","solut","std::list>","std::unordered_map>::iterator>","valu","value)","value));","value:","value;","void","write","{","}","};"]},"length":90},"tokenStore":{"root":{"0":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.028846153846153848},"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.01675977653631285},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.0297029702970297},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.012903225806451613},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.012578616352201259},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.033816425120772944},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.026785714285714284},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.1736111111111111},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.018404907975460124},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.14772727272727273},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.016666666666666666},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.01680672268907563},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.014492753623188406},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}},";":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.009615384615384616},"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.0111731843575419},"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.009900990099009901},"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.01818181818181818},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.012903225806451613},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.018518518518518517},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.02112676056338028},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.03278688524590164},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.015625},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.011834319526627219},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.012578616352201259},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.00966183574879227},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00823045267489712},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.012269938650306749},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.0036231884057971015},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.013452914798206279},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.0125},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.022988505747126436},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.016666666666666666},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.012903225806451613},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.015151515151515152},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}}},")":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.012903225806451613},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.01639344262295082},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.012269938650306749},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.010869565217391304},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.011494252873563218},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.01694915254237288},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947},"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.013888888888888888}},";":{"docs":{"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775},"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0071174377224199285},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}}},")":{"docs":{},";":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.010471204188481676}}},")":{"docs":{},";":{"docs":{"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425}}}}}},",":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.012903225806451613},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.05555555555555555},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.02112676056338028},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.0205761316872428},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444}}},"}":{"docs":{},",":{"docs":{"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.012269938650306749}}},"}":{"docs":{},")":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}}}}}},"1":{"0":{"0":{"0":{"docs":{"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464}}},"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}}},"7":{"docs":{},".":{"docs":{"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333}}}},"docs":{"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.011494252873563218},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}},"1":{"0":{"1":{"docs":{},".":{"docs":{"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625}}}},"docs":{}},"8":{"1":{"docs":{},".":{"docs":{"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384}}}},"docs":{},".":{"docs":{"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182}}}},"9":{"docs":{},".":{"docs":{"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403}}}},"docs":{}},"2":{"5":{"docs":{"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894}}},"docs":{}},"3":{"1":{"1":{"docs":{},".":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.007633587786259542}}}},"docs":{}},"4":{"docs":{},".":{"docs":{"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}}}},"8":{"docs":{},".":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.009615384615384616},"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775}}}},"9":{"docs":{},".":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576}}}},"docs":{}},"4":{"1":{"docs":{},".":{"docs":{"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.015873015873015872}}}},"9":{"docs":{},".":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.01639344262295082}}}},"docs":{}},"5":{"0":{"docs":{},".":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125}}}},"1":{"docs":{},".":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609}}}},"5":{"docs":{},".":{"docs":{"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588}}}},"docs":{"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}},"6":{"8":{"docs":{},".":{"docs":{"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259}}}},"docs":{}},"8":{"3":{"docs":{},".":{"docs":{"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496}}}},"docs":{}},"docs":{"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.0594059405940594},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.01639344262295082},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.015625},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.012578616352201259},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.022727272727272728},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.016260162601626018},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.028985507246376812},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.008928571428571428},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.02631578947368421},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.021739130434782608},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.027777777777777776},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.013888888888888888},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.01818181818181818},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.13068181818181818},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.017793594306049824},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.017482517482517484},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333},"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.015873015873015872},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.011494252873563218},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.012903225806451613},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.015151515151515152},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.015748031496062992},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}},")":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.028846153846153848},"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.0111731843575419},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.007042253521126761},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.010676156583629894},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.020942408376963352},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.022988505747126436},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.03937007874015748},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.014492753623188406},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.008849557522123894},"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}},")":{"docs":{},";":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.01639344262295082},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.0125}}}},",":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.015748031496062992}}},";":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.02531645569620253},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625}}},".":{"docs":{"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182}}}},";":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.009615384615384616},"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.01675977653631285},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.01056338028169014},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.00966183574879227},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.03496503496503497},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.011049723756906077},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.011494252873563218},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947},"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}}},"]":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.009615384615384616},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.015151515151515152},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.018518518518518517},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.013392857142857142},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.011363636363636364},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.017543859649122806},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.013986013986013986},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.03202846975088968},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}},",":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.02242152466367713}}},")":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.013986013986013986},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642}},";":{"docs":{"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182}}}},";":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.010676156583629894},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838}}},"[":{"docs":{},"h":{"docs":{"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425}},"]":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629}}}},"j":{"docs":{"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.017543859649122806},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182}},"]":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.011363636363636364},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838}},",":{"docs":{"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304}}},";":{"docs":{"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425}}},")":{"docs":{"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496}},";":{"docs":{"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894}}}},"[":{"docs":{},"h":{"docs":{},"]":{"docs":{"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425}},";":{"docs":{"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425}}}}}}}}},"]":{"docs":{"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}},",":{"docs":{"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894}}},")":{"docs":{},";":{"docs":{"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364}}}},";":{"docs":{"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425}}}},":":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.01932367149758454},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.026785714285714284}}}},",":{"docs":{"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.015151515151515152},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.02},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.017699115044247787},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.018691588785046728},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.019801980198019802},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.02127659574468085},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.031914893617021274},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.014492753623188406},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.021739130434782608},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.013888888888888888},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.01818181818181818},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.011363636363636364},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.015748031496062992},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.022058823529411766},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.022222222222222223},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.025},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.01680672268907563},"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.015873015873015872},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496}}},"d":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.012658227848101266},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203}}},"}":{"docs":{"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259}},";":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259}}},",":{"docs":{"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.012269938650306749},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.020833333333333332},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.017241379310344827},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.011428571428571429}}},"}":{"docs":{},")":{"docs":{"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374}}}}},".":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.013986013986013986},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838}}},"s":{"docs":{},"t":{"docs":{"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182}}}},"(":{"docs":{},"w":{"docs":{},")":{"docs":{"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005}}}}},":":{"docs":{"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642}}},"e":{"docs":{"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.011494252873563218},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}}}},"2":{"0":{"0":{"docs":{},".":{"docs":{"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541}}}},"docs":{"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}},"2":{"docs":{},".":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495}}}},"5":{"docs":{"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}},"9":{"docs":{},".":{"docs":{"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496}}}},"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.0111731843575419},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.039603960396039604},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.007042253521126761},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.00966183574879227},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.008928571428571428},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.011363636363636364},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.013888888888888888},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.041666666666666664},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.021052631578947368},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.010676156583629894},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.010471204188481676},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.017793594306049824},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.011049723756906077},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.024475524475524476},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}},")":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.010676156583629894},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.01020408163265306}},",":{"docs":{"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182}}},".":{"docs":{"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182}}},")":{"docs":{},";":{"docs":{"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625}}}}},",":{"docs":{"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.018518518518518517},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.01932367149758454},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496}}},"]":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.03571428571428571},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.010676156583629894},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}},";":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.010676156583629894}}},":":{"docs":{"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714}}},",":{"docs":{"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.017937219730941704}}},")":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642}}}},".":{"docs":{"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838}}},"d":{"docs":{"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":1.6728016359918199},"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":3.3758865248226946}}},"(":{"docs":{},"w":{"docs":{},")":{"docs":{"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005}}}}},":":{"docs":{"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642}}},"}":{"docs":{},",":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.012269938650306749},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.020833333333333332},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.017241379310344827},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.011428571428571429}}}}},"3":{"0":{"docs":{"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}},"6":{"7":{"docs":{},".":{"docs":{"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}}}},"8":{"docs":{},".":{"docs":{"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414}}}},"9":{"docs":{},".":{"docs":{"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666}}}},"docs":{}},"7":{"0":{"docs":{},".":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374}}}},"docs":{}},"9":{"1":{"docs":{},".":{"docs":{"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203}}}},"2":{"docs":{},".":{"docs":{"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904}}}},"3":{"docs":{},".":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629}}}},"4":{"docs":{},".":{"docs":{"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005}}}},"5":{"docs":{},".":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642}}}},"6":{"docs":{},".":{"docs":{"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838}}}},"7":{"docs":{},".":{"docs":{"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993}}}},"8":{"docs":{},".":{"docs":{"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374}}}},"docs":{}},"docs":{"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.0297029702970297},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.020833333333333332},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.05113636363636364},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.014234875444839857},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.02097902097902098},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}},"*":{"docs":{"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642}}},":":{"docs":{"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642}}},",":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}}}},"4":{"0":{"2":{"docs":{},".":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259}}}},"3":{"docs":{},".":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}}}},"5":{"docs":{},".":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095}}}},"6":{"docs":{},".":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095}}}},"docs":{}},"1":{"docs":{},".":{"docs":{"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.01818181818181818}}}},"2":{"4":{"docs":{},".":{"docs":{"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005}}}},"docs":{}},"3":{"0":{"docs":{},".":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}}}},"7":{"docs":{},".":{"docs":{"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064}}}},"8":{"docs":{},".":{"docs":{"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}}}},"docs":{}},"4":{"0":{"docs":{"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364}}},"2":{"docs":{},".":{"docs":{"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294}}}},"docs":{}},"5":{"3":{"docs":{},".":{"docs":{"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642}}}},"docs":{}},"7":{"4":{"docs":{},".":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894}}}},"6":{"docs":{},".":{"docs":{"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364}}}},"docs":{}},"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.015625},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.034722222222222224},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0071174377224199285},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.02097902097902098},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}},",":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135}}},"(":{"docs":{},"w":{"docs":{},")":{"docs":{"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005}}}}},"*":{"docs":{"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.010676156583629894}}},":":{"docs":{"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642}}},"}":{"docs":{},".":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}}}}},"5":{"1":{"2":{"docs":{},".":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135}}}},"docs":{}},"2":{"8":{"docs":{},".":{"docs":{"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335}}}},"docs":{}},"3":{"4":{"docs":{},".":{"docs":{"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182}}}},"5":{"docs":{},".":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856}}}},"docs":{}},"4":{"0":{"docs":{},".":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633}}}},"1":{"docs":{},".":{"docs":{"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.0036231884057971015}}}},"docs":{}},"5":{"1":{"docs":{},".":{"docs":{"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682}}}},"docs":{}},"6":{"2":{"docs":{"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901}}},"3":{"docs":{"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425}}},"4":{"docs":{"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775}}},"docs":{}},"7":{"8":{"docs":{},".":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525}}}},"docs":{}},"8":{"1":{"docs":{},".":{"docs":{"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909}}}},"2":{"docs":{},".":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}}}},"6":{"docs":{},".":{"docs":{"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.011494252873563218}}}},"docs":{}},"9":{"3":{"docs":{},".":{"docs":{"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009}}}},"docs":{}},"docs":{"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.019801980198019802},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.027777777777777776},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.017793594306049824},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.017482517482517484},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}},"6":{"0":{"1":{"docs":{},".":{"docs":{"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":0.02127659574468085}}}},"docs":{}},"1":{"7":{"docs":{},".":{"docs":{"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}}}},"docs":{}},"5":{"7":{"docs":{},".":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947}}}},"docs":{}},"6":{"7":{"docs":{},".":{"docs":{"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464}}}},"docs":{},".":{"docs":{"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909}}}},"7":{"6":{"docs":{},".":{"docs":{"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714}}}},"docs":{},".":{"docs":{"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356}}}},"8":{"3":{"docs":{},".":{"docs":{"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}}}},"docs":{},".":{"docs":{"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005}}}},"9":{"1":{"docs":{},".":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}}}},"docs":{}},"docs":{"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.009900990099009901},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.015625},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0071174377224199285},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}},")":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125}}},"}":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.008928571428571428}}},"*":{"docs":{"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.010676156583629894}}}},"7":{"7":{"docs":{},".":{"docs":{"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444}}}},"9":{"docs":{},".":{"docs":{"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444}}}},"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.013888888888888888},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203}}},"8":{"2":{"1":{"docs":{},".":{"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}}}},"docs":{}},"8":{"docs":{},".":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064}}}},"9":{"docs":{"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425}}},"docs":{"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203}},",":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.008928571428571428}}}},"9":{"0":{"5":{"docs":{},".":{"docs":{"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}}},"docs":{}},"1":{"1":{"docs":{},".":{"docs":{"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.009900990099009901}}}},"9":{"docs":{},".":{"docs":{"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}}},"docs":{}},"2":{"0":{"docs":{},".":{"docs":{"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304}}}},"docs":{"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01}}},"4":{"4":{"docs":{},".":{"docs":{"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064}}}},"docs":{}},"5":{"8":{"docs":{},".":{"docs":{"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541}}}},"docs":{},".":{"docs":{"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633}}}},"7":{"docs":{},".":{"docs":{"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408}}}},"docs":{"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.008928571428571428},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203}},"}":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.01932367149758454},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.022321428571428572}}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.019230769230769232},"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.033707865168539325},"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.0223463687150838},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.030303030303030304},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.03910614525139665},"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.04950495049504951},"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.05454545454545454},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.025806451612903226},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.027777777777777776},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.03873239436619718},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.06557377049180328},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.03125},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.029585798816568046},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.018867924528301886},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.018691588785046728},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.019801980198019802},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.02127659574468085},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.02247191011235955},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.02127659574468085},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.022727272727272728},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.016260162601626018},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.033816425120772944},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.008928571428571428},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.03409090909090909},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.0205761316872428},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.02631578947368421},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.03260869565217391},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.027777777777777776},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.020618556701030927},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.02459016393442623},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.027777777777777776},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.027972027972027972},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.05521472392638037},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.01818181818181818},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.017045454545454544},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.023622047244094488},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.010676156583629894},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.013215859030837005},"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":0.02127659574468085},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.012658227848101266},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.025362318840579712},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.02336448598130841},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.03139013452914798},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.02197802197802198},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.02531645569620253},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.040983606557377046},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.05},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.03314917127071823},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.029411764705882353},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.02962962962962963},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.007633587786259542},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.029197080291970802},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.017241379310344827},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.014150943396226415},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815},"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.031746031746031744},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.03333333333333333},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.04516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.022727272727272728},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.00966183574879227},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.028985507246376812},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.02040816326530612},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.03260869565217391},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.029850746268656716},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.022123893805309734},"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.041666666666666664}},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":11}}}}}}}},"e":{"docs":{},"g":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.019230769230769232},"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.033707865168539325},"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.015151515151515152},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.01675977653631285},"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.03636363636363636},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.018518518518518517},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.007042253521126761},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.01639344262295082},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.012578616352201259},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.028037383177570093},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.0297029702970297},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.031914893617021274},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.033707865168539325},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.0425531914893617},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.022727272727272728},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.016260162601626018},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.013986013986013986},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.012269938650306749},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.02197802197802198},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.013215859030837005},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.014018691588785047},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.015873015873015872},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.01935483870967742},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.022727272727272728},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135},"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.034722222222222224}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682}}},"s":{"docs":{},".":{"docs":{"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182}}}}}}},"r":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":5.015748031496063}}}}}},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}},"g":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682}}}}},"v":{"docs":{"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.014492753623188406},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.02040816326530612},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.021739130434782608},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.022388059701492536}},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}}}}},":":{"docs":{"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}}}}}}}},";":{"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}}},"&":{"docs":{"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.021739130434782608}}},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304}}}}}}}}}},":":{"docs":{"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}},")":{"docs":{"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":5.005102040816326}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},";":{"docs":{"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.009900990099009901},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625}}}}},"a":{"docs":{},"x":{"docs":{},";":{"docs":{"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625}}}}}}},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947},"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}}}}},"&":{"docs":{"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}}}}}},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.009615384615384616},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":3.3541666666666665},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":3.347319347319347},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":1.6789366053169732},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}}}}}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.019230769230769232},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.015151515151515152},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.018518518518518517},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.007042253521126761},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.017543859649122806},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.020618556701030927},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.01639344262295082},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.01818181818181818},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.01327433628318584}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},")":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576}}}}}}}}},")":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.009900990099009901}}},";":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},",":{"docs":{"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":0.02127659574468085}}}}},"docs":{}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},",":{"docs":{"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":0.02127659574468085}}}}},"docs":{}}}}}}}},"i":{"docs":{},"c":{"docs":{"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.01818181818181818}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.007042253521126761},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682}},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":2.504424778761062}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":0.02127659574468085},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.008849557522123894}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541}}}}}}}}}}},"i":{"docs":{},"x":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":2},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":2},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":3.333333333333333}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":2.024793388429752},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.006993006993006993}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":0.02127659574468085}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.01048951048951049}}}}}}},"i":{"docs":{"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":3.333333333333333},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":2.5035211267605635},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":1.6744791666666665},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":5.008849557522124},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":3.341463414634146},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":3.3377976190476186},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":3.3390151515151514},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":3.336892052194543},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":3.33695652173913},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":2.004484304932735},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":1.6755162241887904},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":3.3380503144654083},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":5.011494252873563},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":3.333333333333333},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":2.504830917874396},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":3.3407960199004973}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.0036231884057971015},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.011494252873563218},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"?":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"=":{"docs":{},"l":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{},"&":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"=":{"4":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":1.6725838264299802},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":5.009345794392523},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":3.3374485596707815},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":3.338568935427574},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":1.6712538226299694},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":3.341736694677871}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.01098901098901099},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.00881057268722467},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.009345794392523364},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095}}}}}}}}}}}}},"i":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.007042253521126761}}}}}},"t":{"docs":{},"h":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.017793594306049824},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.015706806282722512},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}}},"e":{"docs":{},"m":{"docs":{"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.017699115044247787},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901}},"s":{"docs":{},".":{"docs":{"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425}}}}},"r":{"docs":{"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":2},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":2},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":2},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":2.513215859030837},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":5.006329113924051},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":3.3405797101449273},"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.034722222222222224}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0071174377224199285},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.010471204188481676}}}}}},"o":{"docs":{},"r":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633}}}}}}}}}}}}}}}}},",":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682}}}},"v":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":1.6729559748427671},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":5.00990099009901},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775}}}}}}}}}}}},")":{"docs":{"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333}}},">":{"docs":{"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259}}},".":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333}}},";":{"docs":{"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541}}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}}}}}}}}}}}}}},"_":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.01098901098901099}}}}}}}}}},")":{"docs":{"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.01098901098901099}}},";":{"docs":{"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"(":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},")":{"docs":{"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294}}}}}}}}},";":{"docs":{"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495}}}}}}}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"2":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":0.02127659574468085}}}}}},"docs":{}}}}},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}}}}}}},"&":{"docs":{"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.009615384615384616},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.01818181818181818},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496}}},",":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.009900990099009901},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335}}}}}}}}}}}}},"a":{"docs":{},",":{"docs":{"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444}}},")":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993}}},"i":{"docs":{},"r":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},")":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374}}}}}}}}},"&":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.012269938650306749},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.015748031496062992},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.015789473684210527},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.02197802197802198},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.015267175572519083},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.006993006993006993},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.01639344262295082},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629}}}}}}},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},")":{"docs":{"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294}}}}}}}}},"v":{"docs":{},")":{"docs":{"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894}}},",":{"docs":{"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364}}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838}}}}}}}}},"s":{"1":{"docs":{},",":{"docs":{"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}}}},"2":{"docs":{},",":{"docs":{"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496}}},")":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}}}},"3":{"docs":{},")":{"docs":{"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496}}}},"docs":{},")":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541}}},",":{"docs":{"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}}},"t":{"docs":{},"r":{"docs":{},")":{"docs":{"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909}}}}},"e":{"docs":{},"q":{"docs":{},"a":{"docs":{},",":{"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}}}},"b":{"docs":{},")":{"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}}}}}}},"t":{"docs":{},")":{"docs":{"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182}}},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},")":{"docs":{"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005}}}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}}}}}}}},"b":{"docs":{},")":{"docs":{"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444}}},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{},"s":{"docs":{},",":{"docs":{"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},")":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},")":{"docs":{"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},")":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}}}}}}},")":{"docs":{"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.011299435028248588}}}}}}},"l":{"docs":{},",":{"docs":{"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},")":{"docs":{"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}}}}}}}}}}}},"(":{"0":{"docs":{},",":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182}}}},"1":{"docs":{},",":{"docs":{"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182}}}},"2":{"docs":{},",":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125}}}},"4":{"docs":{},",":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}}}},"5":{"docs":{},",":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}}}},"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.012269938650306749},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}},"i":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.008928571428571428},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496}},"n":{"docs":{},"t":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.009615384615384616},"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775},"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.01675977653631285},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.009900990099009901},"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.01818181818181818},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.012903225806451613},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.01639344262295082},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.012578616352201259},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.03409090909090909},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.032520325203252036},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.013986013986013986},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.016666666666666666},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.011111111111111112},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.012903225806451613},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.00966183574879227}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947}},"_":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":0.02127659574468085}}}}}}}}}},"+":{"1":{"docs":{},")":{"docs":{},"t":{"docs":{},"h":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0071174377224199285}}}}}},"docs":{}},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":0.02127659574468085}}}}}}}}}}}}}},"l":{"docs":{"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715},"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.015873015873015872},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.011494252873563218},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.011111111111111112},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.01818181818181818}}}}},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444}}}}}}}},")":{"3":{"docs":{"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005}}},"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"l":{"docs":{},")":{"docs":{"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0071174377224199285}}}},"r":{"docs":{},")":{"docs":{"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642}}}}}}}},".":{"docs":{},"l":{"docs":{},"c":{"docs":{},"a":{"docs":{},")":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556}}}}}}}}}},"e":{"docs":{},"n":{"docs":{"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556}}},"f":{"docs":{},"t":{"docs":{"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064}}}}},"h":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304}}}}}}}}}}},"a":{"1":{"docs":{"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064}}},"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182}},"n":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}}}},"j":{"docs":{},"]":{"docs":{"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}}}}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"&":{"docs":{"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}}}}}},"e":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095}},"n":{"docs":{},"d":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.01056338028169014},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125}}}}},"m":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095}},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"b":{"docs":{},"g":{"docs":{},"n":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}}}}}}}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856}}}}}}},"s":{"docs":{},")":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}}},"t":{"docs":{},"r":{"docs":{},")":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}}}}}}}}}}}}}}}},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}}}}}}}}}},"n":{"1":{"docs":{"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496}}},"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.011363636363636364},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.014598540145985401},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.014234875444839857},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.010471204188481676},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304}},"u":{"docs":{},"m":{"docs":{},"_":{"docs":{},"c":{"docs":{"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374}}},"r":{"docs":{"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374}}}},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},")":{"docs":{"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}},")":{"docs":{},";":{"docs":{"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625}}}}}},"r":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.015873015873015872}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00823045267489712},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.014705882352941176},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.014814814814814815},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.015267175572519083},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.009174311926605505}},")":{"docs":{"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005}}}}}},")":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064}}},".":{"docs":{},"l":{"docs":{},"c":{"docs":{},"a":{"docs":{},")":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525}}}}}}},"e":{"docs":{},"c":{"docs":{},".":{"docs":{},"e":{"docs":{},"v":{"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}}}}}},"f":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.008849557522123894}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}},"s":{"1":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}}}}}}}}}}}},"2":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496}}}}}},"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.01639344262295082},"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}}}}},"u":{"docs":{},"m":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}},"[":{"docs":{},"i":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0071174377224199285}}}}},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"[":{"docs":{},"s":{"1":{"docs":{},"]":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.01932367149758454}}}},"docs":{}}},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}}}}}}}}}}}},"k":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894}}}}}}}}}}}}}}}},"r":{"docs":{},"c":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}},")":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}}}}},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"(":{"docs":{},"j":{"docs":{"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.009900990099009901}}}}}},"b":{"docs":{"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182}},"g":{"docs":{},"n":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.016483516483516484},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.013215859030837005},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.014018691588785047},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.013452914798206279}},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.012658227848101266}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633}}}}}}}}},"s":{"docs":{},"[":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"]":{"docs":{"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064}},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064}}}}}}}}}}}}}}},"j":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.010471204188481676},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.014492753623188406}}},"k":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425}}},"p":{"docs":{"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.023622047244094488}},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629}}}}}}}},"e":{"docs":{},"d":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}}},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294}}}}}}}},"'":{"0":{"docs":{},"'":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.017241379310344827},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.011428571428571429}}}},"docs":{}},"!":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.016483516483516484},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408}},")":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525}}}}}}},"s":{"docs":{},"t":{"docs":{},"k":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.014598540145985401},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}}}}}}}}}}}}},"r":{"docs":{},"c":{"docs":{},")":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.006993006993006993}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}}}}}}}}}}}}},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495}}}}}}}},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625}}}}}}}}}}}}}}}},"p":{"docs":{},"i":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444}}}}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.017241379310344827},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.011428571428571429},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.009433962264150943},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.014492753623188406},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.02040816326530612},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.014925373134328358}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.01020408163265306}},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"i":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"l":{"docs":{},",":{"docs":{"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.01818181818181818},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.006993006993006993},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.01694915254237288}},")":{"docs":{"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.01652892561983471},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.017699115044247787}}},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"a":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.01694915254237288}}}}}},"w":{"docs":{},")":{"2":{"docs":{"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005}}},"docs":{}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203}}}}},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.010869565217391304}}}}},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.012269938650306749},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.020833333333333332},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.029197080291970802}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}}}}}}}}}}}}}}},"d":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374}},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633}}}}}},"x":{"docs":{"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.04597701149425287},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.015748031496062992}}}},"*":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.08653846153846154},"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.0898876404494382},"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.1005586592178771},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.10606060606060606},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.09497206703910614},"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.09900990099009901},"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.03636363636363636},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0967741935483871},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.05555555555555555},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.06690140845070422},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.03278688524590164},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.3359375},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.1301775147928994},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.0880503144654088},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.07},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.07079646017699115},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.09345794392523364},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.0891089108910891},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.07446808510638298},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.07865168539325842},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.06382978723404255},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.07954545454545454},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.10569105691056911},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.1388888888888889},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.09178743961352658},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.20089285714285715},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.07142857142857142},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.08522727272727272},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.09876543209876543},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.08771929824561403},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.07608695652173914},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.125},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.08247422680412371},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.08196721311475409},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.09722222222222222},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.04895104895104895},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.012269938650306749},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.09090909090909091},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.10227272727272728},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.07874015748031496},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.10526315789473684},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.1386861313868613},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.08896797153024912},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.1256544502617801},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.11818181818181818},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.10743801652892562},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0948905109489051},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.18861209964412812},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.0989010989010989},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.09251101321585903},"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":0.06382978723404255},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.05063291139240506},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.050724637681159424},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.08878504672897196},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.053811659192825115},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.07142857142857142},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.08227848101265822},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.07377049180327869},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.09375},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.12154696132596685},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.09558823529411764},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.0962962962962963},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.13740458015267176},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.12903225806451613},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.12389380530973451},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.08256880733944955},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.15034965034965034},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.15337423312883436},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.020833333333333332},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.021897810218978103},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.04310344827586207},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.09142857142857143},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.075},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.08018867924528301},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.06722689075630252},"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.047619047619047616},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.022988505747126436},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.09444444444444444},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.07741935483870968},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.09090909090909091},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.11023622047244094},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.08695652173913043},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.14492753623188406},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.08163265306122448},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.10869565217391304},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.12686567164179105},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.03389830508474576},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.06637168141592921},"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.041666666666666664}},"/":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.019230769230769232},"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775},"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.0111731843575419},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.015151515151515152},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.0111731843575419},"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.019801980198019802},"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.01818181818181818},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.012903225806451613},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.01639344262295082},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.015625},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.011834319526627219},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.012578616352201259},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.00966183574879227},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.008928571428571428},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.023809523809523808},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.011363636363636364},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.012345679012345678},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.017543859649122806},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.021739130434782608},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.013888888888888888},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.020618556701030927},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.01639344262295082},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.013888888888888888},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.013986013986013986},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.01818181818181818},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.011363636363636364},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.015748031496062992},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.010526315789473684},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.014598540145985401},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0071174377224199285},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.010471204188481676},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.01818181818181818},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.01652892561983471},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.014598540145985401},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.010676156583629894},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.00881057268722467},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.0189873417721519},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.021739130434782608},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.008968609865470852},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.01098901098901099},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.012658227848101266},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.0125},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.016574585635359115},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.014705882352941176},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.014814814814814815},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.015267175572519083},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.01935483870967742},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.017699115044247787},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.009174311926605505},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.013986013986013986},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.012269938650306749},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.017241379310344827},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.017142857142857144},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.016666666666666666},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.014150943396226415},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815},"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.015873015873015872},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.011494252873563218},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.011111111111111112},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.012903225806451613},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.015151515151515152},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.00966183574879227},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.021739130434782608},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.015306122448979591},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.021739130434782608},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.022388059701492536},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.01694915254237288},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.022123893805309734},"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.013888888888888888}},"z":{"docs":{},"i":{"docs":{},"g":{"docs":{},"z":{"docs":{},"a":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"2":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},">":{"docs":{},"&":{"docs":{"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203}}}}}}}}}}}},"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}}}}}}}}}}}}}}},"*":{"docs":{},"*":{"docs":{"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}},"*":{"docs":{"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.014925373134328358}},"*":{"docs":{"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714}},"*":{"docs":{"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714}},"*":{"docs":{"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.014492753623188406}},"*":{"docs":{},"*":{"docs":{},"*":{"docs":{},"*":{"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}},"*":{"docs":{},"*":{"docs":{},"*":{"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}},"*":{"docs":{},"*":{"docs":{},"*":{"docs":{},"*":{"docs":{"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}},"*":{"docs":{"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.007633587786259542},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}}},";":{"docs":{"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},";":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.007633587786259542},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}}}}}}}},"b":{"docs":{},"g":{"docs":{},"n":{"docs":{},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},";":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.012658227848101266}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},";":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.012658227848101266}}}}}}}}}},"s":{"docs":{},"[":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"]":{"docs":{},";":{"docs":{"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894}}}}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}}}}}},"d":{"docs":{},"s":{"docs":{},"t":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}}}}},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}}}}},",":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}}},"=":{"docs":{"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}}}},"+":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.0673076923076923},"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775},"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.03910614525139665},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.022727272727272728},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.025806451612903226},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.018518518518518517},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.023668639053254437},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.018867924528301886},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.03},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.02654867256637168},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.028037383177570093},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.0297029702970297},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.031914893617021274},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.0425531914893617},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.056818181818181816},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.04065040650406504},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.05555555555555555},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.00966183574879227},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.008928571428571428},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.022727272727272728},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.0411522633744856},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.043859649122807015},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.03260869565217391},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.020833333333333332},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.030927835051546393},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.02097902097902098},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.012269938650306749},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.02727272727272727},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.017045454545454544},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.047244094488188976},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.010526315789473684},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.08540925266903915},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.031413612565445025},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.021739130434782608},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.013452914798206279},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.01639344262295082},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.01875},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.016574585635359115},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.022058823529411766},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.022222222222222223},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.03680981595092025},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.025},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.009433962264150943},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.025210084033613446},"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.015873015873015872},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.011494252873563218},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.027777777777777776},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.05511811023622047},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.06763285024154589},"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}},"+":{"docs":{},"l":{"docs":{},";":{"docs":{"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095}}}},"r":{"docs":{},";":{"docs":{"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},";":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}}}}}},"d":{"docs":{},"p":{"docs":{},";":{"docs":{"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.013986013986013986}}}}},"b":{"docs":{},"g":{"docs":{},"n":{"docs":{},";":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.01098901098901099},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.00881057268722467},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.009345794392523364},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.008968609865470852}}},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},";":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.012658227848101266}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},";":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.012658227848101266}}}}}}}}}},"s":{"docs":{},"[":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"]":{"docs":{},";":{"docs":{"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},";":{"docs":{"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203}}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},";":{"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},";":{"docs":{"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}}}}}}}},"=":{"docs":{"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775},"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.01818181818181818},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.00966183574879227}}},"*":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.012269938650306749}},"(":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.012269938650306749}},"+":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.012269938650306749}}}}},",":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}}},"/":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.012269938650306749}}}},".":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.022727272727272728},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.09032258064516129}},".":{"docs":{},".":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.019230769230769232},"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.009433962264150943},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.028985507246376812},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.01020408163265306}},",":{"docs":{"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.02247191011235955},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.01932367149758454},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.022321428571428572},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.023622047244094488}}},".":{"docs":{"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259}},".":{"docs":{},".":{"docs":{},".":{"docs":{"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259}},".":{"docs":{"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259}},".":{"docs":{},".":{"docs":{},".":{"docs":{"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259}},".":{"docs":{"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259}}}}}}}}}}}}}},"/":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.012345679012345678},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.014598540145985401},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.03202846975088968},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.012269938650306749},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.011494252873563218},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.011111111111111112},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}},"*":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.0189873417721519},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.021739130434782608},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.016666666666666666},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.01694915254237288},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.01327433628318584},"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.020833333333333332}},"*":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.019230769230769232},"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.02247191011235955},"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.0111731843575419},"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.019801980198019802},"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.01818181818181818},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.01935483870967742},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.01639344262295082},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.015625},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.011834319526627219},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.012578616352201259},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.02},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.017699115044247787},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.018691588785046728},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.019801980198019802},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.02127659574468085},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.02247191011235955},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.02127659574468085},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.022727272727272728},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.016260162601626018},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.018518518518518517},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.00966183574879227},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.008928571428571428},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.023809523809523808},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.011363636363636364},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.012345679012345678},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.017543859649122806},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.021739130434782608},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.013888888888888888},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.020618556701030927},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.01639344262295082},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.013888888888888888},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.013986013986013986},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.01818181818181818},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.011363636363636364},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.015748031496062992},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.010526315789473684},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.014598540145985401},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0071174377224199285},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.010471204188481676},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.01818181818181818},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.01652892561983471},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.014598540145985401},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.010676156583629894},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.00881057268722467},"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":0.02127659574468085},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.008968609865470852},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.01098901098901099},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.012658227848101266},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.0125},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.016574585635359115},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.014705882352941176},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.014814814814814815},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.015267175572519083},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.012903225806451613},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.013986013986013986},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.012269938650306749},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.017241379310344827},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.011428571428571429},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.009433962264150943},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815},"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.015873015873015872},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.011494252873563218},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.011111111111111112},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.012903225806451613},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.015151515151515152},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.015748031496062992},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.00966183574879227},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.021739130434782608},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.015306122448979591},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.021739130434782608},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.022388059701492536},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.008849557522123894}}}},"/":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.009615384615384616},"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.02247191011235955},"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.009900990099009901},"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.01818181818181818},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.007042253521126761},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.01639344262295082},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.012269938650306749},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.010526315789473684},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.010676156583629894},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.07142857142857142},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.06607929515418502},"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":0.02127659574468085},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.0189873417721519},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.021739130434782608},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.0514018691588785},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.0125},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.014705882352941176},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.014814814814814815},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.007633587786259542},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815},"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.015873015873015872},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.011494252873563218},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.00966183574879227},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.022598870056497175},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.035398230088495575},"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.020833333333333332}}},":":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}}}},";":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.009615384615384616},"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775},"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.01675977653631285},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.009900990099009901},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.012903225806451613},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.01639344262295082},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.012578616352201259},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.03409090909090909},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.032520325203252036},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.02097902097902098},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0071174377224199285},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.020833333333333332},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.016666666666666666},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.00966183574879227}}},"=":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.09615384615384616},"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.02247191011235955},"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.0670391061452514},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.045454545454545456},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.05027932960893855},"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.06930693069306931},"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.05454545454545454},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.03225806451612903},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.09259259259259259},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.07394366197183098},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.06557377049180328},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.03125},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.07100591715976332},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.03773584905660377},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.04},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.035398230088495575},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.037383177570093455},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.039603960396039604},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.0425531914893617},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.033707865168539325},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.0425531914893617},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.056818181818181816},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.04878048780487805},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.018518518518518517},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.01932367149758454},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.022321428571428572},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.05952380952380952},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.028409090909090908},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.07407407407407407},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.03508771929824561},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.043478260869565216},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.034722222222222224},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.030927835051546393},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.05737704918032787},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.06944444444444445},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.09090909090909091},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.04294478527607362},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.02727272727272727},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.022727272727272728},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.047244094488188976},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.02631578947368421},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.029197080291970802},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.05338078291814947},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.03664921465968586},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.03636363636363636},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.06611570247933884},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.043795620437956206},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.028469750889679714},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.02197802197802198},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.022026431718061675},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.0379746835443038},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.021739130434782608},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.03271028037383177},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.04035874439461883},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.03296703296703297},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.04430379746835443},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.02459016393442623},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.05625},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.03867403314917127},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.03676470588235294},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.037037037037037035},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.022900763358778626},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.03225806451612903},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.035398230088495575},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.05045871559633028},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.038461538461538464},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.03125},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.043795620437956206},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.017241379310344827},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.04},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.058333333333333334},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.02830188679245283},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.025210084033613446},"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.07936507936507936},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.05747126436781609},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.06111111111111111},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.03225806451612903},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.030303030303030304},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.03937007874015748},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.03864734299516908},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.014492753623188406},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.025510204081632654},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.03260869565217391},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.014925373134328358},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.04519774011299435},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.05309734513274336},"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.05555555555555555}},">":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.019230769230769232},"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.0111731843575419},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.01935483870967742},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.011363636363636364},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.021052631578947368},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.028469750889679714},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.008968609865470852},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.013986013986013986},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.04716981132075472},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.014492753623188406}}},"=":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.012903225806451613},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.014084507042253521},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.01639344262295082},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.012578616352201259},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.024154589371980676},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.011363636363636364},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.020618556701030927},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.01639344262295082},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.012269938650306749},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.01818181818181818},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.015748031496062992},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.03684210526315789},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0364963503649635},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.010676156583629894},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.010471204188481676},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.010869565217391304},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.012903225806451613},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.009174311926605505},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.012269938650306749},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.020833333333333332},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.029197080291970802},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.016666666666666666},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.009433962264150943},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.011494252873563218},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.00966183574879227},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.02040816326530612},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.021739130434782608},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.01694915254237288},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.01327433628318584},"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.020833333333333332}}}},"@":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.009615384615384616},"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.033707865168539325},"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.0111731843575419},"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.019801980198019802},"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.01818181818181818},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.01639344262295082},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.012578616352201259},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.02},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.02654867256637168},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.028037383177570093},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.019801980198019802},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.02127659574468085},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.02247191011235955},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.02127659574468085},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.017543859649122806},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.021739130434782608},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.013888888888888888},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.011363636363636364},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.023622047244094488},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.010526315789473684},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.012658227848101266},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.022900763358778626},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.01935483870967742},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.02654867256637168},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.013761467889908258},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.016666666666666666},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.009433962264150943},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.01680672268907563},"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.015873015873015872},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.011494252873563218},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.011111111111111112},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.012903225806451613},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.015151515151515152},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.00966183574879227},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.01020408163265306},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.01694915254237288},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.008849557522123894},"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.027777777777777776}}}}}}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.00881057268722467}},":":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.009615384615384616},"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775},"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.009900990099009901},"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.01818181818181818},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.01639344262295082},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.012658227848101266},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.014492753623188406},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.007633587786259542},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815},"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.015873015873015872},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.011494252873563218},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.01694915254237288},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.01327433628318584},"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.013888888888888888}}}}}}}}}},"c":{"1":{"docs":{"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064}},")":{"docs":{"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064}}}},"2":{"docs":{"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.012903225806451613}}},"3":{"docs":{"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064}}},"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.0111731843575419},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.024390243902439025},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.017045454545454544},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00823045267489712},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.020833333333333332},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.014234875444839857},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.012269938650306749},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.009433962264150943}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.009615384615384616},"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775},"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.009900990099009901},"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.01818181818181818},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.01639344262295082},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00823045267489712},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.01818181818181818},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.01652892561983471},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.014598540145985401},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0071174377224199285},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.01098901098901099},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.00881057268722467},"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":0.02127659574468085},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.009345794392523364},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.01098901098901099},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.012658227848101266},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.0125},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.011049723756906077},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.014705882352941176},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.014814814814814815},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.015267175572519083},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.012903225806451613},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.017699115044247787},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.009174311926605505},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.006993006993006993},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.011428571428571429},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815},"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.015873015873015872},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.011494252873563218},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947},"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}},"s":{"docs":{"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":3.340909090909091}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947}}}}}},"o":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}},"d":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}},"e":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.009615384615384616},"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775},"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.009900990099009901},"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.01818181818181818},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.01639344262295082},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.00881057268722467},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.012658227848101266},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.014492753623188406},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.007633587786259542},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.014150943396226415},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815},"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.015873015873015872},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.011494252873563218},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.01694915254237288},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.01327433628318584},"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.013888888888888888}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.011111111111111112},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}},";":{"docs":{"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135}}}}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135}}}}}}},"s":{"docs":{},",":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541}}}}}},"t":{"docs":{"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":0.02127659574468085}}}},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.0111731843575419}},".":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095}}},"s":{"docs":{},",":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095}}}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384}}}}}}},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.009433962264150943},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}},";":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.016483516483516484},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.013215859030837005},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.014018691588785047}}},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"&":{"docs":{},">":{"docs":{},"(":{"docs":{},"b":{"docs":{},"g":{"docs":{},"n":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}}}},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":3.333333333333333}}}}}}},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009}}}}}},"i":{"docs":{},"d":{"docs":{"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}}}}},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095}}}}},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":3.342592592592592},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":2.5035211267605635},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.013986013986013986},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":1.6789366053169732}},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259}}}}}}}}},"i":{"docs":{},"i":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},";":{"docs":{"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.009433962264150943},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.008849557522123894}}}}}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.023668639053254437},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":2.0061349693251533},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":2.0104166666666665}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"p":{"docs":{},"n":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}}}}}}}}}}}}}}}}}},"p":{"docs":{},"n":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666}}}}}}}}}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095}}}}}}},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}},"i":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408}}}}}}}},"o":{"docs":{},"s":{"docs":{"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333}}}},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838}}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":3.3497267759562837}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.02247191011235955},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":3.365942028985507},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":3.3611111111111107},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":1.6819338422391856},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":2.0193548387096776},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":1.6932153392330382},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":1.6804281345565748}}}}}},"s":{"docs":{},"t":{"docs":{"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403}}}},"i":{"docs":{},"n":{"docs":{"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":5.014598540145985},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":3.354685646500593},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":3.359511343804537}},",":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.010676156583629894},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.020942408376963352}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838}}}}},"p":{"docs":{},"i":{"docs":{"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":5.006451612903226},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":3.340909090909091}},"e":{"docs":{},"r":{"docs":{"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.012903225806451613},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.015151515151515152}},"s":{"docs":{},",":{"docs":{"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}}}}}}},"y":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{},"s":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064}}}}}}}}},"i":{"docs":{},"i":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}}}}}}}}}}}}}}}},"k":{"docs":{"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064}}},"n":{"docs":{"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064}}},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.02531645569620253},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.0036231884057971015},"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":5.006944444444445}},"e":{"docs":{},";":{"docs":{"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.00881057268722467},"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":0.02127659574468085},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.012658227848101266},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}},")":{"docs":{"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"b":{"docs":{},"g":{"docs":{},"n":{"docs":{"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444}},";":{"docs":{"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.013888888888888888}}},"i":{"docs":{},"d":{"docs":{"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}}}}}}},"s":{"1":{"docs":{},",":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}}}},"docs":{}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"m":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.014234875444839857},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.029197080291970802}}}},"l":{"docs":{},"l":{"docs":{"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":0.02127659574468085},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.008849557522123894}}},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}}}}}}}}}}}},")":{"docs":{"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}}},":":{"docs":{"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}}},";":{"docs":{"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}}}}}}}}}},".":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856}}},"b":{"docs":{},"c":{"docs":{},"e":{"docs":{"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.06611570247933884},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.05309734513274336},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.006993006993006993},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.06779661016949153}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838}}}}},")":{"docs":{"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005}}},";":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.013761467889908258},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.01048951048951049}}},".":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}},"f":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"a":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.013761467889908258}}},"b":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.013761467889908258}},")":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525}}}}}}}}}},"l":{"docs":{},"c":{"docs":{},"a":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525}}}}}},",":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.01048951048951049}}}}},"t":{"docs":{"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":5.0055555555555555},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496}}}}}}}}}}}}},"h":{"docs":{"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.01694915254237288}},"a":{"docs":{},"r":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.014492753623188406},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.01020408163265306},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.014925373134328358}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.023622047244094488}}}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.010526315789473684},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}}}}},"o":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838}}}}}}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.010676156583629894}},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642}}}}}}}},")":{"docs":{"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682}}}}}}},"f":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.012269938650306749}},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.009615384615384616},"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.011834319526627219},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.023622047244094488},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}},".":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}}},"w":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838}}}}}}}}}}}}}}}},",":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633}}}}}},"n":{"docs":{},"d":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.007633587786259542},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.006993006993006993},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":3.3412073490813645},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005}}}}}}},"s":{"docs":{},"t":{"docs":{},"k":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}}}}}}},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.012903225806451613},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.015151515151515152}}}}}},"l":{"docs":{},"l":{"docs":{"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425}}}}},")":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095}}},"u":{"docs":{},"l":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556}}}}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":2.00355871886121},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":3.3388278388278385},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":2.504405286343612},"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":3.354609929078014}},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.014598540145985401},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.008849557522123894}},"e":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496}}}},";":{"docs":{"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.016666666666666666}}}},";":{"docs":{"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.0036231884057971015},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.011299435028248588},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.008849557522123894}}},".":{"docs":{"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633}}}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909}},".":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064}}},"_":{"docs":{},"a":{"docs":{},"(":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},")":{"docs":{},",":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525}}}}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"a":{"docs":{},")":{"docs":{},",":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525}}}}}}}}}}}},",":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525}}},";":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525}}}},"b":{"docs":{},"(":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},")":{"docs":{},",":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525}}}}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"b":{"docs":{},")":{"docs":{},",":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525}}}}}}}}}}}},",":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525}}},";":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525}}}}}}}},"r":{"docs":{},"m":{"docs":{"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.015748031496062992},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.011049723756906077}}}}}},"h":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.014705882352941176},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.014814814814814815}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.009615384615384616},"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775},"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.009900990099009901},"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.01818181818181818},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.01639344262295082},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.00881057268722467},"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":0.02127659574468085},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.012658227848101266},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.014492753623188406},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.007633587786259542},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815},"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.015873015873015872},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.011494252873563218},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.01694915254237288},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.01327433628318584},"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.013888888888888888}},".":{"docs":{"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408}},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633}}}}}}}}}},")":{"docs":{"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633}}},";":{"docs":{"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633}}}}}}},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},",":{"docs":{"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"/":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.009615384615384616},"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009}}}}},"c":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"l":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}}}}}}}},"q":{"docs":{},"r":{"docs":{},"t":{"docs":{},"x":{"docs":{"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.011494252873563218}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.015873015873015872}}}}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588}}}}}}}},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.009900990099009901},"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.01818181818181818},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}}}}}}}},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666}}}}}}},"m":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775}}}}}},"i":{"docs":{},"n":{"docs":{"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838}}}},"p":{"docs":{},"i":{"docs":{"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}}}}}},"b":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.01639344262295082},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633}}}}}}},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259}}}}}},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005}}}}}}}},"k":{"docs":{"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182}}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384}}}}}}}},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856}}}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005}}}}}},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909}}}}}}},"w":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.007633587786259542},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525}}}}}}},"r":{"docs":{},"u":{"docs":{"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294}}}}}},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":0.02127659574468085}}}}}}}}},"z":{"docs":{},"i":{"docs":{},"g":{"docs":{},"z":{"docs":{},"a":{"docs":{},"g":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.0036231884057971015}}}}}}}},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}}}},"o":{"docs":{},"d":{"docs":{"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"/":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.009900990099009901}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.00966183574879227}}}}},"r":{"docs":{},"d":{"docs":{"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005}}}}},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}}}}}}}},"l":{"docs":{},"d":{"docs":{"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.027472527472527472},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.022026431718061675},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.02336448598130841}},"s":{"docs":{},",":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.01098901098901099},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.00881057268722467},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.009345794392523364}}}}},"e":{"docs":{"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496}}}},"d":{"docs":{"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364}}},"u":{"docs":{},"s":{"docs":{"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":5.011904761904762},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":3.3390151515151514},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":3.3374485596707815}},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182}}}}}}}}}},"3":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856}}}}}}}}}}},"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182}}}},",":{"docs":{"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.011363636363636364}}}}}}},")":{"docs":{"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425}},";":{"docs":{"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408}}}},".":{"docs":{"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425}}},",":{"docs":{"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408}}}},"j":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.01675977653631285},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.01935483870967742},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}},")":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.019230769230769232},"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.01675977653631285},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.015706806282722512},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}},".":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444}}},":":{"docs":{"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838}}}},",":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909}}},"t":{"docs":{},"h":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.015706806282722512}}}},".":{"docs":{"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909}}},"]":{"docs":{"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.015748031496062992}}},"o":{"docs":{},"b":{"docs":{},".":{"docs":{"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}}}}}},"l":{"1":{"docs":{},"/":{"docs":{"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556}}}},"2":{"docs":{},"/":{"docs":{"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556}}}},"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.0223463687150838},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.018518518518518517},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.012345679012345678},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.013888888888888888},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.018867924528301886},"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.047619047619047616},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.022988505747126436},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.016666666666666666},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.009615384615384616},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.010676156583629894},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.01327433628318584}},"_":{"docs":{},"l":{"docs":{"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0071174377224199285}},";":{"docs":{"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642}}}},"r":{"docs":{"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642}},";":{"docs":{"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642}}}}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064}}}}}}},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.02459016393442623},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.01875}},"(":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{},")":{"docs":{"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625}}}}}}}}},")":{"docs":{"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625}}},";":{"docs":{"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625}}}}}}},"i":{"docs":{"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.009433962264150943}},"n":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.009433962264150943}},"t":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.009433962264150943}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.009615384615384616},"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775},"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.009900990099009901},"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.01818181818181818},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.01639344262295082},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":0.02127659574468085},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.0036231884057971015},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.007633587786259542},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.009433962264150943},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815},"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.015873015873015872},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.011494252873563218},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294}}}}}},"e":{"docs":{"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":5.007299270072993},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":3.340450771055753},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":3.3438045375218146}},".":{"docs":{"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005}}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005}}}}}}}}}}}},"k":{"docs":{"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":2.00711743772242}}}},"s":{"docs":{},"t":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.019230769230769232},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.015151515151515152},"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.01818181818181818},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":2.00355871886121},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":3.3717948717948714},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":2.526431718061674},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":2.52803738317757},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":2.0179372197309418},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.01020408163265306}},"/":{"docs":{"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495}}}}}}}}}}},".":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}}}},";":{"docs":{"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}}}}}}},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.020833333333333332}}}}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}},";":{"docs":{"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.020833333333333332}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},",":{"docs":{"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.020833333333333332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682}}}},";":{"docs":{"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}}}},".":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444}}}}}},"docs":{},"i":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444}},";":{"docs":{"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444}}}}}}}}}},";":{"docs":{"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444}}},"[":{"docs":{},"l":{"docs":{},"]":{"docs":{"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444}},")":{"docs":{"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444}}}}},"m":{"docs":{},"]":{"docs":{},")":{"docs":{"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444}}}}},"r":{"docs":{},"]":{"docs":{"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444}}}}}}},";":{"docs":{"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.011494252873563218}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.012903225806451613}},".":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838}}},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{},",":{"docs":{"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541}}}}}}}}},")":{"docs":{"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625}}},";":{"docs":{"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}}}}},"s":{"docs":{},"s":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}}}},"n":{"docs":{"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.016666666666666666}},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.009900990099009901},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.013888888888888888},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.030927835051546393},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.01639344262295082},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.01818181818181818},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.016666666666666666}}}}},")":{"docs":{},";":{"docs":{"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333}}}},";":{"docs":{"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.017543859649122806}}}}}}},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541}}}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625}}}}}},",":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.0111731843575419},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556}}},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.03636363636363636}},")":{"docs":{},";":{"docs":{"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.01818181818181818}}}}},"t":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}}}}},"o":{"docs":{},"p":{"docs":{"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.016260162601626018},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182}}}},"n":{"docs":{},"g":{"docs":{"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.023809523809523808}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":3.3550724637681157},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":3.3541666666666665},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":3.3642611683848793},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":3.3497267759562837},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":3.3402777777777777},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":3.34032634032634},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":1.6728016359918199},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":3.3606060606060604}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"2":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},">":{"docs":{"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464}}}}}}}}}}}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005}}}}},"e":{"docs":{"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005}}}},"w":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":1.674300254452926},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":2.0064516129032257},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":1.6843657817109143},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":1.6712538226299694}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.015267175572519083},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.012903225806451613}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.007633587786259542},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525}}}}}}}}}},"i":{"docs":{},"i":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},",":{"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}}}}}}}}},"l":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.012345679012345678}}},"r":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.012345679012345678}},"u":{"docs":{"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":5.006944444444445}},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}}}}}}}},"c":{"docs":{"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304}},"a":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.007633587786259542}},"(":{"docs":{},"l":{"docs":{},"c":{"docs":{},"a":{"docs":{},")":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525}}}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525}}}}}}}}}}},")":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525}}},";":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525}}}}},"p":{"docs":{"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.01639344262295082}},"s":{"docs":{},")":{"docs":{"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541}},";":{"docs":{"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541}}}}}},"h":{"docs":{},"s":{"docs":{},",":{"docs":{"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}}}}}},"n":{"docs":{},"d":{"docs":{"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304}}}}}}}},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495}},")":{"docs":{"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495}}}}},"i":{"docs":{},"n":{"docs":{},",":{"docs":{"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495}}}}}},"f":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"a":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525}}},"b":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525}}}}}}}}}},")":{"docs":{"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.016666666666666666},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496}},";":{"docs":{"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.009433962264150943}}},")":{"docs":{"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}}}},"]":{"docs":{"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}}},":":{"docs":{"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556}}}}},"n":{"docs":{},"/":{"docs":{"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556}}}},"_":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}},")":{"docs":{},";":{"docs":{"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}}}}}}}}},"m":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496}},"a":{"docs":{},"p":{"docs":{},";":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.009615384615384616},"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.009900990099009901},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}}},"[":{"0":{"docs":{},"]":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.009615384615384616}}}},"docs":{}},"(":{"docs":{},"{":{"docs":{},"{":{"docs":{},"\"":{"docs":{},"*":{"docs":{},"\"":{"docs":{},",":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},";":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095}}},"[":{"0":{"docs":{},"]":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095}}}},"docs":{}}}},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.0111731843575419},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":1.6666666666666665}},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374}}}}}}}}}},":":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374}}}}}}}}}}}},"docs":{}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005}}}}}},"i":{"docs":{},"n":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095}}}},"x":{"docs":{"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.01818181818181818},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.018518518518518517},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.007042253521126761},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.012578616352201259},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00823045267489712},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.0125},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}},"i":{"docs":{},"m":{"docs":{"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364}},"u":{"docs":{},"m":{"docs":{"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":1.6864686468646863},"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":5.0181818181818185},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":5.006451612903226},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.01056338028169014},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.01639344262295082},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.029585798816568046},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.012578616352201259},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.018518518518518517},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.023809523809523808},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.011363636363636364},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00823045267489712},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":2.5125},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.011049723756906077},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":2.5074074074074075},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":2.5096618357487923}}}},"a":{"docs":{},"l":{"docs":{},".":{"docs":{"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.009900990099009901}}}}}}}}}}}},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.01818181818181818}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},">":{"docs":{"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064}}}}}}}}}}}}}}}}}}},")":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}}},"_":{"docs":{},"b":{"docs":{},"g":{"docs":{},"n":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.018518518518518517},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.007042253521126761}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.018518518518518517},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.007042253521126761}}}}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.008968609865470852}}}}}}}},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"}":{"docs":{},";":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.007042253521126761}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.01639344262295082},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629}}}}}}}}}}}},"{":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.023668639053254437},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909}}},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629}},",":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.012578616352201259}}}}}},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259}}}}}}}}}}}}}},";":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00823045267489712},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495}}},"(":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},")":{"docs":{},",":{"docs":{"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},",":{"docs":{"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495}}},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384}}}},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714}}}}}},"m":{"docs":{},"o":{"docs":{},")":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}},";":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.02880658436213992},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.009433962264150943}}}},";":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}}},"[":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"]":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856}},";":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856}}}}}}}},"s":{"docs":{},"]":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},")":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}}}}}}}}}}},"[":{"docs":{},"t":{"docs":{},"]":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}},";":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}}}}}}},"t":{"docs":{},"r":{"docs":{},"]":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}},";":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.009433962264150943}}}}}}}}}},"e":{"docs":{},"t":{"docs":{"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":5.032608695652174},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":3.348258706467661}}}}},"i":{"docs":{},"n":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.01639344262295082},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.0125},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":2.511173184357542},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.007042253521126761},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":3.350877192982456},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":2.5073529411764706},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095}}}}}}}}}}}}}}}}},")":{"docs":{},";":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}}}},".":{"docs":{},"b":{"docs":{},"g":{"docs":{},"n":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.007042253521126761}}}}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}}}}}}},"_":{"docs":{},"b":{"docs":{},"g":{"docs":{},"n":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}},",":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}}}}}},"l":{"docs":{},"_":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}},")":{"docs":{"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}}},";":{"docs":{"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403}}}}}}}}}}}}},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588}}}}}}}}}}}}}}},"(":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},")":{"docs":{},",":{"docs":{"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},",":{"docs":{"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495}}},";":{"docs":{"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495}}},"m":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"s":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095}}}}}}}},"d":{"docs":{},"(":{"1":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"7":{"docs":{},")":{"docs":{"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"n":{"docs":{},"e":{"docs":{},"y":{"docs":{"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856}}}}},"r":{"docs":{},"e":{"docs":{"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335}}}}},",":{"docs":{"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894}}},":":{"docs":{"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364}}},")":{"docs":{"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.015873015873015872},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.011494252873563218}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901}}}}}}}},";":{"docs":{"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.013888888888888888},"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.031746031746031744},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.022988505747126436},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.011111111111111112},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.015748031496062992}}}},"n":{"1":{"docs":{"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496}}},"2":{"docs":{"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.015748031496062992}}},"3":{"docs":{"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496}},")":{"docs":{"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496}}}},"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.009900990099009901},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.007042253521126761},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.012578616352201259},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.017699115044247787},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.028409090909090908},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.013986013986013986},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.010676156583629894},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.020833333333333332},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.016666666666666666},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.014150943396226415},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.011111111111111112},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.015151515151515152},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.023622047244094488},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304}},"u":{"docs":{},"m":{"docs":{"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.01818181818181818}},"[":{"0":{"docs":{},"]":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.009615384615384616}}}},"1":{"docs":{},"]":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.009615384615384616}}}},"docs":{},"i":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.009615384615384616}}},"j":{"docs":{},"]":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.009615384615384616}}}}},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.019230769230769232},"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775},"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.015151515151515152},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.018518518518518517},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.01056338028169014},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.02127659574468085},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.00966183574879227},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.011363636363636364},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.01048951048951049},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.01680672268907563},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":3.3727034120734904},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":3.3405797101449273},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947}},"s":{"docs":{},",":{"docs":{"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496}}},".":{"docs":{"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775}}}}}}},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.008849557522123894}},";":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.009615384615384616},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.009900990099009901},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.008849557522123894}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947}}}}}}}}}}}}}}}}}},":":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.009615384615384616},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.009900990099009901},"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.01818181818181818},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}}},"[":{"0":{"docs":{},"]":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576}},";":{"docs":{"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.01818181818181818},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}}},",":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.007042253521126761},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}}}}},"1":{"docs":{},"]":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576}}}},"docs":{},"i":{"docs":{"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259}},"]":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.019230769230769232},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425}},";":{"docs":{"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947}}}},";":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947}}}}}}}}},"n":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576}}},"l":{"docs":{},"]":{"docs":{},";":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095}}}}},"j":{"docs":{"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259}},"]":{"docs":{"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775}},"}":{"docs":{"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775}}}}},"k":{"docs":{},"]":{"docs":{"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259}}}},"b":{"docs":{},"g":{"docs":{},"n":{"docs":{"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182}},"]":{"docs":{},";":{"docs":{"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182}}}}}}}},")":{"docs":{"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.01818181818181818}}},",":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.007042253521126761},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182}}},";":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947}}}},"_":{"docs":{},"c":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374}}},"r":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374}}}},";":{"docs":{"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.01818181818181818}}},"]":{"docs":{},";":{"docs":{"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182}}}}}}}}}}}}}},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{},",":{"docs":{"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}}}}}}},",":{"docs":{"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.008968609865470852}}}},"l":{"docs":{},"l":{"docs":{},";":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.007633587786259542},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}}},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},";":{"docs":{"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0071174377224199285},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}}},",":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.006993006993006993}}}}}}}}},")":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.01056338028169014},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}}},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576}}}}}}}},"e":{"docs":{},"d":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}}}},"g":{"docs":{"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}}}}}}}}},"x":{"docs":{},"t":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203}},"(":{"docs":{},")":{"docs":{"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203}}}}}},"s":{"docs":{},"t":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":3.3608058608058604},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":2.5308370044052864},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":2.52803738317757},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":2.004484304932735}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.038461538461538464},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.02643171806167401},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.028037383177570093},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.013215859030837005}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495}},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}}}}}}}}}},")":{"docs":{"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}},":":{"docs":{"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947},"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}}}}}}}}},"w":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.008849557522123894}}}},"a":{"docs":{"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444}},"m":{"docs":{},"e":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}}}}},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064}},":":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901}}}},"h":{"docs":{"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294},"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}}},"a":{"docs":{},"t":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.012269938650306749},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.020833333333333332},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.014598540145985401}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005}}}}}}}}}}}}}}}}},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}}}},"(":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}}}}}}}}},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}}}}}}}}}}},"n":{"docs":{"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182}}},"d":{"docs":{},"e":{"docs":{"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.015267175572519083},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.017699115044247787}},".":{"docs":{"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.010676156583629894},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541}}},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},",":{"docs":{"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625}}}}}}}}},",":{"docs":{"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625}}},";":{"docs":{"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625}}},"s":{"docs":{},".":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525}}}}}}},"^":{"2":{"docs":{},")":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629}}}},"docs":{}},",":{"docs":{"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.017045454545454544},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}}},"s":{"docs":{"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182}}},"t":{"docs":{"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}}}}}}},"b":{"docs":{"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444}}},"x":{"docs":{"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374}}},"y":{"docs":{"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374}}},":":{"docs":{"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}}},";":{"docs":{"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.015151515151515152}}}},"p":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.022900763358778626},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.015748031496062992}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.015151515151515152},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.0111731843575419},"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.009900990099009901},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.017543859649122806},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.01818181818181818},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.011363636363636364},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":2},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294}},"(":{"docs":{},"i":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.028846153846153848},"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.0111731843575419}},")":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095}}}},"j":{"docs":{},")":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.028846153846153848},"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.0111731843575419}}}},"n":{"docs":{"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364}},"n":{"docs":{"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009}}}}},"[":{"docs":{},"l":{"docs":{},"]":{"docs":{},",":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095}}}}},"r":{"docs":{},"]":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095}}}},"i":{"docs":{},"]":{"docs":{},";":{"docs":{"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009}}}}},"j":{"docs":{"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009}}}},",":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}}},":":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294}}},")":{"docs":{"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294}}},".":{"docs":{"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294}}}}}},"i":{"docs":{},"x":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.009615384615384616}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":2.0272727272727273},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.01048951048951049}},",":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.017482517482517484}}},".":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}}},";":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.006993006993006993}}},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},")":{"docs":{"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.009615384615384616},"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775},"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.0111731843575419},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.0111731843575419},"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.009900990099009901},"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.01818181818181818},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.01639344262295082},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.017045454545454544},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":0.02127659574468085},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.0036231884057971015},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.007633587786259542},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815},"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.015873015873015872},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.011494252873563218},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.00966183574879227},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947},"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}}}}}},"c":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},",":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"t":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.01639344262295082},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.029585798816568046},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.012578616352201259},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374}}}}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},":":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947},"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}}}}}}},"c":{"docs":{},"e":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.029585798816568046}},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.01639344262295082},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629}}}}}}}}}},":":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.01639344262295082},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629}}},"[":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.01639344262295082}}}}},"docs":{},"i":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.012578616352201259}},"]":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629}}}}},")":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609}}}},")":{"docs":{},";":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.023668639053254437}}}},":":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609}}},"}":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609}}},"[":{"docs":{},"h":{"docs":{},"]":{"docs":{},")":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629}}}}},"j":{"docs":{},"]":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629}},"}":{"docs":{},",":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},":":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.009615384615384616},"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775},"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.009900990099009901},"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.01818181818181818},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.01639344262295082},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00823045267489712},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.01818181818181818},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.01652892561983471},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.014598540145985401},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0071174377224199285},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.01098901098901099},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.00881057268722467},"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":0.02127659574468085},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.009345794392523364},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.01098901098901099},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.012658227848101266},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.0125},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.011049723756906077},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.014705882352941176},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.014814814814814815},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.015267175572519083},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.012903225806451613},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.017699115044247787},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.009174311926605505},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.006993006993006993},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.011428571428571429},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815},"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.015873015873015872},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.011494252873563218},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947},"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}}}}}}},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.011834319526627219}}}}}}}}},"s":{"docs":{},"h":{"docs":{"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775}}}}}}}},"l":{"docs":{},"e":{"docs":{"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.022727272727272728},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.016260162601626018}},".":{"docs":{"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009}}}}},"c":{"docs":{},"k":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.014234875444839857},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.020942408376963352}}}},"e":{"docs":{},"c":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.022222222222222223}},"e":{"docs":{},")":{"docs":{},";":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}}}},":":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}}}}}},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"n":{"docs":{"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496}}}}}}},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}}}}}},"i":{"docs":{},"t":{"docs":{"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182}}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":2.021897810218978},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":2.0061349693251533},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":3.333333333333333}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}},"s":{"docs":{},",":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.018404907975460124},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.03125},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.021897810218978103}}}}}},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496}}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576}},",":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.006993006993006993}}},"s":{"docs":{},".":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":3.3745704467353947},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":3.3661202185792347}},"i":{"docs":{},"c":{"docs":{},".":{"docs":{"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541}}}}}}}}},"(":{"docs":{},"n":{"docs":{},",":{"docs":{"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541}}}}},"[":{"docs":{},"i":{"docs":{"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541}},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541}},":":{"docs":{"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541}}}}}}}}}}}},"r":{"docs":{},"t":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.04424778761061947}},"e":{"docs":{},":":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894}}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.02654867256637168}}}}},"t":{"docs":{},"h":{"docs":{},".":{"docs":{"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384}}}}},"g":{"docs":{},"e":{"docs":{"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}},"s":{"docs":{},":":{"docs":{"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064}}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.014598540145985401},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0071174377224199285},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.010471204188481676}}}}},"n":{"docs":{},"_":{"docs":{},"a":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642}}},"b":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642}},")":{"docs":{},";":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642}}}}}}}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384}}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}}}}}},"i":{"docs":{},"o":{"docs":{},"d":{"docs":{"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.012903225806451613},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.015151515151515152},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}},")":{"docs":{"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064}}},",":{"docs":{"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064}}},".":{"docs":{"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}}},";":{"docs":{"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064}}}}}}}},",":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.022900763358778626},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496}}},":":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.007633587786259542},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496}}},"n":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666}}}}},"s":{"0":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}},",":{"docs":{"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775}}}},"1":{"docs":{"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.007042253521126761},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.015748031496062992},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}},",":{"docs":{"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135}}},")":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496}}}}}}}}}}}},":":{"docs":{"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}}}},"2":{"docs":{"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.012903225806451613},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}},",":{"docs":{"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}}},")":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135}}},".":{"docs":{"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496}}},")":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}}}}}}}}}}}},":":{"docs":{"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}}}},"3":{"docs":{"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.015748031496062992}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496}}}}}}}}}}}},":":{"docs":{"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496}}},"[":{"docs":{},"i":{"docs":{"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.015748031496062992}}}}},"docs":{"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.015789473684210527},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.016666666666666666},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}},"i":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}},"z":{"docs":{},"e":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.009615384615384616},"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":2.522346368715084},"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":1.6864686468646863},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.01639344262295082},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.04},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.017699115044247787},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625}},"(":{"0":{"docs":{},")":{"docs":{},",":{"docs":{"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}}}}},"docs":{}},";":{"docs":{"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.013888888888888888}}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.02197802197802198},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.01762114537444934},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.018691588785046728}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947}}}}}}},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.019230769230769232},"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.02247191011235955},"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.01675977653631285},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.015151515151515152},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.0111731843575419},"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.019801980198019802},"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.03636363636363636},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.012903225806451613},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.018518518518518517},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.007042253521126761},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.03278688524590164},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.015625},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.011834319526627219},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.012578616352201259},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.02},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.017699115044247787},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.018691588785046728},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.019801980198019802},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.02127659574468085},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.02247191011235955},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.02127659574468085},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.022727272727272728},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.016260162601626018},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.018518518518518517},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.00966183574879227},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.008928571428571428},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.023809523809523808},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.011363636363636364},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00823045267489712},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.017543859649122806},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.021739130434782608},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.013888888888888888},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.020618556701030927},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.01639344262295082},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.013888888888888888},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.013986013986013986},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.012269938650306749},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.01818181818181818},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.011363636363636364},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.015748031496062992},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.010526315789473684},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.014598540145985401},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0071174377224199285},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.010471204188481676},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.01818181818181818},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.01652892561983471},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.014598540145985401},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0071174377224199285},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.01098901098901099},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":0.02127659574468085},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.0036231884057971015},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.009345794392523364},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.008968609865470852},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.01098901098901099},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.012658227848101266},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.01639344262295082},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.0125},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.011049723756906077},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.014705882352941176},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.014814814814814815},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.015267175572519083},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.01935483870967742},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.017699115044247787},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.009174311926605505},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.006993006993006993},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.012269938650306749},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.020833333333333332},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.014598540145985401},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.017241379310344827},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.011428571428571429},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.016666666666666666},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.009433962264150943},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.01680672268907563},"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.031746031746031744},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.022988505747126436},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.011111111111111112},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.012903225806451613},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.015151515151515152},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.015748031496062992},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.00966183574879227},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.014492753623188406},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.01020408163265306},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.021739130434782608},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.014925373134328358},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947},"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}}},"v":{"1":{"docs":{},",":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633}}}},"docs":{},"e":{"docs":{},"c":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203}}}}}}}}},".":{"docs":{"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}}}}}}}},"v":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.017045454545454544}}}},"r":{"docs":{},"t":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576}}}}},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.009615384615384616},"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.009900990099009901},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947}},"&":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856}}},">":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294}},"&":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}}},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},">":{"docs":{"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894}},"&":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0071174377224199285},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.017241379310344827},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.011428571428571429},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.009433962264150943},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947}},"&":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.017241379310344827},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.011428571428571429}}},"(":{"docs":{},"n":{"2":{"docs":{"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496}}},"docs":{"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909}},",":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.010471204188481676}}},"n":{"docs":{},",":{"docs":{"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009}}}},"t":{"docs":{"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182}}},"b":{"docs":{"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444}}},"u":{"docs":{},"m":{"docs":{},"_":{"docs":{},"c":{"docs":{},",":{"docs":{"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374}}}}}}}},"m":{"docs":{"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425}}}}}}}}},">":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.012269938650306749},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.010471204188481676},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.0036231884057971015}},"(":{"docs":{"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425}}}},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},">":{"docs":{"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.014492753623188406}},">":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335}}}},"&":{"docs":{},"&":{"docs":{"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.009345794392523364}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},",":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095}}}}}},"h":{"docs":{},",":{"docs":{"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"l":{"docs":{},"_":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},",":{"docs":{"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}}}}}}}}}}}}}}},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894}},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},",":{"docs":{"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.01818181818181818},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.013986013986013986},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408}}}}},"[":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904}}}}},"docs":{}}},"b":{"docs":{},"u":{"docs":{},"y":{"docs":{},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},",":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},",":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},",":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},",":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609}}}}}}}}}}}}}},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364}}},"n":{"docs":{},"x":{"docs":{},"]":{"docs":{},"[":{"docs":{},"n":{"docs":{},"y":{"docs":{},"]":{"docs":{},",":{"docs":{"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"b":{"docs":{},"g":{"docs":{},"n":{"docs":{},"]":{"docs":{},",":{"docs":{"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182}}}}}}}}},"o":{"docs":{},"t":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856}}}}},",":{"docs":{"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"_":{"docs":{},"a":{"docs":{},",":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},",":{"docs":{"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}}}}}}}}}}},"l":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633}}}}}}}}}},",":{"docs":{"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},",":{"docs":{"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"_":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294}}}}}}}}}}}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},",":{"docs":{"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},"?":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095}}}},";":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588}}}}}}},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.011834319526627219},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}},"&":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.00966183574879227},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.017241379310344827},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.011428571428571429}},"&":{"docs":{"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005}}},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},",":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},",":{"docs":{"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374}}}}}}}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"(":{"docs":{},"l":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625}}}}}}},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},")":{"docs":{},";":{"docs":{"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},">":{"docs":{"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294}},")":{"docs":{"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775}}},",":{"docs":{"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.014492753623188406},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.01020408163265306},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.021739130434782608},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.014925373134328358}}},":":{"docs":{"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775}}},";":{"docs":{"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},",":{"docs":{"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005}}},".":{"docs":{"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005}}}},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}},"]":{"docs":{},")":{"docs":{"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}},")":{"docs":{},";":{"docs":{"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"k":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374}},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.012269938650306749},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.020833333333333332},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.014598540145985401}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"i":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.021897810218978103}}}}}}}}},";":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005}}},",":{"docs":{"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005}}}}}},"r":{"docs":{"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.01818181818181818}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.012269938650306749},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.008968609865470852},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.01639344262295082},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294}},"u":{"docs":{},"r":{"docs":{"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":0.02127659574468085},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947}}}}}}},",":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.00966183574879227},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.02631578947368421},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.03260869565217391},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.020833333333333332},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.01639344262295082},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.017045454545454544},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":5.047244094488189},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":5.036842105263158},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.011428571428571429},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.011299435028248588}},",":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135}}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}}}}}}}}}}},"s":{"docs":{},",":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}}}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}}}},"docs":{},"l":{"docs":{},",":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}}}}}}}}}}}},":":{"docs":{"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":2.0163934426229506},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":1.6822916666666665},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":1.6844181459566074},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":1.6792452830188678}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.01639344262295082}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":5.011363636363637},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":3.341463414634146}},"g":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"2":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009}}}}}}}}}},"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364}}}}}}}}}}}}}}}},"e":{"docs":{},"p":{"docs":{"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.014598540145985401}},"s":{"docs":{},".":{"docs":{"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403}}}}}},"k":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.017241379310344827},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.011428571428571429}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.01818181818181818}},")":{"docs":{},";":{"docs":{"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.01652892561983471}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}}}}}}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"(":{"1":{"docs":{},",":{"docs":{"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}}},"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}},",":{"docs":{"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"(":{"docs":{},"b":{"docs":{},"g":{"docs":{},"n":{"docs":{},",":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.00881057268722467}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}},";":{"docs":{"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}}}}}}}},";":{"docs":{"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.017241379310344827},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.011428571428571429}}},")":{"docs":{"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005}},";":{"docs":{"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.014598540145985401}}}}},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}}}}}},"u":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":5.009615384615385},"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":3.3445692883895126},"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":3.340909090909091},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":2.522346368715084},"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":1.6963696369636962},"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":5.036363636363636},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":3.3518518518518516},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":2.517605633802817},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":2.5144927536231885}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.009615384615384616}}}}}}}}},"i":{"docs":{},"i":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.01818181818181818}}}}}}}}}}},",":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}}},".":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.007042253521126761}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":5.005586592178771},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":5.006451612903226}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},">":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095}}}}}}}}}}}}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":3.347222222222222},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":3.3579234972677594},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":3.34032634032634},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444}}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541}}}}}}}}}}},",":{"docs":{"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541}}}}}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":3.3550724637681157},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":3.353951890034364},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":3.3402777777777777},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":1.6789366053169732},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":3.3606060606060604},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":5.011363636363637}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909}}}}}}}}}}},"'":{"docs":{"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464}}},")":{"docs":{"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444}}},"s":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384}}}}}},"m":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":5.019230769230769},"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":3.3445692883895126},"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":5.016759776536313},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":3.3636363636363633},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":2.5335195530726256},"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":1.7062706270627062},"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.01818181818181818},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":3.3518518518518516},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":2.5211267605633805},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.012578616352201259},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.0449438202247191},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":5.01063829787234},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":2.514018691588785},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":2.0269058295964126},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}},"(":{"docs":{},"i":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0071174377224199285},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838}},",":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.019230769230769232},"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.0111731843575419},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.020942408376963352}}},")":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0071174377224199285}},":":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642}}}}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}},",":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576}}}}}}},"n":{"docs":{},",":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838}}}}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.009615384615384616},"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775},"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682}}}}}}}}}}},",":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576}}},";":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.007042253521126761},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}},")":{"docs":{"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.009900990099009901},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}}},"[":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642}}},"[":{"docs":{},"n":{"docs":{"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838}}}}}},"docs":{},"i":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642}},"]":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.017793594306049824}},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.010471204188481676}}}}}}},"n":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.010676156583629894}}}}},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496}}}}}},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}},",":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}}},".":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}}}}}}},"c":{"docs":{},"h":{"docs":{},":":{"docs":{"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":0.02127659574468085},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.008849557522123894}}}}}},"n":{"docs":{"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.0111731843575419},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095}}}},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}},"s":{"docs":{},".":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259}}}}},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"l":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":5.031578947368421}}}}}}}},"p":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.015789473684210527}},"a":{"docs":{},"n":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}}}},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682}}}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.008849557522123894}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}}}}}}}}}}}}}},"y":{"docs":{},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"_":{"docs":{},"r":{"docs":{},",":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.0111731843575419}}}}}}},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374}},")":{"docs":{"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}}},";":{"docs":{"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.011428571428571429}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576}},",":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576}}}}},"1":{"docs":{},"]":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.015151515151515152}},",":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576}}}}},"2":{"docs":{},"]":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576}},",":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576}}},":":{"docs":{"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714}}}}},"3":{"docs":{},"]":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576}}}},"docs":{},"n":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.015151515151515152}},"]":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576}}}},"i":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.01932367149758454},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.022321428571428572}},"]":{"docs":{"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182}},":":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.024154589371980676},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.044642857142857144}}}}},"j":{"docs":{},"]":{"docs":{"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541}},",":{"docs":{"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909}}}}}},")":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.0111731843575419},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556}},";":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095}}}},",":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}}},":":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.011111111111111112}}},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095}}}}},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064}}}}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.011111111111111112}},"e":{"docs":{},"r":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095}}}}}}}},"k":{"docs":{"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064}},"i":{"docs":{"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":3.3405797101449273}}},"y":{"docs":{},".":{"docs":{"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203}}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203}}}}}}}}}}}}},"(":{"docs":{},"i":{"docs":{},",":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}}}}},"j":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":2.0327868852459017},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":1.6822916666666665},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":1.6785009861932938},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":1.6792452830188678}},"_":{"1":{"docs":{},"s":{"docs":{},"t":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.011834319526627219}},",":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609}}},":":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609}}}}}},"2":{"docs":{},"n":{"docs":{},"d":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609}},",":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609}}},":":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609}}}}}},"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.01775147928994083}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.011834319526627219}},";":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.011834319526627219}}}}}}}},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.011049723756906077}},"s":{"docs":{},".":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125}}},":":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125}}},",":{"docs":{"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.011834319526627219},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}}}}},"u":{"docs":{},"r":{"docs":{"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259}}}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":2.510989010989011},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":1.6819338422391856},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":2.506993006993007}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294}}}}}}}}}},"t":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.022123893805309734}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894}}}}}}}}}}}}}}}},";":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}}}}}}},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}}}}}}}}}},"q":{"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.01020408163265306}},"a":{"docs":{},")":{"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}}},":":{"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}}}},"b":{"docs":{},")":{"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}}},":":{"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}}}}}},".":{"docs":{"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"(":{"docs":{},"b":{"docs":{},"g":{"docs":{},"n":{"docs":{},",":{"docs":{"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541}}}}}},"i":{"docs":{},",":{"docs":{"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541}}},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}}}}}}}}},"s":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.015789473684210527}}},"a":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0071174377224199285},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.010471204188481676}},":":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838}}}},"b":{"docs":{},"'":{"docs":{},"'":{"docs":{},".":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0071174377224199285},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.010471204188481676}}}},".":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0071174377224199285},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.010471204188481676}}}},":":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838}}}},"r":{"docs":{},"c":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.006993006993006993}},",":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.013986013986013986}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947}}}},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},")":{"docs":{"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005}}}}}}}}}}},"q":{"docs":{},"r":{"docs":{},"t":{"docs":{"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.015873015873015872}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.015873015873015872}}}}},"x":{"docs":{},")":{"docs":{"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":10.015873015873016},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":5.011494252873563}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.011494252873563218}}}}}}}}}},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.011494252873563218}}}}}},";":{"docs":{"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556}}}},"v":{"1":{"docs":{},",":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633}}},":":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633}}}},"2":{"docs":{},")":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633}},";":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633}}}},":":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633}}}},"docs":{"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":5.01063829787234}},"e":{"docs":{},"c":{"2":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"2":{"docs":{},"d":{"docs":{},")":{"docs":{"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":0.02127659574468085}}}}},"docs":{}}}}},")":{"docs":{"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":0.02127659574468085}}},";":{"docs":{"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":0.02127659574468085}}}}},"docs":{"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203}},"t":{"docs":{},"o":{"docs":{},"r":{"2":{"docs":{},"d":{"docs":{"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":0.06382978723404255}},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},">":{"docs":{},"&":{"docs":{"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":0.02127659574468085}}}}}}}}}}}}},"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.009615384615384616},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.017699115044247787},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.01098901098901099},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":3.354609929078014},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.012658227848101266},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.01020408163265306}},">":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095}}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":0.02127659574468085}}}}}}}}}}},"&":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682}}},",":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947}}}}}},"s":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"s":{"docs":{},")":{"docs":{"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.0036231884057971015}}}}}}}},")":{"docs":{"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.014492753623188406}}},":":{"docs":{"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203}}},";":{"docs":{"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.0036231884057971015}}}}},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.010526315789473684}}}}}}}},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095}}}}}},"l":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.007633587786259542}},"u":{"docs":{"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.009900990099009901},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.02654867256637168},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.014234875444839857},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.020942408376963352},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.008849557522123894},"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838}}}}}}}}}},":":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838}}},"[":{"docs":{},"i":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0071174377224199285}},"]":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.014234875444839857},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838}},";":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642}}}}},"n":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.014234875444839857}}},"j":{"docs":{},"]":{"docs":{"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838}}}}}},")":{"docs":{"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}},")":{"docs":{},";":{"docs":{"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.020833333333333332}}}}},":":{"docs":{"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}}},";":{"docs":{"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}}}}},")":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.012269938650306749},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.015267175572519083},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.008849557522123894}}},";":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00823045267489712},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.01818181818181818},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.01652892561983471},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.014598540145985401},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0071174377224199285},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.01098901098901099},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.012658227848101266},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.0125},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.011049723756906077},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.014705882352941176},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.014814814814814815},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.015267175572519083},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.012903225806451613},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.009174311926605505},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.006993006993006993}}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374}}}}}},"x":{"docs":{},")":{"docs":{},",":{"docs":{"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541}}}}}},",":{"docs":{"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495}}},"i":{"docs":{},"d":{"docs":{"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":2.5054945054945055}}}},":":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.008849557522123894}}}}},":":{"docs":{"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364}}},"[":{"docs":{},"i":{"docs":{"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364}},"]":{"docs":{"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894}}}}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425}}}}}}}}}}},"i":{"docs":{"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":5}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294},"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}}}}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"i":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.009615384615384616},"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775},"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.009900990099009901},"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.01818181818181818},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.01639344262295082},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.00881057268722467},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.012658227848101266},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.014492753623188406},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.007633587786259542},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815},"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.015873015873015872},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.011494252873563218},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.01694915254237288},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.01327433628318584},"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.013888888888888888}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"!":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}}}}}}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947}}}},"y":{"docs":{"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":5.0144927536231885},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":3.3467261904761902},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}},"s":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.014598540145985401},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838}},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.0111731843575419}},")":{"docs":{},";":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095}}}},".":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095}}}}}},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005}},"e":{"docs":{},".":{"docs":{"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.011363636363636364}}}}}},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":2.53125}},";":{"docs":{"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625}}},"o":{"docs":{},"f":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":2.5093457943925235},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":2.0179372197309418}},"(":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}}}}}}}}},")":{"docs":{"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}},";":{"docs":{"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}}}}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"1":{"docs":{},":":{"docs":{"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403}}}},"2":{"docs":{},":":{"docs":{"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403}}}},"docs":{"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":5.025},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":3.342767295597484},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":3.3585434173669464},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.01694915254237288}},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"3":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"&":{"docs":{"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}}}}}}}}}}},"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}}}}}}}}}}},"s":{"docs":{},".":{"docs":{"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}}},")":{"docs":{"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.01680672268907563}}}},")":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.011299435028248588}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},",":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}}},":":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}}}}}}},":":{"docs":{"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.011299435028248588}}}},"k":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064}},".":{"docs":{"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064}}}}},"o":{"docs":{},"d":{"docs":{"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":5.016666666666667},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496}},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.015748031496062992},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}}}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}}}}}}},"{":{"0":{"docs":{},",":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.00966183574879227},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.013392857142857142},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.012269938650306749}}}},"1":{"docs":{},",":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}}}},"3":{"docs":{},",":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714}}}},"7":{"docs":{},",":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.008928571428571428}}}},"docs":{"Prefix Sum and Subarray/Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Subarray Sum.html","tf":0.019230769230769232},"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.0449438202247191},"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.01675977653631285},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.045454545454545456},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.027932960893854747},"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.019801980198019802},"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.05454545454545454},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.03225806451612903},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.046296296296296294},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.04225352112676056},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.04918032786885246},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0234375},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.01775147928994083},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.03773584905660377},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.03},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.02654867256637168},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.028037383177570093},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.0297029702970297},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.031914893617021274},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.0449438202247191},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.031914893617021274},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.03409090909090909},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.024390243902439025},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.027777777777777776},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.043478260869565216},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.017857142857142856},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.03571428571428571},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.03409090909090909},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.037037037037037035},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.017543859649122806},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.021739130434782608},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.013888888888888888},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.030927835051546393},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.03278688524590164},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.05555555555555555},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.055944055944055944},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.06748466257668712},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.02727272727272727},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.011363636363636364},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.023622047244094488},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.031578947368421054},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.029197080291970802},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.017793594306049824},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.020942408376963352},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.07272727272727272},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.06611570247933884},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.08759124087591241},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.03202846975088968},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.054945054945054944},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.048458149779735685},"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":0.0425531914893617},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.06329113924050633},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.06884057971014493},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.0514018691588785},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.06278026905829596},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.06593406593406594},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.06962025316455696},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.07377049180327869},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.0625},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.03867403314917127},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.0661764705882353},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.06666666666666667},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.04580152671755725},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.05806451612903226},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.05309734513274336},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.06422018348623854},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.045454545454545456},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.04294478527607362},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.07291666666666667},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.072992700729927},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.07758620689655173},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.06285714285714286},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.041666666666666664},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.05660377358490566},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.058823529411764705},"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.06349206349206349},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.05747126436781609},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.05},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.04516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.030303030303030304},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.031496062992125984},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.01932367149758454},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.06521739130434782},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.08163265306122448},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.07608695652173914},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.06716417910447761},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.07344632768361582},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.035398230088495575},"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.04861111111111111}},"b":{"docs":{},"g":{"docs":{},"n":{"docs":{},",":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"}":{"docs":{"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},".":{"docs":{},"b":{"docs":{},"g":{"docs":{},"n":{"docs":{},",":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.007042253521126761}}}}}}}}}},"}":{"docs":{"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541}},";":{"docs":{"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"}":{"docs":{"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335}}}}}},"\"":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}},"(":{"docs":{},"\"":{"docs":{},",":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}}}}},"+":{"docs":{},"\"":{"docs":{},",":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}}}}},"/":{"docs":{},"\"":{"docs":{},",":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}}}}},"\"":{"docs":{},"}":{"docs":{},";":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}}}}}}},"a":{"1":{"docs":{"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064}},",":{"docs":{"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775}}}},"2":{"docs":{"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.012903225806451613}},",":{"docs":{"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775}}}},"3":{"docs":{"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064}}},"docs":{},":":{"docs":{"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525}}},"n":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.01675977653631285},"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.009900990099009901},"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.03636363636363636},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.02097902097902098},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.012269938650306749},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.011049723756906077},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.014705882352941176},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.014814814814814815}},"s":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775}}}}},";":{"docs":{"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.01818181818181818},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.01652892561983471},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.014598540145985401},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.01098901098901099},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.01020408163265306}}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005}}}}}},"b":{"docs":{},"g":{"docs":{},"n":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}},")":{"docs":{},";":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408}},";":{"docs":{"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.016574585635359115},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.029411764705882353},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.022222222222222223}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":1.6819338422391856},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":2.0129032258064514},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":1.6932153392330382},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":1.675840978593272}},"(":{"docs":{},"l":{"docs":{},"c":{"docs":{},"a":{"docs":{},")":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525}}}}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.009900990099009901},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.01056338028169014},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.01639344262295082},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.028037383177570093},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}},")":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064}}},".":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.0111731843575419}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095}}}},"1":{"docs":{},"]":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095}}}},"docs":{},"i":{"docs":{},"]":{"docs":{},";":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095}}}}}},",":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}}}},"r":{"docs":{},"o":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556}}}}},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}}}}}}}}}}}}}}},"d":{"docs":{},"j":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}}}}}},",":{"docs":{"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.012903225806451613},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.018518518518518517},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.01935483870967742},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.022935779816513763}}},"k":{"docs":{"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064}}},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259}}},";":{"docs":{"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904}}}}},"1":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904}}}}}},"docs":{},"i":{"docs":{"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.02},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.02097902097902098}},"]":{"docs":{"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.02},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.00966183574879227}},".":{"docs":{"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403}}}}},"j":{"docs":{},"]":{"docs":{"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.00966183574879227}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}}}}}}}}}},"g":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.010676156583629894},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.015706806282722512}}}}}}},"s":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125}}}}}}},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.031496062992125984}}}}}}},"(":{"0":{"docs":{},",":{"docs":{"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444}}}},"docs":{}},"b":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.012269938650306749}},"c":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374}},"d":{"docs":{},",":{"docs":{"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444}}}},"/":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.012269938650306749}},"d":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.018404907975460124}},"e":{"docs":{},"+":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374}},"*":{"docs":{},"+":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374}},"f":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.012269938650306749}}}}}}}}}},"o":{"docs":{},"v":{"docs":{"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556}}}}},"l":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947}}}}}}},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682}}}}},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},".":{"docs":{"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}}}}}}}}}}},"t":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},",":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304}}}}}}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.01652892561983471},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0071174377224199285},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.016483516483516484},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.0189873417721519},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.012903225806451613},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.013761467889908258},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.014150943396226415},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.01694915254237288},"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.020833333333333332}},"&":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.015789473684210527},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.016483516483516484},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.013215859030837005},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.018691588785046728},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.013452914798206279},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.017241379310344827},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.011428571428571429},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.009433962264150943},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.021739130434782608},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.025510204081632654},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.022388059701492536}},"&":{"docs":{"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.008968609865470852}}}}}}},";":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894}}},")":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525}}},"c":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":2.5193236714975846}}}}}}},"i":{"docs":{},"r":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":3.36231884057971}},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203}}},":":{"docs":{"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203}}}}}}}}}}}},"b":{"1":{"docs":{"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.012903225806451613}}},"2":{"docs":{"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.012903225806451613}}},"3":{"docs":{"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064}}},"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.0111731843575419},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.03225806451612903},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.046296296296296294},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.024390243902439025},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.027777777777777776},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.011363636363636364},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.013888888888888888},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.028409090909090908},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.021897810218978103},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.03202846975088968},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.012269938650306749},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496}},".":{"docs":{"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775}}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}}}}}}}},"o":{"docs":{},"l":{"docs":{"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.010526315789473684},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.00881057268722467},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.016483516483516484},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.012658227848101266},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.013761467889908258},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.01694915254237288},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.02654867256637168}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333}}}}}},"k":{"docs":{"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":5.019354838709678},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":3.348484848484848}},";":{"docs":{"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.012903225806451613}}},"s":{"docs":{},")":{"docs":{"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.012903225806451613}}},",":{"docs":{"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.012903225806451613},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}}}}},"t":{"docs":{},"h":{"docs":{"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384}}}}},")":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.012903225806451613},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.013761467889908258}},";":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.012903225806451613},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.013761467889908258}}}},"k":{"docs":{"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064}}},"n":{"docs":{"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064}}},"g":{"docs":{},"n":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.017605633802816902},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.01639344262295082},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.00881057268722467},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.009345794392523364},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}},";":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}}},"(":{"docs":{},"b":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},",":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}}}}}}},",":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.007042253521126761},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.009345794392523364},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.008968609865470852}}},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"1":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},",":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633}}}}}}}}}}}}},"docs":{}}},",":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633}},"(":{"docs":{},"v":{"2":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},",":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633}}}}}}}}}}}}},"docs":{}}},",":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"g":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203}}}}}},"e":{"docs":{"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714}},"s":{"docs":{},"t":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":2.0163934426229506},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":1.6744791666666665},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":1.6725838264299802},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":1.6729559748427671}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556}}}}}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541}}}}},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496}}}}}}}},"u":{"docs":{},"y":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":2.0327868852459017},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":1.6822916666666665},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":1.6785009861932938},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":1.6792452830188678}},"_":{"1":{"docs":{},"s":{"docs":{},"t":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.01775147928994083}},",":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609}}}}}},"2":{"docs":{},"n":{"docs":{},"d":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.01775147928994083}},",":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609}}}}}},"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.01775147928994083}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.01775147928994083}}}}}}}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":5.018518518518518}}}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}}}}}}}}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}}}}}}},"r":{"docs":{},"p":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":10.02},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":5.017699115044247},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":5.009345794392523},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":5.00990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":5.01063829787234},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":5}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01}}}}}},"i":{"docs":{},"i":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894}}}}}},"i":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364}}}}}}}}}}},"v":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901}}}}}}}}}}},"v":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425}}}}}}}}},"i":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"n":{"docs":{"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":5.027777777777778}},".":{"docs":{"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259}}},"s":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":3.3396624472573837}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{},",":{"docs":{"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633}}}}}}}}}}}}},",":{"docs":{"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.012658227848101266}}},";":{"docs":{"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633}}}}}}}}},"s":{"docs":{},"e":{"docs":{"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":5.008333333333334},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":3.342767295597484},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":3.3501400560224086}},";":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.029197080291970802}}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.016574585635359115}},";":{"docs":{"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294}}}}}}}},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":2.0090909090909093},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":2.0082644628099175},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":2.0072992700729926},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":2.0106761565836297},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":2.521978021978022},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":3.3586497890295357},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":3.3579234972677594},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":2.5125},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":3.349907918968692},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":2.5220588235294117},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":2.522222222222222},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":1.6819338422391856},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":2.0193548387096776},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":1.6755162241887904},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":1.675840978593272},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":2.506993006993007},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}}},"y":{"docs":{},".":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.012903225806451613},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.009174311926605505}}}}}}}},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.00966183574879227}},",":{"docs":{"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444}}}}},"i":{"docs":{},"]":{"docs":{"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.00966183574879227}}}}},"(":{"0":{"docs":{},",":{"docs":{"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444}}}},"docs":{}},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444}}}}}}}}}},":":{"docs":{"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525}}},",":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838}}},"s":{"docs":{},"t":{"docs":{},",":{"docs":{"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495}}},"s":{"docs":{},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894}}},"c":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}},"d":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}}}}},"e":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.024390243902439025},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}},"n":{"docs":{},"d":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.014084507042253521},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.017543859649122806},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.01639344262295082},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.01818181818181818},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.011363636363636364},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}},")":{"docs":{"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.02247191011235955},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.01098901098901099},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.00881057268722467},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.014018691588785047},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.013452914798206279},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}},")":{"docs":{},";":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.00881057268722467}}}}},":":{"docs":{"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775}}},";":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.007042253521126761},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.014492753623188406},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.01020408163265306},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.021739130434782608},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.014925373134328358}}},"(":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}},",":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}}}}}}}},",":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.007042253521126761}}},"}":{"docs":{},";":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}}}},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633}},"(":{"docs":{},"v":{"1":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},",":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633}}}}}}}}}}},"docs":{}}},")":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633}}},",":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"2":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},",":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633}}}}}}}}}}},"docs":{}}},")":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.012658227848101266}}},";":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.0036231884057971015}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203}}},"[":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"]":{"docs":{},")":{"docs":{"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714}}}}},"u":{"docs":{},"m":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384}}}},"t":{"docs":{},"g":{"docs":{},"r":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}}}}}},"q":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":1.6864686468646863},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}},":":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}}}}}}},".":{"docs":{},"g":{"docs":{},":":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}}},".":{"docs":{},":":{"docs":{"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444}}}}}},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541}}}}},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}}}}}}}},"p":{"docs":{},")":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.017241379310344827},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.011428571428571429}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":4.0184049079754605},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":4.03125},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":3.333333333333333},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":3.3419540229885056},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":3.3447619047619046}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.017142857142857144}},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}}}}}},"*":{"docs":{"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}}},":":{"docs":{"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}}}}}}}}}}}}}}}}}},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666}}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},";":{"docs":{"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666}}}}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}}}}}}}}}}}},")":{"docs":{"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":3.3421052631578942}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.0036231884057971015},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.00881057268722467},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.02654867256637168}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}}}}},".":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947}}}}}},";":{"docs":{"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.0036231884057971015}}},".":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}}}},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"r":{"docs":{},"p":{"docs":{},"n":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005}}}}}}}}}}}},"u":{"docs":{"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":3.3406326034063256},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":3.3419540229885056}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},",":{"docs":{"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.029197080291970802}}}}}},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"&":{"docs":{"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"p":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414}}}}}}},"r":{"docs":{},"p":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414}}}}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}},":":{"docs":{},":":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203}}}}}}}},"o":{"docs":{},"g":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},")":{"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}},")":{"docs":{},";":{"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.01020408163265306}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.01020408163265306}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"_":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203}}}}}}}}}}}}},"b":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}}}}}}}}},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}}}}}}}}},")":{"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}}},";":{"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}}}}}}}},"r":{"docs":{"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.0335195530726257},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00823045267489712},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.013888888888888888},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.011363636363636364},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.011049723756906077},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525},"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.047619047619047616},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.04597701149425287},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.022222222222222223},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.012903225806451613},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.022727272727272728},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.00966183574879227}},"e":{"docs":{"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.0111731843575419},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.012903225806451613},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.009259259259259259},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.014084507042253521},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.01639344262295082},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.012578616352201259},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.028985507246376812},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.017045454545454544},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.01646090534979424},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.01639344262295082},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.013888888888888888},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.013986013986013986},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.024539877300613498},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.021052631578947368},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.014598540145985401},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.010676156583629894},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.010471204188481676},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.01818181818181818},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.01652892561983471},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.014598540145985401},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.02491103202846975},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.02197802197802198},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.02643171806167401},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.03164556962025317},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.018115942028985508},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.018691588785046728},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.008968609865470852},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.027472527472527472},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.0379746835443038},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.01639344262295082},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.0125},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.027624309392265192},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.014705882352941176},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.014814814814814815},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.022900763358778626},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.03870967741935484},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.017699115044247787},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.03211009174311927},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.017241379310344827},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.017142857142857144},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.016666666666666666},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.02358490566037736},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.01680672268907563},"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.015873015873015872},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.022988505747126436},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.011111111111111112},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.012903225806451613},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.014492753623188406},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.01020408163265306},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.021739130434782608},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.022598870056497175},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.02654867256637168},"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.013888888888888888}},";":{"docs":{"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}}}}}}},"c":{"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.007042253521126761},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.012658227848101266},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.013761467889908258},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.006993006993006993},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}},"(":{"0":{"docs":{},",":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576}}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"b":{"docs":{},"g":{"docs":{},"n":{"docs":{},",":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525}}}}}},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},",":{"docs":{"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.012658227848101266}}}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},",":{"docs":{"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.0189873417721519}}}}},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625}}}}}}}}}}},")":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525}},";":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525}}}}},"&":{"docs":{"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.012269938650306749}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374}},"e":{"docs":{},">":{"docs":{"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"(":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},",":{"docs":{"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},",":{"docs":{"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203}}}}}},"v":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":2.5034965034965033}}}},".":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},";":{"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.01020408163265306}}}}}}}},"s":{"docs":{},")":{"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}}},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},",":{"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.01020408163265306}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},",":{"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.01020408163265306}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},",":{"docs":{"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},",":{"docs":{"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}}}},"a":{"docs":{},"l":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.0111731843575419}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},".":{"docs":{"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009}}}}}}},"a":{"docs":{},"c":{"docs":{"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":3.3606060606060604}}}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.01098901098901099},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.00881057268722467},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.009345794392523364},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.016483516483516484},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.029197080291970802}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},";":{"docs":{"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495}}}}}}}}}},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495}}}}}},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.01098901098901099}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495}}}}}}}}},";":{"docs":{"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182}}}}}}}}}}}},".":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"d":{"docs":{},";":{"docs":{"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633}}}}}}}}}}},"l":{"docs":{},"c":{"docs":{},"a":{"docs":{},";":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525}}}}}}},")":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.008849557522123894}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.018404907975460124},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.021897810218978103}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}}}}},"f":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947},"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}}},"[":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},"]":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"]":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947}},";":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"]":{"docs":{"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.020833333333333332}},";":{"docs":{"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.013888888888888888}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947}}}}}},")":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.011494252873563218},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.011111111111111112}},";":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384}},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541}}}}}}}},";":{"docs":{"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}}}}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.011363636363636364}},"e":{"docs":{},".":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.007042253521126761}}},"(":{"docs":{},"i":{"docs":{},",":{"docs":{"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259}}}}}}},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947}},"(":{"docs":{},")":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.022123893805309734}},"(":{"docs":{},")":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947}},";":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.008849557522123894}}}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.017045454545454544},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856}},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":5.011904761904762},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":3.3446969696969693},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":3.3415637860082303}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904}}}}}}}}}}}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182}}}}}}}}},"o":{"docs":{},"t":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00823045267489712},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.029197080291970802},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.017793594306049824},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.027472527472527472},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.011049723756906077},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.022900763358778626},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.012903225806451613},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.011428571428571429},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.011494252873563218}},")":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0071174377224199285},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.01098901098901099},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.012658227848101266},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}}},",":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.007633587786259542},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.009174311926605505}}},":":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.007633587786259542},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}}},";":{"docs":{"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.007633587786259542},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.012903225806451613},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.022598870056497175}}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"_":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":5.010869565217392},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":3.3557213930348255}},"s":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304}}}}}}}}}}}}}}},"l":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00823045267489712}},",":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856}}}},"r":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.012345679012345678}}},"u":{"docs":{},"n":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.024691358024691357},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0071174377224199285},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.01098901098901099},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.012658227848101266},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.011049723756906077},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.009174311926605505}},",":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525}}},")":{"docs":{},";":{"docs":{"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.014705882352941176},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.014814814814814815}},",":{"docs":{"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.006993006993006993}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}}}}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}},"s":{"docs":{},",":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}}},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},",":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"s":{"docs":{},")":{"docs":{"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},";":{"docs":{"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},")":{"docs":{"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304}}}}}}}}}}},".":{"docs":{"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384}},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633}},";":{"docs":{"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"a":{"docs":{},";":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525}}}},"b":{"docs":{},";":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525}}}}}}}}}}},",":{"docs":{"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384}}},";":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525},"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.015873015873015872}}},"p":{"docs":{},"n":{"docs":{"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374}}}}}}}}}}}}},"k":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.017241379310344827},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.011428571428571429}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.017241379310344827},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.011428571428571429}}},")":{"docs":{"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.017241379310344827},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.011428571428571429}}}}},"_":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.00966183574879227}}}}}}},"u":{"docs":{},"p":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947}}}}}},"s":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.0111731843575419},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.018691588785046728},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.019801980198019802},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}}},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.01098901098901099},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.00881057268722467},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.009345794392523364}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}},"&":{"docs":{"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}}}}}}}}}}}}}}}},"}":{"docs":{"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.0449438202247191},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.015151515151515152},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.027932960893854747},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.012903225806451613},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.018518518518518517},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.035211267605633804},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.01639344262295082},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.029585798816568046},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.031446540880503145},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.04},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.035398230088495575},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.037383177570093455},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.039603960396039604},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.0425531914893617},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.0449438202247191},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.05319148936170213},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.033816425120772944},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.008928571428571428},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.023809523809523808},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.022727272727272728},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.03292181069958848},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.020618556701030927},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.04918032786885246},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.0625},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.055944055944055944},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.05521472392638037},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.01818181818181818},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.021052631578947368},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.014598540145985401},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.014234875444839857},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.015706806282722512},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.06363636363636363},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.05785123966942149},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.08029197080291971},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.028469750889679714},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.04395604395604396},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.039647577092511016},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.05063291139240506},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.06159420289855073},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.037383177570093455},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.04932735426008968},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.054945054945054944},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.056962025316455694},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.05737704918032787},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.05625},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.03314917127071823},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.058823529411764705},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.05925925925925926},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.03816793893129771},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.05161290322580645},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.04424778761061947},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.05504587155963303},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.04195804195804196},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.024539877300613498},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.041666666666666664},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.06569343065693431},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.0603448275862069},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.06857142857142857},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.05},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.05188679245283019},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.058823529411764705},"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.06349206349206349},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.05747126436781609},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.044444444444444446},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.01935483870967742},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.022727272727272728},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.023622047244094488},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.028985507246376812},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.028985507246376812},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.05612244897959184},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.03260869565217391},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.029850746268656716},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.062146892655367235},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.030973451327433628},"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.041666666666666664}},";":{"docs":{"Prefix Sum and Subarray/Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Subarray Sum II.html","tf":0.011235955056179775},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.007042253521126761},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.018404907975460124},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.01098901098901099},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.00881057268722467},"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":0.02127659574468085},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.012658227848101266},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.014018691588785047},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.013452914798206279},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.012658227848101266},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.02459016393442623},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.0125},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.007633587786259542},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.009174311926605505},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815},"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.015873015873015872},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.011494252873563218},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.015306122448979591},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.011299435028248588},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947},"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}}},")":{"docs":{},";":{"docs":{"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}}}}},">":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.0223463687150838},"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.025806451612903226},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum.html","tf":0.037037037037037035},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.007042253521126761},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.033816425120772944},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.008928571428571428},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.013986013986013986},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":0.02127659574468085},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.010869565217391304},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.01098901098901099},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.015267175572519083},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.02097902097902098},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715},"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.015873015873015872},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.011494252873563218},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064}},"=":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.022988505747126436},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.033816425120772944}}},">":{"docs":{"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425}}},"l":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00823045267489712}},"]":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.012345679012345678}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.012345679012345678},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.014598540145985401},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0071174377224199285},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.016483516483516484},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.012658227848101266},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.011049723756906077},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.014705882352941176},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.014814814814814815},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.007633587786259542},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}},")":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}},";":{"docs":{"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633}}}},",":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.012345679012345678},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.007633587786259542},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}}},";":{"docs":{"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.01652892561983471},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642}}}}}}},"r":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00823045267489712}},"]":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.012345679012345678}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.012345679012345678},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.010676156583629894},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.01098901098901099},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.007633587786259542},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.011428571428571429}},")":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.014705882352941176},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.014814814814814815},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}},";":{"docs":{"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633}}}},",":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.012345679012345678},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.007633587786259542},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}}},";":{"docs":{"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.012345679012345678},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.027472527472527472},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.04580152671755725},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.006993006993006993}},")":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.007633587786259542},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}},";":{"docs":{"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}}}},",":{"docs":{"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.016483516483516484},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682}},")":{"docs":{},";":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495}}}},";":{"docs":{"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335}}},",":{"docs":{"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}}}}}}}}}}},"_":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294}},";":{"docs":{"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},";":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.017699115044247787}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}}}}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},";":{"docs":{"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}}}},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},")":{"docs":{"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.01694915254237288}}}}}}}}}}}},"[":{"docs":{},"c":{"docs":{},"h":{"docs":{},"]":{"docs":{"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294}},";":{"docs":{"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.01694915254237288}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},";":{"docs":{"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}}}}}}}}},"d":{"1":{"docs":{"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064}}},"2":{"docs":{"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064}}},"3":{"docs":{"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064}}},"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.0111731843575419},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.024390243902439025},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.011363636363636364},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.009433962264150943}},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.04597701149425287},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.00966183574879227}}}}}},"e":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}},"s":{"docs":{},"c":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}}}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":5.0144927536231885},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":3.3422619047619047}}},"m":{"docs":{},"p":{"docs":{},"s":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}}},"o":{"docs":{},"s":{"docs":{"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}}}}}}},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.007633587786259542},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":0.008849557522123894},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":2.5088495575221237}}}}},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}}}}},"m":{"docs":{},"o":{"docs":{},":":{"docs":{"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642}}}}},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.008968609865470852},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.011049723756906077},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":2.514705882352941},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":2.5148148148148146}},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},",":{"docs":{"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}}}}}}}}},",":{"docs":{"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}},";":{"docs":{"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.009345794392523364},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682}}}}}}}},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}}}}}}}}}}}}}}}}}},")":{"docs":{},";":{"docs":{"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.008968609865470852}}}}}}}},"n":{"docs":{"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064}}},"a":{"docs":{},"y":{"docs":{},".":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609}}},",":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629}}},"s":{"docs":{},".":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629}}}}},"t":{"docs":{},"a":{"docs":{"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":0.02127659574468085}}}}},"p":{"docs":{"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.027972027972027972}},"(":{"docs":{},"k":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629}}},"n":{"1":{"docs":{"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496}}},"docs":{"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.016666666666666666},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}},",":{"docs":{"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838}}},"n":{"docs":{},",":{"docs":{"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009}}}},"a":{"docs":{"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444}}},"u":{"docs":{},"m":{"docs":{},"_":{"docs":{},"r":{"docs":{},",":{"docs":{"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.016666666666666666},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}},"[":{"0":{"docs":{},"]":{"docs":{"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496}}}},"docs":{}}}},"1":{"docs":{},"]":{"docs":{"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005}}}},"2":{"docs":{},"]":{"docs":{"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005}}}},"docs":{},"i":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.012578616352201259},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.02},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.02654867256637168},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.019801980198019802},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.031914893617021274},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.02247191011235955},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.031914893617021274},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.014492753623188406},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.05803571428571429},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.023809523809523808},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.011363636363636364},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.02631578947368421},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.020618556701030927},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.01818181818181818},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.017045454545454544},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.014598540145985401},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.021352313167259787},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}},"]":{"docs":{"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.02247191011235955},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.00966183574879227},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.02097902097902098},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0071174377224199285},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}},"[":{"docs":{},"j":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838}},"]":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.03},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.02654867256637168},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.028037383177570093},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.0297029702970297},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.031914893617021274},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838}},":":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838}}},"[":{"docs":{},"h":{"docs":{},"]":{"docs":{"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.031914893617021274}},":":{"docs":{"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425}}}}}}}},"k":{"docs":{"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259}},"]":{"docs":{"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009}}}},"i":{"docs":{},"]":{"docs":{"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403}}}}},":":{"docs":{"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}}},";":{"docs":{"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}}}}},"n":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.010676156583629894}},"]":{"docs":{},"[":{"docs":{},"m":{"docs":{},"]":{"docs":{},";":{"docs":{"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"]":{"docs":{},";":{"docs":{"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425}}}}}}}}}},"k":{"docs":{},"]":{"docs":{},"[":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"]":{"docs":{},";":{"docs":{"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425}}}}}}}}}}}}}},";":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}}}},"x":{"docs":{},"]":{"docs":{},"[":{"docs":{},"n":{"docs":{},"y":{"docs":{},"]":{"docs":{"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374}},")":{"docs":{},";":{"docs":{"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"]":{"docs":{},";":{"docs":{"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775}}}}}}}}}},"k":{"docs":{"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259}}},"b":{"docs":{},"g":{"docs":{},"n":{"docs":{"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182}},"]":{"docs":{"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182}}}}}},"c":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.024691358024691357}},"]":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856}},":":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856}}}}},"x":{"docs":{},"]":{"docs":{},"[":{"docs":{},"y":{"docs":{},"]":{"docs":{"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374}}}}}}},"j":{"docs":{},"]":{"docs":{"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.016666666666666666}},")":{"docs":{"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333}}},",":{"docs":{"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}}}}}},")":{"docs":{},";":{"docs":{"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.013986013986013986}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":3.3412073490813645}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},":":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135}}},"s":{"docs":{},":":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":3.3421052631578942}},"e":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":5.017045454545454}}}}}}},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"{":{"docs":{},"{":{"1":{"docs":{},",":{"docs":{"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374}}}},"docs":{}}}},";":{"docs":{"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374}}}}}}}},"f":{"docs":{},"f":{"docs":{"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":3.349907918968692}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384}}},"o":{"docs":{},"f":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.011049723756906077},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496}}}}},"c":{"docs":{},"t":{"docs":{"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333}},")":{"docs":{"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}}},":":{"docs":{"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.016666666666666666}}}}}}}},",":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.009433962264150943}}},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}}}}}},")":{"docs":{"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182}}},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374}}}}}},"s":{"docs":{},"t":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.01048951048951049}},")":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.006993006993006993}},";":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.01048951048951049}}}}}}},"g":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856}},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}}}},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":2.5088495575221237}},"(":{"docs":{},")":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947}}}}}}}}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}}}}}}}},"a":{"docs":{},"p":{"docs":{},".":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576}}}},"m":{"docs":{},"e":{"docs":{"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":5.011363636363637},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":3.349593495934959},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364}}}}}}}}}}},".":{"docs":{"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005}}}}}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.01639344262295082},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.017699115044247787},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294}}}}}},"o":{"docs":{"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005}},"o":{"docs":{},"d":{"docs":{"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.008130081300813009}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}}}}},"a":{"docs":{},"d":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}}}}}}}},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005}}}}}}}}}},"k":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":1.6864686468646863},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":5.0212765957446805},"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.022727272727272728},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.016260162601626018},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.009259259259259259},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.012903225806451613},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.01932367149758454}},")":{"docs":{"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.009900990099009901},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.011111111111111112},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.012903225806451613},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.009900990099009901}}}}}}}}}}},":":{"docs":{"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.009900990099009901},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}}},",":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425}}},"n":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425}}}}}}}},"o":{"docs":{},"w":{"docs":{"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496}}}}},"e":{"docs":{},"y":{"docs":{"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182}},")":{"docs":{"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}}},",":{"docs":{"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}}},":":{"docs":{"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.013888888888888888}}}}},".":{"docs":{"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556}}},"]":{"docs":{},")":{"docs":{"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}}}}},"o":{"1":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947}}}}}}}}}}}},"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095}},"(":{"1":{"docs":{},")":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":2.504424778761062}}}},"docs":{},"c":{"docs":{},"^":{"2":{"docs":{"Prefix Sum and Subarray/Submatrix Sum.html":{"ref":"Prefix Sum and Subarray/Submatrix Sum.html","tf":0.00558659217877095}}},"docs":{}}},"k":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629}},"n":{"docs":{},")":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629}}}}},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444}}}},"l":{"docs":{},")":{"docs":{"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556}}}},"s":{"docs":{},")":{"docs":{"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}}}}}}},"s":{"docs":{},")":{"docs":{"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}}}}}},"p":{"1":{"docs":{"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0364963503649635}}},"2":{"docs":{"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005}},";":{"docs":{"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.029197080291970802}}}},"docs":{},"t":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":0.01639344262295082}},"i":{"docs":{},"m":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629}}}}},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374}}}}}}}}}},")":{"docs":{"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005}}}},"b":{"docs":{},"j":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.008849557522123894}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":0.02127659574468085},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.008849557522123894}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},":":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125}}}}}}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.008849557522123894}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.008849557522123894}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.008849557522123894}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.006993006993006993},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182}},"e":{"docs":{},",":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947}}}}}}}}}}},"f":{"docs":{},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541}},".":{"docs":{"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}}}}}}}},"n":{"docs":{"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496}},"e":{"docs":{},"!":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.010526315789473684}}},".":{"docs":{"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838}}}}},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"u":{"docs":{},"t":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203}}}}}},"t":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625}}}}}},"d":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}}}},":":{"docs":{"Prefix Sum and Subarray/Subarray Sum Closest.html":{"ref":"Prefix Sum and Subarray/Subarray Sum Closest.html","tf":0.007575757575757576},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Prefix Sum and Subarray/Maximum Subarray.html":{"ref":"Prefix Sum and Subarray/Maximum Subarray.html","tf":0.01818181818181818},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.01775147928994083},"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.004464285714285714},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.012269938650306749},"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":0.02127659574468085},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.014492753623188406},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.013452914798206279},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.01098901098901099},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.01639344262295082},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.009174311926605505},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.024539877300613498},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.04310344827586207},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.03428571428571429},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.009433962264150943},"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.025210084033613446},"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.015873015873015872},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.034482758620689655},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.011111111111111112},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.012903225806451613},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.014492753623188406},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.02040816326530612},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.014925373134328358},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.02824858757062147},"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}},":":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Matrix Chain Multiplication/Stone Game.html":{"ref":"Matrix Chain Multiplication/Stone Game.html","tf":0.011363636363636364},"Matrix Chain Multiplication/Stone Game II.html":{"ref":"Matrix Chain Multiplication/Stone Game II.html","tf":0.016260162601626018}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}}}}}}}}},"!":{"docs":{},"=":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.01098901098901099},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.00881057268722467},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.02531645569620253},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.009345794392523364},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.008968609865470852},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}}},"r":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408}}}}}},"s":{"docs":{},"t":{"docs":{},"k":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}}}}}}}}}}}}}},"t":{"docs":{"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.017045454545454544},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.010526315789473684},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.012903225806451613},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.015151515151515152},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.014492753623188406}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","tf":2.0327868852459017},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":1.6822916666666665},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":1.6785009861932938},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":1.6792452830188678},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.012903225806451613},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.022727272727272728},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":5.010204081632653},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}},",":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.006993006993006993},"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}},"s":{"docs":{},".":{"docs":{"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901}}},":":{"docs":{"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}}}},")":{"docs":{},";":{"docs":{"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}}}},"(":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},",":{"docs":{"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}}}}}}}},";":{"docs":{"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"ref":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","tf":0.00558659217877095}},"e":{"docs":{"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":10.022598870056497}},"s":{"docs":{},",":{"docs":{"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005}}}},"(":{"docs":{},")":{"docs":{"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294}}}},".":{"docs":{"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}}}}}},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.012578616352201259}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":2.0090909090909093},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":2.0082644628099175},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":2.0072992700729926},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.006993006993006993}},"a":{"docs":{},"l":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005}}}}}}}}}}}}}}}}}},"e":{"docs":{},"e":{"docs":{"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":2.0272727272727273},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":2.024793388429752},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":2.021897810218978},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":2.0106761565836297},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":2.510989010989011},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":3.3459915611814344},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":3.3497267759562837},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":2.51875},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":3.3443830570902393},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":2.514705882352941},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":2.5074074074074075},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":1.6819338422391856},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":2.0064516129032257},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","tf":1.7020648967551621},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":1.6712538226299694},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":2.5104895104895104},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":3.3504761904761904}},".":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00823045267489712},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.01818181818181818},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.01652892561983471},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.014598540145985401},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0071174377224199285},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.01098901098901099},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.012658227848101266},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.02459016393442623},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.0125},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.011049723756906077},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.014705882352941176},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.014814814814814815},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.03816793893129771},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.04516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.03211009174311927},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.013986013986013986}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.007633587786259542},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}}}}}},":":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Preorder Traversal.html","tf":0.00909090909090909},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Inorder Traversal.html","tf":0.008264462809917356},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"ref":"Iterator/Binary Tree Iterative Postorder Traversal.html","tf":0.0072992700729927005},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.007633587786259542},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}}},"*":{"docs":{"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.01834862385321101},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965}},"&":{"docs":{"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.01048951048951049}}}},",":{"docs":{"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642}}}}}}},"/":{"docs":{"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384},"Binary Tree/Minimum Depth of Binary Tree.html":{"ref":"Binary Tree/Minimum Depth of Binary Tree.html","tf":0.007352941176470588},"Binary Tree/Maximum Depth of Binary Tree.html":{"ref":"Binary Tree/Maximum Depth of Binary Tree.html","tf":0.007407407407407408},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.007633587786259542},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Recover Binary Search Tree.html":{"ref":"Binary Tree/Recover Binary Search Tree.html","tf":0.0034965034965034965},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294}}}}}}}}}}},")":{"docs":{"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.005649717514124294}}}}},"u":{"docs":{},"e":{"docs":{"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838},"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.00881057268722467},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.008849557522123894}},";":{"docs":{"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496},"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.010526315789473684},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.021897810218978103},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.005235602094240838},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.0189873417721519},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.0036231884057971015},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.01639344262295082},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.009174311926605505},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.025},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304},"Data Structure Design/Trie.html":{"ref":"Data Structure Design/Trie.html","tf":0.011299435028248588},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.01327433628318584}}},")":{"docs":{},";":{"docs":{"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.016483516483516484}}}}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"ref":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","tf":0.009900990099009901}},")":{"docs":{"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425}}},":":{"docs":{"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775}}},".":{"docs":{"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496}}}}}}},"s":{"docs":{},"k":{"docs":{"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}}}}},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},",":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.0072992700729927005},"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},",":{"docs":{"Binary Tree/Diameter of Binary Tree.html":{"ref":"Binary Tree/Diameter of Binary Tree.html","tf":0.0055248618784530384}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},",":{"docs":{"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.007874015748031496}}}}}}},"u":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}},"s":{"docs":{},",":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.0035211267605633804}}}}},"i":{"docs":{},"s":{"docs":{},",":{"docs":{"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556}}}}}},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"ref":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","tf":0.007042253521126761},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.010676156583629894},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.015706806282722512},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.0036231884057971015},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},",":{"docs":{"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":0.02127659574468085}}}}},"docs":{}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"2":{"docs":{},"d":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},",":{"docs":{"Iterator/Flatten 2D Vector.html":{"ref":"Iterator/Flatten 2D Vector.html","tf":0.02127659574468085}}}}}}}}}}}}},"docs":{}}}}}}}}},"(":{"0":{"docs":{},")":{"docs":{},",":{"docs":{"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.007246376811594203}}}}},"docs":{}},";":{"docs":{"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.028985507246376812}}}}}},"n":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"Fibonacci Sequence/House Robber.html":{"ref":"Fibonacci Sequence/House Robber.html","tf":0.011904761904761904},"Fibonacci Sequence/House Robber II.html":{"ref":"Fibonacci Sequence/House Robber II.html","tf":0.005681818181818182},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00411522633744856}}}}}}},"p":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335},"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},";":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},";":{"docs":{"Iterator/Flatten Nested List.html":{"ref":"Iterator/Flatten Nested List.html","tf":0.005494505494505495},"Iterator/Flatten Nested List Iterator.html":{"ref":"Iterator/Flatten Nested List Iterator.html","tf":0.004405286343612335}}}}}}}}},"b":{"docs":{},"g":{"docs":{},"n":{"docs":{},";":{"docs":{"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}}}}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},";":{"docs":{"Iterator/Nested List Weight Sum.html":{"ref":"Iterator/Nested List Weight Sum.html","tf":0.004672897196261682},"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}}}}}}},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.017241379310344827},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.011428571428571429}},"s":{"docs":{},")":{"docs":{"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005}}},":":{"docs":{"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005}}}}}}}},".":{"docs":{"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.008771929824561403},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182}}}}}}}}}}}},":":{"docs":{"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182}}},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},",":{"docs":{"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182}}}}}},")":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.00966183574879227}}},",":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.010526315789473684},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576}}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}}}}}},"p":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.010526315789473684}},",":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}}}},"s":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.010526315789473684}},",":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}}}},"w":{"docs":{},"o":{"docs":{"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.0035587188612099642},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.0045871559633027525}}}},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.0189873417721519},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.021739130434782608}},"(":{"0":{"docs":{},")":{"docs":{"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.0036231884057971015}},",":{"docs":{"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.0036231884057971015}}}}},"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633}}}}}}}}}}}}}}},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633}}},";":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},";":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633}}}}}}}}}}},";":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.006329113924050633},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.0036231884057971015}}},")":{"docs":{},";":{"docs":{"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.014492753623188406}}}},",":{"docs":{"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.0036231884057971015}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},")":{"docs":{"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}}}}}}},")":{"docs":{"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}},";":{"docs":{"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}}}}}}},",":{"docs":{"Prefix Sum and Subarray/Maximum Submatrix.html":{"ref":"Prefix Sum and Subarray/Maximum Submatrix.html","tf":0.0064516129032258064},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125},"Fibonacci Sequence/Decode Ways II.html":{"ref":"Fibonacci Sequence/Decode Ways II.html","tf":0.05803571428571429},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.02631578947368421},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.010869565217391304},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.006944444444444444},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.010309278350515464},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.013986013986013986},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.00909090909090909},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.005681818181818182},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.00966183574879227}}},"_":{"docs":{},"_":{"docs":{},"_":{"docs":{},"_":{"docs":{},"_":{"docs":{},"_":{"docs":{},"_":{"docs":{},"_":{"docs":{},"_":{"docs":{},"_":{"docs":{},"_":{"docs":{},"_":{"docs":{},"_":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","tf":0.0078125}}}}}}}}}}}}}}},"^":{"docs":{},"^":{"docs":{},"^":{"docs":{},"^":{"docs":{},"^":{"docs":{},"^":{"docs":{},"^":{"docs":{},"^":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","tf":0.005917159763313609}}}}}}}}}},"|":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.018867924528301886},"Knapsack Problem/Backpack I.html":{"ref":"Knapsack Problem/Backpack I.html","tf":0.01},"Knapsack Problem/Backpack II.html":{"ref":"Knapsack Problem/Backpack II.html","tf":0.008849557522123894},"Knapsack Problem/Backpack III.html":{"ref":"Knapsack Problem/Backpack III.html","tf":0.009345794392523364},"Knapsack Problem/Backpack IV.html":{"ref":"Knapsack Problem/Backpack IV.html","tf":0.009900990099009901},"Knapsack Problem/Backpack V.html":{"ref":"Knapsack Problem/Backpack V.html","tf":0.010638297872340425},"Knapsack Problem/Backpack VI.html":{"ref":"Knapsack Problem/Backpack VI.html","tf":0.011235955056179775},"Knapsack Problem/K Sum.html":{"ref":"Knapsack Problem/K Sum.html","tf":0.010638297872340425},"Matrix Chain Multiplication/Burst Balloons.html":{"ref":"Matrix Chain Multiplication/Burst Balloons.html","tf":0.05555555555555555},"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.00823045267489712},"String and Sequence Extremum/Minimum Edit Distance.html":{"ref":"String and Sequence Extremum/Minimum Edit Distance.html","tf":0.043859649122807015},"String and Sequence Extremum/Longest Common Subsequence.html":{"ref":"String and Sequence Extremum/Longest Common Subsequence.html","tf":0.021739130434782608},"String and Sequence Extremum/Longest Common Substring.html":{"ref":"String and Sequence Extremum/Longest Common Substring.html","tf":0.013888888888888888},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"ref":"String and Sequence Extremum/Longest Palindromic Subsequence.html","tf":0.020618556701030927},"String and Sequence Extremum/Longest Increasing Substring.html":{"ref":"String and Sequence Extremum/Longest Increasing Substring.html","tf":0.013986013986013986},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"ref":"String and Sequence Extremum/Longest Repeating Subsequence.html","tf":0.05454545454545454},"String Scramble/Distinct Subsequences.html":{"ref":"String Scramble/Distinct Subsequences.html","tf":0.011363636363636364},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0071174377224199285},"Game Theory/Coins in a Line III.html":{"ref":"Game Theory/Coins in a Line III.html","tf":0.010471204188481676},"Binary Approximation/Find the Duplicate Number.html":{"ref":"Binary Approximation/Find the Duplicate Number.html","tf":0.015748031496062992},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.014492753623188406}},"|":{"docs":{"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"ref":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","tf":0.006289308176100629},"String Scramble/Interleaving String.html":{"ref":"String Scramble/Interleaving String.html","tf":0.007874015748031496},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.014598540145985401},"Game Theory/Coins in a Line II.html":{"ref":"Game Theory/Coins in a Line II.html","tf":0.0035587188612099642},"Binary Tree/Valid Binary Search Tree.html":{"ref":"Binary Tree/Valid Binary Search Tree.html","tf":0.005494505494505495},"Binary Tree/Balanced Binary Tree.html":{"ref":"Binary Tree/Balanced Binary Tree.html","tf":0.006329113924050633},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","tf":0.0064516129032258064},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","tf":0.01834862385321101},"Word Puzzle/Word Break.html":{"ref":"Word Puzzle/Word Break.html","tf":0.008333333333333333},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.0047169811320754715},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556},"Binary Approximation/Copy Books.html":{"ref":"Binary Approximation/Copy Books.html","tf":0.0064516129032258064},"Binary Approximation/Copy Books II.html":{"ref":"Binary Approximation/Copy Books II.html","tf":0.007575757575757576},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.004830917874396135}}}},"'":{"0":{"docs":{},"'":{"docs":{},")":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.00966183574879227}}}}},"1":{"docs":{},"'":{"docs":{},")":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135}}}}},"2":{"docs":{},"'":{"docs":{},")":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135}}}}},"docs":{"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.014598540145985401}},")":{"docs":{},";":{"docs":{"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005}}}},"*":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005}}}},":":{"docs":{"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005}}}}},"+":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005}}}},":":{"docs":{"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005}}}}},"/":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005}}}},":":{"docs":{"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005}}}}},":":{"docs":{"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005}}}},"?":{"docs":{"Fibonacci Sequence/Decode Ways.html":{"ref":"Fibonacci Sequence/Decode Ways.html","tf":0.004830917874396135},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714},"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.015873015873015872},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.034482758620689655},"Binary Approximation/Wood Cut.html":{"ref":"Binary Approximation/Wood Cut.html","tf":0.005555555555555556}}},"\\":{"docs":{"Fibonacci Sequence/House Robber III.html":{"ref":"Fibonacci Sequence/House Robber III.html","tf":0.012345679012345678},"Game Theory/Coins in a Line.html":{"ref":"Game Theory/Coins in a Line.html","tf":0.014598540145985401},"Iterator/Flatten Binary Tree to Linked List.html":{"ref":"Iterator/Flatten Binary Tree to Linked List.html","tf":0.09252669039145907}}},"\"":{"docs":{"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005},"Word Puzzle/Word Break II.html":{"ref":"Word Puzzle/Word Break II.html","tf":0.009433962264150943}},"\"":{"docs":{},";":{"docs":{"String and Sequence Extremum/Longest Palindromic Substring.html":{"ref":"String and Sequence Extremum/Longest Palindromic Substring.html","tf":0.00819672131147541}}}},"a":{"docs":{},"b":{"docs":{},"c":{"docs":{},"\"":{"docs":{},",":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}}}},"d":{"docs":{},"e":{"docs":{},"\"":{"docs":{},".":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}}}},"a":{"docs":{},"b":{"docs":{},"c":{"docs":{},"\"":{"docs":{"String Scramble/Scramble String.html":{"ref":"String Scramble/Scramble String.html","tf":0.005263157894736842}}}}}}}},"(":{"docs":{},"\"":{"docs":{},")":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.012269938650306749},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666}}}}},")":{"docs":{"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005}},"\"":{"docs":{},")":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.020833333333333332}}}}},",":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","tf":0.010416666666666666},"Expression Parsing/Evaluate Infix Expression.html":{"ref":"Expression Parsing/Evaluate Infix Expression.html","tf":0.008620689655172414},"Expression Parsing/Expression Tree Construction.html":{"ref":"Expression Parsing/Expression Tree Construction.html","tf":0.005714285714285714}}},"*":{"docs":{},"\"":{"docs":{},")":{"docs":{"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005}}}}},"+":{"docs":{},"\"":{"docs":{},")":{"docs":{"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005}}}}},"/":{"docs":{},"\"":{"docs":{},")":{"docs":{"Expression Parsing/Evaluate Postfix Expression.html":{"ref":"Expression Parsing/Evaluate Postfix Expression.html","tf":0.0072992700729927005}}}}}},"[":{"1":{"docs":{},"]":{"docs":{"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444}}},",":{"docs":{"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.04035874439461883}}}},"2":{"docs":{},"]":{"docs":{"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444}}},",":{"docs":{"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.008968609865470852}}}},"3":{"docs":{},"]":{"docs":{"String and Sequence Extremum/Longest Increasing Subsequence.html":{"ref":"String and Sequence Extremum/Longest Increasing Subsequence.html","tf":0.006944444444444444}}}},"docs":{},"[":{"1":{"docs":{},",":{"docs":{"Iterator/Nested List Weight Sum II.html":{"ref":"Iterator/Nested List Weight Sum II.html","tf":0.004484304932735426}}}},"docs":{}},"]":{"docs":{"Sweep Line/Number of Airplanes in the Sky.html":{"ref":"Sweep Line/Number of Airplanes in the Sky.html","tf":0.007246376811594203},"Sweep Line/Time Intersection.html":{"ref":"Sweep Line/Time Intersection.html","tf":0.00510204081632653},"Sweep Line/Meeting Rooms.html":{"ref":"Sweep Line/Meeting Rooms.html","tf":0.010869565217391304},"Sweep Line/Meeting Rooms II.html":{"ref":"Sweep Line/Meeting Rooms II.html","tf":0.007462686567164179}},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"Word Puzzle/Word Break III.html":{"ref":"Word Puzzle/Word Break III.html","tf":0.008403361344537815}}}}}}}}},"q":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.022900763358778626}},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374}},";":{"docs":{"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374},"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625}}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.01639344262295082},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.0125}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Tree/Maximum Width of Binary Tree.html":{"ref":"Binary Tree/Maximum Width of Binary Tree.html","tf":0.00625}}}}}}}}}}}}}},")":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.007633587786259542}},";":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.015267175572519083}}}},":":{"docs":{"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"ref":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","tf":0.007633587786259542}}}},"x":{"docs":{"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.015873015873015872},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.022988505747126436}},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},",":{"docs":{"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374}}}}}},",":{"docs":{"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374}}},";":{"docs":{"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374},"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.015873015873015872},"Binary Approximation/Maximum Average Subarray II.html":{"ref":"Binary Approximation/Maximum Average Subarray II.html","tf":0.014492753623188406}}},")":{"docs":{"Binary Tree/Complete Binary Tree.html":{"ref":"Binary Tree/Complete Binary Tree.html","tf":0.00819672131147541},"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.031746031746031744},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.011494252873563218}}},":":{"docs":{"Binary Approximation/Sqrt.html":{"ref":"Binary Approximation/Sqrt.html","tf":0.015873015873015872},"Binary Approximation/Sqrt II.html":{"ref":"Binary Approximation/Sqrt II.html","tf":0.011494252873563218}}}},"y":{"docs":{},"(":{"docs":{},"y":{"docs":{},")":{"docs":{},",":{"docs":{"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374}}}}}},",":{"docs":{"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374}}},";":{"docs":{"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"ref":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","tf":0.006134969325153374}}}},"z":{"docs":{},"i":{"docs":{},"g":{"docs":{},"z":{"docs":{},"a":{"docs":{},"g":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":5.006329113924051},"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":3.33695652173913}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"Iterator/ZigZag Iterator.html":{"ref":"Iterator/ZigZag Iterator.html","tf":0.0189873417721519}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"2":{"docs":{"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.021739130434782608}}},"docs":{}}}}}}}}}}}}}}},"%":{"docs":{"Iterator/ZigZag Iterator II.html":{"ref":"Iterator/ZigZag Iterator II.html","tf":0.014492753623188406},"Data Structure Design/Insert Delete GetRandom.html":{"ref":"Data Structure Design/Insert Delete GetRandom.html","tf":0.004424778761061947}}},")":{"docs":{"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"ref":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","tf":0.006134969325153374}}},"#":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"Data Structure Design/LRU Cache.html":{"ref":"Data Structure Design/LRU Cache.html","tf":0.006944444444444444}}}}}}}}}},"length":7355},"corpusTokens":["!=","!r.balanced)","!r.is_bst)","!root","!stk.empty()","\"","\"\";","\"(\")","\")","\")\")","\"*\")","\"+\")","\",","\"/\")","\"abc\",","\"abcde\".","\"de\",","\"deabc\"","#includ","%","&","&&","&a)","&a,","&airplanes)","&b)","&books,","&dict)","&exp)","&expression)","&getlist()","&intervals)","&l,","&matrix)","&nestedlist)","&nums)","&nums,","&prefix)","&prices)","&s)","&s,","&s1,","&s2)","&s2,","&s3)","&seqa,","&seqb)","&str)","&t)","&times)","&tokens)","&v)","&v,","&values)","&word)","&worddict)","'","');","'*');","'*':","'+');","'+':","'/');","'/':","'0')","'1')","'2')","':","(","(!l.balanc","(!l.is_bst","(!list.empty())","(!nestedlist.empty())","(!piece.empty())","(!queue.empty())","(!root","(!root)","(!src)","(!stk.empty())","(!vec.empty())","('0'","(0,","(1,","(2,","(4,","(5,","(a","(a1","(a[i]","(a[j]","(an","(auto&","(b","(bgn","(bgn_first","(bgn_second","(bgns[turn]","(book","(books.empty()","(cand","(char","(const","(count","(countnumber(nums,","(countsmallpieces(l,","(curr","(curr)","(curr.found_a","(d","(diff","(e","(end","(i","(i+1)th","(i.hasnext())","(index","(index_row","(int","(j","(k","(l","(l)","(l)3","(l.empty()","(l.lca)","(last_l)","(last_r)","(left","(len","(lhs.start","(lhs.time","(local","(longest","(m","(max_depth","(memo.count(root)","(memo.count(s)","(memo.count(str)","(min.bgn","(n","(n1","(nestedlist.empty())","(node","(num_c","(num_r","(nums[i])","(nums[i]));","(p","(pred","(prefix","(price[j]","(r","(r)","(r.lca)","(rec.ev","(refs.count(key)","(refs.count(val)","(root","(root)","(s","(s.empty())","(s.substr(j","(s1.length()","(s1[i]","(s2[j]","(set.count(curr)","(size","(solution.hasnext())","(src","(src)","(stack.top()","(stk.top()","(str.empty())","(str[s1]","(substring)","(sum","(sum[i","(times.empty()","(token","(total","(turn","(valu","(w)2","(word","(x",")","*","***","****","*****","******","*******","***********","**************","******************","*******************","*,","*/","*/lrucache(int","*/zigzagiterator(vector&","*/zigzagiterator2(vector>&","*=","*bgn_first;","*bgn_second;","*bgns[turn];","*dst","*left,","*left;","*parent,","*pred","*right;","*src","+","+*","+*(","+*(+","++bgn;","++bgn_first;","++bgn_second;","++bgns[turn];","++count;","++dp;","++end;","++l;","++r;","++size;","++total;","+,","+/","+=",",",".","...","...,","....",".......","........","...........","............","/","/*","/**","//","/:","0","0)","0)));","0));","0);","0,","0;","0},","0}})","1","1(w)","1)","1));","1),","1).","1);","1,","1.","10","100","1000","107.","1101.","118.","1181.","119.","125","1311.","134.","138.","139.","141.","149.","15","150.","151.","155.","168.","183.","1:","1;","1]","1])","1]);","1],","1]:","1];","1][h","1][h]","1][j","1][j]","1][j])","1][j]);","1][j],","1][j];","1][j][h]","1][j][h];","1]]","1]]);","1]],","1]];","1d","1e","1st","1}","1},","1};","1}})","2","2(w)","2)","2));","2),","2).","2,","2.","20","200.","22.","25","29.","2:","2]","2])","2],","2]:","2];","2d","2},","3","3*","3,","30","367.","368.","369.","370.","391.","392.","393.","394.","395.","396.","397.","398.","3:","4","4(w)","4*","4,","402.","403.","405.","406.","41.","424.","430.","437.","438.","440","442.","453.","474.","476.","4:","4}.","5","512.","528.","534.","535.","540.","541.","551.","562","563","564","578.","581.","582.","586.","593.","6","6)","6*","601.","617.","657.","66.","667.","67.","676.","68.","683.","691.","6}","7","77.","79.","8","8,","821.","88.","89","9","905.","911.","919.","92","920.","944.","95.","958.","97.","9}",":","::max();",":times)",";","=","==","=>",">",">=",">>",">branch.count(ch)",">branch[ch]",">branch[ch];",">end",">first;",">getinteger()",">getinteger());",">getinteger(),",">getinteger();",">getlist());",">is_word",">is_word;",">isinteger())",">l",">l]",">left",">left)",">left);",">left,",">left;",">parent;",">r",">r]",">right",">right)",">right);",">right,",">right;",">second;",">start",">symbol",">val",">val)",">val);",">val,","?","@param","@return","@return:","[1,","[1]","[2,","[2]","[3]","[[1,","[]","[](char","\\","^^^^^^^^","_____________","a(0,","a)","a,","a.size();","a1","a1,","a2","a2,","a3","a:","a;","a[0],","a[0];","a[1]);","a[i","a[i]","a[i].","a[j]","ab","abc","abc/","abc/d","abc/de+","abc/de+*+","abc/de+*+f","abcd,","abov","acquir","adjust","aforement","aggreg","airplan","airplanes)","airplanes:","ak","algorithm.","allow","alreadi","alway","amount","an","ancestor","ancestor(lca)","anoth","ans)","ans);","ans.push_back(bgn","ans.push_back(curr","ans.push_back(interval);","ans.push_back(prefix","ans.push_back(prefix);","ans;","answer","appli","approach","approxim","approximation,","array","array)","array,","array.","array.size();","array[0]","array[1]","array[i];","arraylist","ascend","atgre,","attend","auto","auto&","auto&&","averag","b","b(0,","b)","b);","b,","b.size();","b1","b2","b3","b:","b;","b[i]","b[j]","b[j],","backpack","backpack(int","backpackii(int","backpackiii(vector","backpackiv(vector","backpackv(vector","backpackvi(vector","balanc","balanced(balanced),","balanced,","balanced;","balloon","balloon.","balloons/descript","base","bc","bcd","be","begin","besides,","best","between","bgn","bgn(bgn),","bgn,","bgn;","bgn_first(v1.begin()),","bgn_first,","bgn_second","bgn_second(v2.begin()),","bgn_second,","bgns.emplace_back(vec.begin());","bgns.erase(bgns.begin()","bgns.push_back(vec.begin());","bgns;","binari","binary.","bk","bn","book","book;","books)","books,","books/descript","bool","boolean","boost","both","bound","bound.","boundari","branch","branch;","break","break/descript","break;","bst,","bstswappednode(treenod","build","build(vector","build/descript","buildtree(const","buildtree(rpn);","burst","buy","buy_1st","buy_1st,","buy_2nd","buy_2nd,","buy_first","buy_second","c","c.","c1","c1)","c2","c3","cach","cache)","cache.emplace_back(bgn","cache/descript","cache;","calcul","call","canattendmeetings(vector","cand","cand;","candid","canscramble(const","canscramble(s1,","capac","capacity(capacity)","capacity)","capacity:","capacity;","case","cbce","ch","ch)","char","charact","check","child","children","choices.","ck","class","classs","clean","closest","closest/descript","cn","co","cod","code","coin","coin,","collect","column","column.","columns,","combin","common","compar","comparison","competitor","complet","compos","conduct","confer","conquer","consecut","consid","const","const;","const_cast&>(bgn","const_cast&>(nestedlist);","construct","contain","continu","continue;","continuoussubarraysum(vector","continuoussubarraysumii(vector","control","convert","converttopn(vector","converttorpn(const","converttorpn(expression);","converttorpn(vector","coordin","copi","copier","copiers,","copybooks(vector","copybooksii(int","cost","count","count;","counter","countofairplanes(vector","countonedigit(const","counttwodigits(const","counttwodigits(s,","cout","cover","creat","curr","curr)","curr,","curr.","curr.found_a","curr.found_b","curr.found_b)","curr.lca","curr;","current","cut","cut/descript","cyclic","d","d)","d1","d2","d3","data","day,","day.","days.","de","decod","decompos","decomps","decras","definit","delet","demo:","denot","depth","depth(depth),","depth);","depth,","depth;","depthsum(const","depthsuminverse(vector","deriv","descpretion.","determin","diamet","diameter.","diameterofbinarytree(treenod","diamter","dict","dict)","dict,","dict.emplace(std::move(norm));","dict:","dict;","dictionari","diff","digit:","digits:","directs({{1,","directs;","discov","distanc","distance/descript","distinct","divid","dn","doubl","down","dp","dp(k","dp(n","dp(n,","dp(n1","dp(na","dp(nn,","dp(num_r,","dp(target","dp);","dp[0]","dp[0][0]","dp[1]","dp[2]","dp[bgn","dp[bgn]","dp[c","dp[c]","dp[c]:","dp[i","dp[i]","dp[i]:","dp[i];","dp[i][i]","dp[i][j","dp[i][j]","dp[i][j]:","dp[i][j][h]","dp[i][j][h]:","dp[i][k","dp[i][k]","dp[j]","dp[j])","dp[j],","dp[k","dp[n","dp[n];","dp[n][k][target];","dp[n][m];","dp[n][target];","dp[nx][ny]","dp[nx][ny]);","dp[target];","dp[x][y]","dst","dst)","dst);","duplic","duplicate.","dynam","e","e)","e.g.:","e.g:","each","eatgr","edit","elem","elem.num","elem.weight","elem;","element","element(int","element.","encod","end","end(end)","end(end),","end)","end));","end,","end:","end;","end_first","end_first(v1.end()),","end_first)","end_first,","end_second(v2.end()),","end_second)","end_second;","ends.emplace_back(vec.end());","ends.erase(ends.begin()","ends.push_back(vec.end());","ends;","ends[turn])","end};","entries.","enum","eqaul","equal","equal:","essenti","estim","evalrpn(vector","evalu","evaluate(stack,","evaluate(std::stack&","evaluateexpression(vector","evaluaterpn(const","evaluaterpn(rpn);","evaluation/descript","event","event(event)","event)","event::bgn));","event::end));","event::land));","event::log_in)","event::log_in));","event::log_out));","event::take_off));","event;","example,","exce","exp)","exp.size();","exp[i];","expired_key","express","expression:","expressiontreenod","expressiontreenode(str","expressiontreenode*","expressiontreenode:","extra","f","f)","fals","false));","false);","false.","false;","fill","final","finally,","find","findduplicate(vector","findmax(const","findsuccessor(root,","findsuccessor(stk.top()","findsuccessor(treenode*","finish","first","first,","first.","firstwillwin(int","firstwillwin(vector","flatten","flatten(treenod","flatten(vector","form","found","found.","found_a(false),","found_a(found_a),","found_a,","found_a;","found_b(false),","found_b(found_b),","found_b,","found_b;","fuction","fulfil","g","game","game.","game/descript","gap.","gener","get(int","getinteger()","getrandom","getrandom()","given","go","good","gradual","great","guarante","h","h)","h);","h,","h.","handl","hard","hashtable(key","hasnext()","height","height(height)","height)","height;","hence,","here","here.","hod","hold","holds,","hole","hous","house,","houserobber(vector","houserobber2(vector","houserobber3(treenod","houses.","however,","https://leetcode.com/problems/check","https://www.lintcode.com/problem/backpack","https://www.lintcode.com/problem/backpack/descript","https://www.lintcode.com/problem/balanc","https://www.lintcode.com/problem/best","https://www.lintcode.com/problem/binari","https://www.lintcode.com/problem/burst","https://www.lintcode.com/problem/coin","https://www.lintcode.com/problem/combin","https://www.lintcode.com/problem/continu","https://www.lintcode.com/problem/convert","https://www.lintcode.com/problem/copi","https://www.lintcode.com/problem/decod","https://www.lintcode.com/problem/diamet","https://www.lintcode.com/problem/distinct","https://www.lintcode.com/problem/edit","https://www.lintcode.com/problem/evalu","https://www.lintcode.com/problem/express","https://www.lintcode.com/problem/flatten","https://www.lintcode.com/problem/hous","https://www.lintcode.com/problem/impl","https://www.lintcode.com/problem/insert","https://www.lintcode.com/problem/interleav","https://www.lintcode.com/problem/k","https://www.lintcode.com/problem/longest","https://www.lintcode.com/problem/lowest","https://www.lintcode.com/problem/lru","https://www.lintcode.com/problem/maximum","https://www.lintcode.com/problem/meet","https://www.lintcode.com/problem/minimum","https://www.lintcode.com/problem/nest","https://www.lintcode.com/problem/numb","https://www.lintcode.com/problem/recov","https://www.lintcode.com/problem/scrambl","https://www.lintcode.com/problem/sqrtx","https://www.lintcode.com/problem/sqrtx/descript","https://www.lintcode.com/problem/ston","https://www.lintcode.com/problem/subarray","https://www.lintcode.com/problem/submatrix","https://www.lintcode.com/problem/tim","https://www.lintcode.com/problem/valid","https://www.lintcode.com/problem/wood","https://www.lintcode.com/problem/word","https://www.lintcode.com/problem/zigzag","i(nestedlist);","i(vec2d);","i)","i.","i;","i>","ideal","ii","ii/descript","ii/description?_from=ladder&&fromid=4","iii","iii/descript","implement","implementation,","impli","includ","increas","index","index(index)","index)","index;","index_col(0),","index_row(0),","indic","infix","information.","initi","inord","inordertraversal(treenod","input","input.begin(),","input.end()));","insert","insert(int","insert(str","instanti","int","int&","int_max;","int_min;","intcod","integ","integer,","integers.","interexchan","interexchang","interfac","interleav","intersect","intersection/descript","interv","interval&","interval(int","interval.end","interval.start","interval:","interval;","intervals)","intervals.end(),","intervals.size();","intervals:","intial","introduct","invers","is_bst(is_bst)","is_bst)","is_bst;","is_word(false)","is_word;","isbalanced(treenod","iscompletetree(treenode*","isinteger()","isinterleave(str","isscramble(str","isvalidbst(treenod","it,","item","items.","iter","iteration.","iterator/descript","ith","iv","iv/descript","j","j)","j).","j):","j,","j.","j]","job.","jth","k","k)","k,","k.","k/descript","k:","k])","key","key)","key,","key:","knapsack","know","l","l)","l))","l);","l,","l.found_a","l.found_b","l.max","l.max)","l.min,","l1/","l2/","l:","l;","l[i]","l]","l_sum","l_sum);","label","label(label)","label)","label;","largest","last","last_l","last_l;","last_r","last_r;","lc","lca","lca(lca)","lca(nullptr)","lca)","lca;","leetcod","left","left(null),","left)","left.","left;","len","len);","len;","length","less","letter.","level","lhs,","lhs.end","lhs.event","lhs.type","lhs.val","li","lin","line","line.","line/descript","link","lint","lintcod","lis.back())","lis.push_back(nums[0]);","lis.push_back(nums[i]);","lis.size()","lis.size();","lis;","lis[l]","lis[l])","lis[m])","lis[r]","list","list.","list.begin(),","list.begin();","list.end()));","list.end();","list.erase(iter);","list.push_front(std::make_pair(key,","list/","list/descript","list;","lists.","ll","lmax","ln/","local","local);","locat","log_in","log_out,","long","longest","longestcommonsubsequence(str","longestcommonsubstring(str","longestcontinuousincreasingsubsequence2(vector>","longestincreasingcontinuoussubsequence(vector","longestincreasingsubsequence(vector","longestpalindrome(str","longestpalindromesubseq(str","longestrepeatingsubsequence(str","loop","losabl","lose","lowest","lowestcommonancestor(root","lowestcommonancestor(treenod","lowestcommonancestorii(parenttreenod","lp","lps)","lps);","lr","lru","lrucach","m","m)","m,","m:","m;","main","map({{\"*\",","map;","map[0]","match;","match[0]","matrix","matrix.size();","matrix:","matrix[0].size();","matter","max","max(dp[i","max(max),","max(std::numeric_limits::min()),","max)","max,","max.end};","max;","max_bgn","max_depth","max_end","maxaverage(vector","maxcoins(vector","maxdepth(treenod","maxdiff","maxdiff,","maxim","maximal.","maximum","maxprofit(int","maxprofit(vector","maxsubarray(vector","maxsubarraylen(vector","maxsubmatrix(vector>","max{","meet","memo)","memo);","memo;","memo[root]","memo[root];","memo[s].count(t)","memo[s][t]","memo[s][t];","memo[str]","memo[str];","merg","messag","min","min(min),","min(std::numeric_limits::max()),","min);","min,","min.bgn","min.end","min.sum)","min;","min_bgn","min_end","min_end,","min_l_sum","min_l_sum)","min_l_sum;","mindepth(treenod","mindistance(str","minimum","minimumsize(vector","minmeetingrooms(vector","mod(1000000007)","money","more","movement","multipl","n","n)","n,","n1","n2","n3","n3)","n:","n;","n^2)","na","name","nb","necessari","need","neg","negative.","neighbor","nest","nestedinteg","nestediter","nestediterator(vector","nestedlist","nestedlist)","nestedlist.begin(),","nestedlist.end()));","nestedlist:","new","next","next()","node","node(node),","node,","node.","node;","nodes.","non","norm(word);","norm.begin(),","norm.end(),","normal","notat","notation/descript","note","note:","noth","ns","nt","ntcode","null;","nullptr,","nullptr;","num","num(num),","num,","num;","num[0]","num[1]","num[i","num[j]","num];","num_c","num_r","number","numbers,","numbers.","numdecodings(str","numdistinct(str","nums)","nums,","nums.pop_back();","nums.push_back(val);","nums.size()","nums.size();","nums:","nums;","nums[0]","nums[0],","nums[0];","nums[1]","nums[bgn","nums[bgn];","nums[i","nums[i]","nums[i];","nums[index]);","nums[index];","nums[j","nums[j]","nums[j]}","nums[k]","nums[l];","nums[n","nx","ny","o","o(1)","o(c^2","o(k","o(kn)","o(nlogl)","o(nlogn)","o(nlogs)","o(ns)","o1/descript","obj","obj.getrandom();","obj.insert(val);","obj.remove(val);","object","objective:","od","offset","offset.","on","one!","one.","op)","op1","op2","op2;","operator()","opt","optim","order","origin","otherwis","otherwise,","ouptut","out","p","p,","p:","page","pages:","pair","pair,","pairs.","palin(n,","palin[i","palin[i][j]","palin[i][j]:","palindrom","palindromic.","param","parenttreenod","parenttreenode:","part","path.","perform","period","period)","period,","period.","period;","person","pick","piec","piece);","piece:","pigeon","pile","pile.","pinpoint","plan_a","plan_b","plan_b);","player","pleas","pn.push_back(stack.top());","pn;","pointer","pointers,","polish","portions.","posit","position.","possibl","postfix","postord","postordertraversal(treenod","precedence)","pred","pred,","pred.","pred;","predecessor","prefix","prefix(i","prefix(i)","prefix(j)","prefix(n","prefix(nn","prefix)","prefix,","prefix.","prefix:","prefix[i];","prefix[j","prefix[l],","prefix[r]","preix(i)","preorder","preordertraversal(treenod","price","price);","price:","price[h])","price[j]","price[j]},","prices)","prices.size();","prices:","prices[0];","prices[i","prices[i]","price}","prioriti","private:","problem","procedure,","profit","profit[i]","program","public:","purchase.","push","q","q)","q);","q:","queue","queue.push(record(nod","queue.push(record(root,","queue.size();","queue;","r","r)","r);","r,","r.","r.found_a;","r.found_b;","r.height)","r.height);","r;","r_sum","random","random()","randomizedset","randomizedset()","randomizedset();","rang","range(i,","range.","re","real","rec","rec.time;","record","record&","record()","record();","record(0,","record(bool","record(false,","record(int","record(min_bgn,","record(treenode*","record(true,","recordcompar","recordcompare>","records.end(),","records.push_back(record(airplane.end,","records.push_back(record(airplane.start,","records;","recov","recs)","recs.end(),","recs.push_back(record(interval.end,","recs.push_back(record(interval.start,","recs.push_back(record(seq.end,","recs.push_back(record(seq.start,","recs;","refs.erase(expired_key);","refs.erase(val);","refs;","refs[key]","refs[key];","refs[nums[index]]","refs[val]","refs[val];","relev","remain","remained,","remov","remove(int","repeat","replac","replicas.","repres","requir","res)","res.balanced;","res.lca;","respect","respectively.","result","result(bool","result(false);","result(int","result(root","result(true);","result.is_bst;","result.push_back(solution.next());","result;","return","return;","revers","rhs)","rhs.start)","rhs.time)","rhs.val;","right","right(null)","right;","rl","rl,","rob","rob(const","rob(nums,","robber","robber/descript","room","rooms/descript","root","root(std::make_shared())","root)","root,","root:","root;","rpn","rpn)","rpn.push_back(stack.top());","rpn.push_back(stk.top());","rpn;","rr","runbacktracking(","runbacktracking(s,","runbacktracking(suffix,","runinorder(","runinorder(curr","runinorder(root,","runpostorder(root","runpostorder(root);","runpostorder(root,","runpostorder(treenode*","runpreorder(root","runpreorder(root,","runpreorder(treenode*","s","s(i,","s)","s);","s,","s.","s.length();","s.substr(bgn,","s.substr(i,","s0","s0,","s1","s1)","s1,","s1.length();","s1:","s2","s2)","s2,","s2.","s2.length())","s2.length();","s2:","s3","s3.length();","s3:","s3[i","s:","s;","s[0]","s[0],","s[1]","s[1],","s[2]","s[2],","s[2]:","s[3]","s[i","s[i]","s[i]:","s[j]","s[j],","s[n","s[n]","sa","sa:","sb''.","sb'.","sb:","scan","scenario","scenarios.","score","scrambl","search","search(str","second","secur","segment","segments,","segments.","segments:","sell","sell_1st","sell_1st,","sell_1st:","sell_2nd","sell_2nd,","sell_2nd:","sell_first","sell_second","sell_second;","selling.","sentences.","seq","seqa)","seqa:","seqb)","seqb:","set","set(int","set.insert(curr);","set;","shortest","show","si","simpli","singl","size","size(0),","size;","sj","sk","ski","sky.","sky/descript","slide","slowest","small","smaller","sn","solut","solution()","solution(v1,","solution(vecs);","solution.","solv","sort","sp","span","specifi","specifically,","specul","sqrt","sqrt(doubl","sqrt(int","sqrt(x)","squar","srand(time(nullptr));","src","src,","ss","stack","stack,","stack.pop();","stack.push(result);","stack.push(std::stoi(token));","stack.push(token);","stack.top();","stack;","start","start)","start,","start:","start;","startswith(str","state,","state.","static_cast(nums[i","static_cast(nums[i])","static_cast(nums[i]));","std::abs(l.height","std::list>","std::make_shared();","std::max(","std::max(a[0],","std::max(ans,","std::max(buy_first,","std::max(buy_second,","std::max(dp[i","std::max(dp[nx][ny],","std::max(l,","std::max(l.height,","std::max(max_depth,","std::max(nums[bgn],","std::max(plan_a,","std::max(r,","std::max(rob(nums,","std::max(root","std::max(sell_first,","std::max(sell_second,","std::max(width,","std::min(ans,","std::min(h,","std::min(min_l_sum,","std::move(ans);","std::move(bgn),","std::move(end)));","std::numeric_limits::max())?","std::numeric_limits::max();","std::numeric_limits::min();","std::priority_queue,","std::queue","std::shared_ptr","std::sort(intervals.begin(),","std::sort(records.begin(),","std::sort(recs.begin(),","std::stack","std::stack&","std::stack::iterator,","std::string","std::string&","std::swap(nums.back(),","std::swap(src","std::tolower(ch);","std::transform(norm.begin(),","std::unordered_map","std::unordered_map&","std::unordered_map>","std::unordered_map>&","std::unordered_map>::iterator>","std::unordered_set","std::unordered_set&","std::vector","std::vector&","std::vector(m","std::vector(n","std::vector(n,","std::vector(n2","std::vector(nb","std::vector(nn,","std::vector(nt","std::vector(num_c,","std::vector(target","std::vector::iter","std::vector::iterator&&","std::vector::iterator>","std::vector::iterator>>","std::vector>","std::vector>(","step","steps.","still","stk)","stk);","stk.pop();","stk.push(curr","stk.push(curr);","stk.push(record(1,","stk.push(record(depth","stk.push(record(depth,","stk.push(root);","stk.push(std::make_pair(bgn,","stk.push(std::make_pair(list.begin(),","stk.push(std::make_pair(nestedlist.begin(),","stk.push(token);","stk.top()","stk.top();","stk;","stock","stock/descript","stone","stonegame(vector","stonegame2(vector","str","str,","str.length();","str.substr(0,","str.substr(l,","str:","string","string,","string/descript","strings,","struct","structur","subarray","subarray,","subarray.","subarray/descript","subarraysum(","subarraysum(vector","subarraysumclosest(vector","subarraysumii(vector","submatrix","submatrix/descript","submatrixsum(vector>","subproblem","subract","subsequ","subsequence'","subsequence)","subsequence/descript","subsequences/descript","substr","substring,","substring.","substring/descript","subtre","such:","suffix","suffix,","suffix.","sum","sum(i","sum(i)","sum(i):","sum(i,","sum(n,","sum(sum)","sum(sum),","sum)","sum,","sum/descript","sum;","sum[0];","sum[0][n","sum[i","sum[i]","sum[i][j]","sum[n","suppos","swap","switch(op)","symbol","symbol)","symbol;","syn(num_r,","synthet","t","t)","t,","t.","t.length();","t:","t[j],","target","target)","target.","target:","task","tcode","tgrea","then,","theory,","therefore,","this,","thu","thus,","time","time(time),","time);","time,","time;","timeintersection(vector","times.","times:","token","tokens)","tokens:","tonight","top","top.bgn;","top.depth;","top.end;","top.first;","top.second;","total","total(0),","total;","total_col(0),","total_row(vec2d.size()),","tp","tp,","transact","transform","travers","traversal/descript","tree","tree)","tree.","tree/","tree/descript","treenod","treenode(int","treenode*","treenode*&","treenode,","treenode:","tri","trie","trie()","trie.","trienod","trienode()","tries,","trival","true","true);","true;","ts","ts,","turn","turn(0)","turn(0),","turn(turn::first)","turn);","turn,","turn::first)","turn::first;","turn::second;","turn;","two","type(type)","type)","type;","undefin","unit","unordered_set","unordered_set&","up","updat","upper","us","v","v.push_back(i.next());","v/descript","v1,","v1:","v2)","v2);","v2:","v:","v[i","v[i]","val","val(val)","val(x),","val)","val,","val:","val;","valid","valu","value)","value));","value:","value;","values.","values.size();","values:","values[i","values[i]","values[i];","values[j]","values[n","varabl","vec","vec2d(vec2d)","vec2d)","vec2d;","vecs(vecs)","vecs)","vecs:","vecs;","vector","vector&","vector,","vector/descript","vector2d","vector2d(vector>&","vector>","version","vi","void","w[i]","want","way","ways/descript","weight","weight(weight)","weight)","weight;","whether","whose","width","width;","widthofbinarytree(treenod","win","window","window);","window.","winnabl","winnable.","within","wood","woodcut(vector","word","word)","word.length();","word1:","word2:","word:","wordbreak(str","wordbreak3(string&","worddict,","worddict:","words)","words.","work","work.","write","wrong!","x","x(x),","x)","x,","x:","x;","y(y),","y,","y;","zigzag","zigzagiter","zigzagiterator2","{","{\"","{\"\"};","{\"(\",","{\"+\",","{\"/\",","{0,","{1,","{3,","{7,","{bgn,","{boolean}","{int}","{max.bgn,","{}","{};","|","||","}","});","};"],"pipeline":["stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"Introduction","keywords":"","body":"Introduction\n"},"Prefix Sum and Subarray/Subarray Sum.html":{"url":"Prefix Sum and Subarray/Subarray Sum.html","title":"Subarray Sum","keywords":"","body":"Problem\nLintCode 138. Subarray Sum\nhttps://www.lintcode.com/problem/subarray-sum/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param nums: A list of integers\n     * @return: A list of integers includes the index of the first number and the index of the last number\n     */\n    vector subarraySum(vector &nums) {\n        // write your code here\n\n        /**\n         *  preix(i) = num[0] + num[1] + ... + nums[i]\n         *  sum(i, j) = prefix(j) - prefix(i - 1)\n         *             = nums[i] + num[i + 1] + ... + num[j]\n         *\n         *  sum(i, j) = 0\n         *  => prefix(j) - prefix(i - 1) = 0\n         *  => prefix(j) = prefix(i - 1)\n         */\n\n        int size = nums.size();\n\n        int sum = 0;\n        std::unordered_map map;\n        map[0] = -1;\n\n        for (int i = 0 ; i \n"},"Prefix Sum and Subarray/Subarray Sum II.html":{"url":"Prefix Sum and Subarray/Subarray Sum II.html","title":"Subarray Sum II","keywords":"","body":"Problem\nLintCode 138. Subarray Sum\nhttps://www.lintcode.com/problem/subarray-sum/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param A: An integer array\n     * @param start: An integer\n     * @param end: An integer\n     * @return: the number of possible answer\n     */\n    int subarraySumII(vector &A, int start, int end) {\n        // write your code here\n\n        /**\n         *       a1, a2, ..., an\n         *   S0, S1, S2, ..., Sn\n         *\n         *          start  prefix(n + 1, 0);\n        for (int i = 1 ; i = start) {\n                ++r;\n            }\n\n            // Pinpoint the upper bound.\n            while (l  end) {\n                ++l;\n            }\n\n            count += r - l;\n        }\n\n        return count;\n    }\n};\n\n"},"Prefix Sum and Subarray/Submatrix Sum.html":{"url":"Prefix Sum and Subarray/Submatrix Sum.html","title":"Submatrix Sum","keywords":"","body":"Problem\nLintCode 405. Submatrix Sum\nhttps://www.lintcode.com/problem/submatrix-sum/description\nSolution\n\nclass Solution {\npublic:\n    /*\n     * @param matrix: an integer matrix\n     * @return: the coordinate of the left-up and right-down number\n     */\n    vector> submatrixSum(vector> &matrix) {\n        // write your code here\n\n        /**\n         *  prefix(i) = array[0] + array[1] + ... + array[i];\n         *  sum(i, j) = prefix(j) - prefix(i - 1)\n         *  sum(i, j) = 0 => prefix(j) = prefix(i - 1)\n         *\n         *   a b c d      (a + b) -> A\n         *   e f g h  =>  (e + f) -> B\n         *   i j k l      (i + j) -> C\n         *   m n o p      (m + n) -> D\n         *\n         *   Suppose that we want to scan the matrixes spanning from the\n         *   first 2 columns, we can generate a synthetic column which merges\n         *   these 2 columns and then apply the 1D solution we use to solve\n         *   subarray sum problem to scan this synthetic column.\n         *\n         *   O(C^2 * R)\n         */\n\n        int num_r = matrix.size();\n        int num_c = matrix[0].size();\n\n        for (int i = 0 ; i  syn(num_r, 0);\n\n            for (int j = i ; j  subarraySum(\n            const std::vector& array) {\n\n        int size = array.size();\n\n        std::unordered_map match;\n        match[0] = -1;\n\n        int sum = 0;\n        for (int i = 0 ; i \n"},"Prefix Sum and Subarray/Subarray Sum Closest.html":{"url":"Prefix Sum and Subarray/Subarray Sum Closest.html","title":"Subarray Sum Closest","keywords":"","body":"Problem\nLintCode 139. Subarray Sum Closest\nhttps://www.lintcode.com/problem/subarray-sum-closest/description\nSolution\n\n\nstruct Record {\n    int sum;\n    int index;\n\n    Record(int sum, int index)\n      : sum(sum), index(index)\n    { }\n};\n\n\nclass Solution {\npublic:\n    /*\n     * @param nums: A list of integers\n     * @return: A list of integers includes the index of the first number and the index of the last number\n     */\n    vector subarraySumClosest(vector &nums) {\n        // write your code here\n\n        /**\n         * Sort the prefix sums and find the pair of the neighboring prefix\n         * sums that has the minimum gap.\n         *\n         * s[0] = 0\n         * s[1] = nums[0]\n         * s[2] = nums[1] + s[1]\n         *  .\n         *  .\n         *  .\n         * s[n] = nums[n - 1] + s[n - 1]\n         *\n         * s[1], s[2], s[0], s[n - 1], ..., s[3]\n         */\n\n        int n = nums.size();\n        if (n == 0) {\n            return {-1, -1};\n        }\n\n        std::vector prefix(n + 1, Record(0, -1));\n        for (int i = 1 ; i \n"},"Prefix Sum and Subarray/Minimum Size Subarray Sum.html":{"url":"Prefix Sum and Subarray/Minimum Size Subarray Sum.html","title":"Minimum Size Subarray Sum","keywords":"","body":"Problem\nLintCode 406. Minimum Size Subarray Sum\nhttps://www.lintcode.com/problem/minimum-size-subarray-sum/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param nums: an array of integers\n     * @param s: An integer\n     * @return: an integer representing the minimum size of subarray\n     */\n    int minimumSize(vector &nums, int s) {\n        // write your code here\n\n        /**\n         *  Use 2 pointers, r and l, to scan the prefix sum array. In the\n         *  procedure, r is the main pointer which controls the movement of\n         *  our sliding window. Each time, when the subarray sum bounded by\n         *  r and l, namely prefix[r] - prefix[l], is less than or eqaul to\n         *  s, we try to adjust l so that we are able to get a smaller window\n         *  that also fulfills the problem descpretion.\n         *\n         *  Note: In real implementation, we may use a single varable to\n         *        represent the prefix sum array.\n         *\n         *    l\n         *          r\n         *  a b c d e f g h i\n         *\n         */\n\n        int size = nums.size();\n        if (size == 0) {\n            return -1;\n        }\n\n        int l = 0, r = 0;\n        int sum = 0;\n        int ans = std::numeric_limits::max();\n\n        while (r = s) {\n                do {\n                    int window = r - l + 1;\n                    ans = std::min(ans, window);\n                    sum -= nums[l];\n                    ++l;\n                } while (sum >= s);\n            }\n            ++r;\n        }\n\n        return (ans != std::numeric_limits::max())? ans : -1;\n    }\n};\n\n"},"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html":{"url":"Prefix Sum and Subarray/Maximum Size Subarray Sum Equals K.html","title":"Maximum Size Subarray Sum Equals K","keywords":"","body":"Problem\nLintCode 911. Maximum Size Subarray Sum Equals k\nhttps://www.lintcode.com/problem/maximum-size-subarray-sum-equals-k/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param nums: an array\n     * @param k: a target value\n     * @return: the maximum length of a subarray that sums to k\n     */\n    int maxSubArrayLen(vector &nums, int k) {\n        // Write your code here\n\n        /**\n         *   1  -1  5  -2  3\n         *   1   0  5   3  6\n         *\n         *  -2  -1  2   1\n         *  -2  -3  -1  0\n         *\n         *  HashTable(Key = Prefix Sum) = (Value = Index)\n         */\n\n        int n = nums.size();\n        int sum = 0;\n        int ans = INT_MIN;\n        std::unordered_map map;\n\n        for (int i = 0 ; i \n"},"Prefix Sum and Subarray/Maximum Subarray.html":{"url":"Prefix Sum and Subarray/Maximum Subarray.html","title":"Maximum Subarray","keywords":"","body":"Problem\nLintCode 41. Maximum Subarray\nhttps://www.lintcode.com/problem/maximum-subarray/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param nums: A list of integers\n     * @return: A integer indicate the sum of max subarray\n     */\n    int maxSubArray(vector &nums) {\n        // write your code here\n\n        int ans = nums[0];\n        int local = 0;\n\n        for (int num : nums) {\n            local += num;\n\n            ans = std::max(ans, local);\n\n            if (local \n"},"Prefix Sum and Subarray/Maximum Submatrix.html":{"url":"Prefix Sum and Subarray/Maximum Submatrix.html","title":"Maximum Submatrix","keywords":"","body":"Problem\nLintCode 944. Maximum Submatrix\nhttps://www.lintcode.com/problem/maximum-submatrix/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param matrix: the given matrix\n     * @return: the largest possible sum\n     */\n    int maxSubmatrix(vector> &matrix) {\n        // write your code here\n\n        /**\n         *\n         *  i        j\n         *  a1  b1  c1  d1      s1 (a1 + b1 + c1)\n         *  a2  b2  c2  d2      s2\n         *  a3  b3  c3  d3      s3                    s2    a2 b2 c2\n         *  .   .   .   .    => .                 =>  .  => .  .  .\n         *  .   .   .   .       .                     sk    ak bk ck\n         *  an  bn  cn  dn      sn\n         *\n         */\n\n        int num_r = matrix.size();\n        if (num_r == 0) {\n            return 0;\n        }\n        int num_c = matrix[0].size();\n        if (num_c == 0) {\n            return 0;\n        }\n\n        int ans = std::numeric_limits::min();\n\n        for (int i = 0 ; i  syn(num_r, 0);\n\n            for (int j = i ; j & array) {\n\n        /**\n         *   A, B\n         *\n         *   A > 0, B > 0           ,  A + B > A\n         *   A > 0, B  A,  A + B \n"},"Prefix Sum and Subarray/Continuous Subarray Sum.html":{"url":"Prefix Sum and Subarray/Continuous Subarray Sum.html","title":"Continuous Subarray Sum","keywords":"","body":"Problem\nLintCode 402. Continuous Subarray Sum\nhttps://www.lintcode.com/problem/continuous-subarray-sum/description\nSolution\nclass Solution {\npublic:\n    /*\n     * @param A: An integer array\n     * @return: A list of integers includes the index of the first number and the index of the last number\n     */\n    vector continuousSubarraySum(vector &A) {\n        // write your code here\n\n        int n = A.size();\n        if (n == 0) {\n            return {-1, -1};\n        }\n\n        int max = A[0], max_bgn = 0, max_end = 0;\n        int sum = 0, bgn = 0, end = 0;\n\n        while (end  max) {\n                max = sum;\n                max_bgn = bgn;\n                max_end = end;\n            }\n\n            ++end;\n\n            /**\n             * A, B\n             *\n             * A > 0, B > 0,           A + B > A\n             * A > 0, B  A,  A + B \n"},"Prefix Sum and Subarray/Continuous Subarray Sum II.html":{"url":"Prefix Sum and Subarray/Continuous Subarray Sum II.html","title":"Continuous Subarray Sum II","keywords":"","body":"Problem\nLintCode 403. Continuous Subarray Sum II\nhttps://www.lintcode.com/problem/continuous-subarray-sum-ii/description?_from=ladder&&fromId=4\nSolution\nstruct Record {\n    int bgn, end, sum;\n\n    Record(int bgn, int end, int sum)\n      : bgn(bgn), end(end), sum(sum)\n    { }\n};\n\n\nclass Solution {\npublic:\n    /*\n     * @param A: An integer array\n     * @return: A list of integers includes the index of the first number and the index of the last number\n     */\n    vector continuousSubarraySumII(vector &A) {\n        // write your code here\n\n        /**\n         *  Denote the maximum subarray as S(i, j).\n         *  Then, we need to handle 2 scenarios.\n         *\n         *  1. i  j, implying that the subarray exceeds the boundary of the\n         *     input array, thus spanning a cyclic range. However, this also\n         *     implies that the minimum subarray locates in a normal range.\n         *     Thus, to get the maximum subarray, we can subract the total\n         *     sum of the input array with the minimum subarray.\n         *\n         *  Finally, compare the results generated in the aforementioned 2\n         *  scenarios to get the real maximum subarray.\n         *\n         *  e.g:\n         *\n         *       S0\n         *\n         * Sn-1       S1     => S1 -> Si (i  Sj -> S2 (j  total - min.sum) {\n            return {max.bgn, max.end};\n        }\n\n        // All the array numbers are negative.\n        if (min.bgn == 0 && min.end == n - 1) {\n            return {max.bgn, max.end};\n        }\n\n        int bgn = min.end + 1;\n        if (bgn == n) {\n            bgn = 0;\n        }\n\n        int end = min.bgn - 1;\n        if (end == -1) {\n            end = n - 1;\n        }\n\n        return {bgn, end};\n    }\n\nprivate:\n    Record findMax(const std::vector& nums, int n) {\n\n        int max = nums[0], max_bgn = 0, max_end = 0;\n        int sum = 0, bgn = 0, end = 0;\n\n        while (end  max) {\n                max = sum;\n                max_bgn = bgn;\n                max_end = end;\n            }\n\n            ++end;\n\n            if (sum & nums, int n) {\n\n        int min = nums[0], min_bgn = 0, min_end = 0;\n        int sum = 0, bgn = 0, end = 0;\n\n        while (end  0) {\n                sum = 0;\n                bgn = end;\n            }\n        }\n\n        return Record(min_bgn, min_end, min);\n    }\n};\n\n"},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html":{"url":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks.html","title":"Best Time to Buy and Sell Stocks","keywords":"","body":"Problem\nLintCode 149. Best Time to Buy and Sell Stocks\nhttps://www.lintcode.com/problem/best-time-to-buy-and-sell-stock/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param prices: Given an integer array\n     * @return: Maximum profit\n     */\n    int maxProfit(vector &prices) {\n        // write your code here\n\n        int size = prices.size();\n        if (size == 0) {\n            return 0;\n        }\n\n        int opt = 0;\n        int min = prices[0];\n\n        for (int i = 1 ; i \n"},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html":{"url":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks II.html","title":"Best Time to Buy and Sell Stocks II","keywords":"","body":"Problem\nLintCode 150. Best Time to Buy and Sell Stocks II\nhttps://www.lintcode.com/problem/best-time-to-buy-and-sell-stock-ii/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param prices: Given an integer array\n     * @return: Maximum profit\n     */\n    int maxProfit(vector &prices) {\n        // write your code here\n\n        /**\n         * 1 7 2 4 5 6 1\n         *\n         *   *\n         *   *       *\n         *   *     * *\n         *   *   * * *\n         *   *   * * *\n         *   * * * * *\n         * * * * * * * *\n         * _____________\n         *\n         * Objective: Aggregate all the ascending segments.\n         *\n         *      Segments: (0, 1), (2, 6)\n         *      Value   : 6     , 4\n         */\n\n        int n = prices.size();\n        if (n == 0) {\n            return 0;\n        }\n\n        int ans = 0;\n        int bgn = 0, end = 1;\n\n        while (end \n"},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html":{"url":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks III.html","title":"Best Time to Buy and Sell Stocks III","keywords":"","body":"Problem\nLintCode 151. Best Time to Buy and Sell Stocks III\nhttps://www.lintcode.com/problem/best-time-to-buy-and-sell-stock-iii/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param prices: Given an integer array\n     * @return: Maximum profit\n     */\n    int maxProfit(vector &prices) {\n        // write your code here\n\n        /**\n         *  buy_1st : The maximum profits that we can get after conducting\n         *            the first purchase.\n         *\n         *  sell_1st: The maximum profits that we can get after conducting\n         *            the first selling.\n         *\n         *  buy_2nd : The maximum profits that we can get after conducting\n         *            the second purchase.\n         *\n         *  sell_2nd: The maximum profits that we can get after conducting\n         *            the second selling.\n         *\n         *\n         *  price: The stock price of the ith day.\n         *\n         *  buy_1st  = MAX{ buy_1st, -price }\n         *  sell_1st = MAX{ sell_1st, buy_1st + price}\n         *  buy_2nd  = MAX{ buy_2nd, sell_1st - price }\n         *  sell_2nd = MAX{ sell_2nd, buy_2nd + price }\n         *  ^^^^^^^^\n         */\n\n        int buy_first = std::numeric_limits::min();\n        int buy_second = std::numeric_limits::min();\n\n        int sell_first = 0;\n        int sell_second = 0;\n\n        for (int price : prices) {\n            buy_first = std::max(buy_first, -price);\n            sell_first = std::max(sell_first, buy_first + price);\n\n            buy_second = std::max(buy_second, sell_first - price);\n            sell_second = std::max(sell_second, buy_second + price);\n        }\n\n        return sell_second;\n    }\n};\n\n"},"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html":{"url":"Best Time to Buy and Sell Stocks/Best Time to Buy and Sell Stocks IV.html","title":"Best Time to Buy and Sell Stocks IV","keywords":"","body":"Problem\nLintCode 393. Best Time to Buy and Sell Stocks IV\nhttps://www.lintcode.com/problem/best-time-to-buy-and-sell-stock-iv/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param K: An integer\n     * @param prices: An integer array\n     * @return: Maximum profit\n     */\n    int maxProfit(int k, vector &prices) {\n        // write your code here\n\n        /**\n         * dp[i][j]: The maximum profits that we can get after we conduct at\n         *           most i transactions in the first j days.\n         *\n         * dp[i][j] = MAX | no transaction on the jth day, dp[i][j - 1]\n         *                | otherwise,\n         *                |     MAX { (price[j] - price[h]) + dp[i - 1][h] }\n         *                     0 price[j] + MaxDiff, determine the optimal value\n         *  => MaxDiff = MAX{ MaxDiff, dp[i - 1][j] - price[j]}, update the cache\n         *\n         *      O(kn)\n         */\n\n        int n = prices.size();\n        if (n == 0 || k == 0) {\n            return 0;\n        }\n\n        if (k >= n / 2) {\n            int sum = 0;\n            for (int i = 1 ; i  prices[i - 1]) {\n                    sum += prices[i] - prices[i - 1];\n                }\n            }\n            return sum;\n        }\n\n        std::vector> dp(k + 1, std::vector(n, 0));\n\n        /*\n            O(k * n^2)\n\n        for (int i = 1 ; i \n"},"Knapsack Problem/Backpack I.html":{"url":"Knapsack Problem/Backpack I.html","title":"Backpack I","keywords":"","body":"Problem\nLintCode 92 Backpack\nhttps://www.lintcode.com/problem/backpack/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param m: An integer m denotes the size of a backpack\n     * @param A: Given n items with size A[i]\n     * @return: The maximum size\n     */\n    int backPack(int m, vector &A) {\n        // write your code here\n\n        /**\n         * dp[i][j]: The maximal size the knapsack which can hold j units of\n         *           weight can aggregate by using the first i items.\n         *\n         * dp[i][j] = | A[i] > dp(n + 1, std::vector(m + 1, 0));\n\n        for (int i = 1 ; i  j) {\n                    dp[i][j] = dp[i - 1][j];\n                    continue;\n                }\n\n                dp[i][j] =\n                    std::max(dp[i - 1][j], dp[i - 1][j - A[i - 1]] + A[i - 1]);\n            }\n        }\n\n        return dp[n][m];\n    }\n};\n\n"},"Knapsack Problem/Backpack II.html":{"url":"Knapsack Problem/Backpack II.html","title":"Backpack II","keywords":"","body":"Problem\nLintCode 125 Backpack II\nhttps://www.lintcode.com/problem/backpack-ii/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param m: An integer m denotes the size of a backpack\n     * @param A: Given n items with size A[i]\n     * @param V: Given n items with value V[i]\n     * @return: The maximum value\n     */\n    int backPackII(int m, vector &A, vector &V) {\n        // write your code here\n\n        /**\n         * dp[i][j]: The maximal values the knapsack which can hold j units of\n         *           weight can aggregate by using the first i items.\n         *\n         * dp[i][j] = | W[i] > dp(n + 1, std::vector(m + 1, 0));\n\n        for (int i = 1 ; i  j) {\n                    dp[i][j] = dp[i - 1][j];\n                    continue;\n                }\n\n                dp[i][j] = std::max(\n                    V[i - 1] + dp[i - 1][j - A[i - 1]], dp[i - 1][j]);\n            }\n        }\n\n        return dp[n][m];\n    }\n};\n\n"},"Knapsack Problem/Backpack III.html":{"url":"Knapsack Problem/Backpack III.html","title":"Backpack III","keywords":"","body":"Problem\nLintCode 440 Backpack III\nhttps://www.lintcode.com/problem/backpack-iii/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param A: an integer array\n     * @param V: an integer array\n     * @param m: An integer\n     * @return: an array\n     */\n    int backPackIII(vector &A, vector &V, int m) {\n        // write your code here\n\n        /**\n         * dp[i][j]: The maximal values the knapsack which can hod j units of\n         *           weight can aggregate by using the first i items.\n         *\n         * Note: An item can be used multiple times.\n         *\n         * dp[i][j] = | W[i] > dp(n + 1, std::vector(m + 1, 0));\n\n        for (int i = 1 ; i  j) {\n                    dp[i][j] = dp[i - 1][j];\n                    continue;\n                }\n\n                dp[i][j] = std::max(dp[i - 1][j], V[i - 1] + dp[i][j - A[i - 1]]);\n            }\n        }\n\n        return dp[n][m];\n    }\n};\n\n"},"Knapsack Problem/Backpack IV.html":{"url":"Knapsack Problem/Backpack IV.html","title":"Backpack IV","keywords":"","body":"Problem\nLintCode 562 Backpack IV\nhttps://www.lintcode.com/problem/backpack-iv/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param nums: an integer array and all positive numbers, no duplicates\n     * @param target: An integer\n     * @return: An integer\n     */\n    int backPackIV(vector &nums, int target) {\n        // write your code here\n\n        /**\n         * dp[i][j]: The number of ways to fill the knapsack which can hold j\n         *           units of weight using the first i items.\n         *\n         * Note: An item can be used multiple times.\n         *\n         * dp[i][j] = | nums[i] > dp(n + 1, std::vector(target + 1, 0));\n\n        for (int i = 0 ; i  j) {\n                    dp[i][j] = dp[i - 1][j];\n                    continue;\n                }\n\n                dp[i][j] = dp[i - 1][j] + dp[i][j - nums[i - 1]];\n            }\n        }\n\n        return dp[n][target];\n    }\n};\n\n"},"Knapsack Problem/Backpack V.html":{"url":"Knapsack Problem/Backpack V.html","title":"Backpack V","keywords":"","body":"Problem\nLintCode 563 Backpack V\nhttps://www.lintcode.com/problem/backpack-v/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param nums: an integer array and all positive numbers\n     * @param target: An integer\n     * @return: An integer\n     */\n    int backPackV(vector &nums, int target) {\n        // write your code here\n\n        /**\n         * dp[i][j]: The number of ways to fill the knapsack which can hold j\n         *           units of weight using the first i items.\n         *\n         * dp[i][j] = | nums[i] > dp(n + 1, std::vector(target + 1, 0));\n\n        for (int i = 0 ; i  j) {\n                    dp[i][j] = dp[i - 1][j];\n                    continue;\n                }\n\n                dp[i][j] = dp[i - 1][j] + dp[i - 1][j - nums[i - 1]];\n            }\n        }\n\n        return dp[n][target];\n    }\n};\n\n"},"Knapsack Problem/Backpack VI.html":{"url":"Knapsack Problem/Backpack VI.html","title":"Backpack VI","keywords":"","body":"Problem\nLintCode 564 Combination Sum IV\nhttps://www.lintcode.com/problem/combination-sum-iv/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param nums: an integer array and all positive numbers, no duplicates\n     * @param target: An integer\n     * @return: An integer\n     */\n    int backPackVI(vector &nums, int target) {\n        // write your code here\n\n        /**\n         * dp[i]: The number of ways to sum up to i using any combination of numbers.\n         *\n         * dp[i] =  SUM { dp[i - nums[j] | i >= nums[j]}\n         *         0 dp(target + 1, 0);\n        dp[0] = 1;\n\n        for (int i = 1 ; i  i) {\n                    continue;\n                }\n                dp[i] += dp[i - num];\n            }\n        }\n\n        return dp[target];\n    }\n};\n\n"},"Knapsack Problem/K Sum.html":{"url":"Knapsack Problem/K Sum.html","title":"K Sum","keywords":"","body":"Problem\nLintCode 89 K Sum\nhttps://www.lintcode.com/problem/k-sum/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param A: An integer array\n     * @param k: A positive integer (k  &A, int k, int target) {\n        // write your code here\n\n        /**\n         * dp[i][j][h]: The number of ways to use j integers from the first i\n         *              integers to compose h.\n         *\n         * dp[i][j][h] = | A[i] >>\n            dp(n + 1, std::vector>(\n                k + 1, std::vector(target + 1, 0)));\n\n        for (int i = 0 ; i  h) {\n                        dp[i][j][h] = dp[i - 1][j][h];\n                        continue;\n                    }\n\n                    dp[i][j][h] = dp[i - 1][j][h] + dp[i - 1][j - 1][h - A[i - 1]];\n                }\n            }\n        }\n\n        return dp[n][k][target];\n    }\n};\n\n"},"Matrix Chain Multiplication/Stone Game.html":{"url":"Matrix Chain Multiplication/Stone Game.html","title":"Stone Game","keywords":"","body":"Problem\nLintCode 476. Stone Game\nhttps://www.lintcode.com/problem/stone-game/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param A: An integer array\n     * @return: An integer\n     */\n    int stoneGame(vector &A) {\n        // write your code here\n\n        /**\n         * dp[i][j]: The minimum cost to merge the piles starting from the\n         *           ith pile to the jth pile.\n         *\n         * dp[i][j] =  MIN { dp[i][k] + dp[k + 1][j] + sum(i, j) }\n         *            i prefix(n + 1, 0);\n        for (int i = 1 ; i > dp(n, std::vector(n, 0));\n\n        for (int i = 1 ; i ::max();\n                int sum = prefix[j + 1] - prefix[i];\n\n                for (int k = i ; k \n"},"Matrix Chain Multiplication/Stone Game II.html":{"url":"Matrix Chain Multiplication/Stone Game II.html","title":"Stone Game II","keywords":"","body":"Problem\nLintCode 593. Stone Game II\nhttps://www.lintcode.com/problem/stone-game-ii/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param A: An integer array\n     * @return: An integer\n     */\n    int stoneGame2(vector &A) {\n        // write your code here\n\n        /**\n         *     A\n         *              A good way to break the loop is to flatten the loop\n         *  B     E     with 2 consecutive replicas.\n         *\n         *   C   D      => A B C D E A B C D E\n         *\n         * dp[i][j]: The minimum cost to merge the piles starting from the\n         *           ith pile to the jth pile.\n         *\n         * dp[i][j] =  MIN { dp[i][k] + dp[k + 1][j] + sum(i, j) }\n         *            i prefix(nn + 1, 0);\n        for (int i = 1 ; i > dp(nn, std::vector(nn, 0));\n        for (int i = 1 ; i ::max();\n                int sum = prefix[j + 1] - prefix[i];\n\n                for (int k = i ; k ::max();\n        for (int i = 0 ; i \n"},"Matrix Chain Multiplication/Burst Balloons.html":{"url":"Matrix Chain Multiplication/Burst Balloons.html","title":"Burst Balloons","keywords":"","body":"Problem\nLintCode 168. Burst Balloons\nhttps://www.lintcode.com/problem/burst-balloons/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param nums: A list of integer\n     * @return: An integer, maximum coins\n     */\n    int maxCoins(vector &nums) {\n        // write your code here\n\n        /**\n         * | ........ B ....... |\n         * | .... B ........... |\n         * | ............ B ... |\n         *\n         * dp[i][j]: The maximum score that we can secure among the ith balloon\n         *           to the jth balloon.\n         *\n         * Consider k is the last balloon that we can burst among the range(i, j).\n         *\n         * dp[i][j] =  MAX { dp[i][k - 1] + dp[k + 1][j] + nums[i - 1] * nums[k] * nums[j + 1} }\n         *           i> dp(n + 2, std::vector(n + 2, 0));\n\n        for (int l = 1 ; l \n"},"Fibonacci Sequence/Decode Ways.html":{"url":"Fibonacci Sequence/Decode Ways.html","title":"Decode Ways","keywords":"","body":"Problem\nLintCode 512. Decode Ways\nhttps://www.lintcode.com/problem/decode-ways/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param s: a string,  encoded message\n     * @return: an integer, the number of ways decoding\n     */\n    int numDecodings(string &s) {\n        // write your code here\n\n        /**\n         * dp[i]: The number of ways to decode the prefix ending at index i.\n         *\n         * dp[i] = dp[i - 1] + dp[i - 2]\n         *\n         * - Handle 1 digit:\n         *   s[i]: 0              -> 0\n         *   s[i]: {1, 2, ..., 9} -> 1\n         *\n         * - Handle 2 digits:\n         *   s[i - 1]: 0                  -> 0\n         *   s[i - 1]: 1\n         *      - s[i]: {0, 1, 2, ..., 9} -> 1\n         *   s[i - 1]: 2\n         *      - s[i]: {0, 1, 2, ..., 6} -> 1\n         *      - s[i]: {7, 8, 9}         -> 0\n         *   s[i - 1]: {3, 4, ..., 9}     -> 0\n         */\n\n        int n = s.length();\n        if (n == 0) {\n            return 0;\n        }\n\n        std::vector dp(n + 1, 1);\n\n        for (int i = 1 ; i = 2) {\n                dp[i] += countTwoDigits(s, i - 2, i - 1) * dp[i - 2];\n            }\n        }\n\n        return dp[n];\n    }\n\nprivate:\n    int countOneDigit(const std::string& str, int s1) {\n\n        return (str[s1] == '0') ? 0 : 1;\n    }\n\n    int countTwoDigits(const std::string& str, int s1, int s2) {\n\n        if (str[s1] == '0') {\n            return 0;\n        }\n\n        if (str[s1] == '1') {\n            return 1;\n        }\n\n        if (str[s1] == '2') {\n            return ('0' \n"},"Fibonacci Sequence/Decode Ways II.html":{"url":"Fibonacci Sequence/Decode Ways II.html","title":"Decode Ways II","keywords":"","body":"Problem\nLintCode 676. Decode Ways II\nhttps://www.lintcode.com/problem/decode-ways-ii/description\nSolution\nclass Solution {\npublic:\n    Solution()\n      : mod(1000000007)\n    { }\n\n    /**\n     * @param s: a message being encoded\n     * @return: an integer\n     */\n    int numDecodings(string &s) {\n        // write your code here\n\n        /**\n         *            i\n         *      *******\n         *           (i - 1)\n         *  ->  ******\n         *           (i - 2)\n         *  ->  *****\n         *\n         *  dp[i]: The number of ways to decode the given substring ending at\n         *         the ith letter.\n         *\n         *  dp[i] = dp[i - 1] + dp[i - 2]\n         *\n         *\n         *  dp[i - 1]:\n         *      - s[i]: 0           , get 0\n         *      - s[i]: {1, ..., 9} , get dp[i - 1]\n         *      - s[i]: *           , get 9 * dp[i - 1]\n         *\n         *  dp[i - 2]:\n         *      - s[i - 1]: 0           , get 0\n         *      - s[i - 1]: 1\n         *          - s[i]: {0, ..., 9} , get dp[i - 2]\n         *          - s[i]: *           , get 9 * dp[i - 2]\n         *      - s[i - 1]: 2\n         *          - s[i]: {0, ..., 6} , get dp[i - 2]\n         *          - s[i]: {7, 8, 9}   , get 0\n         *          - s[i]: *           , get 6 * dp[i - 2]\n         *      - s[i - 1]: {3, ..., 9} , get 0\n         *      - s[i - 1]: *\n         *          - s[i]: {0, ..., 6} , get 2 * dp[i - 2]\n         *          - s[i]: {7, 8, 9}   , get dp[i - 2]\n         *          - s[2]: *           , get 15 * dp[i - 2]\n         *\n         */\n\n        int n = s.length();\n\n        if (n == 0) {\n            return 0;\n        }\n\n        std::vector dp(n + 1, 0);\n        dp[0] = 1;\n\n        for (int i = 0, j = 1 ; i \n"},"Fibonacci Sequence/House Robber.html":{"url":"Fibonacci Sequence/House Robber.html","title":"House Robber","keywords":"","body":"Problem\nLintCode 392. House Robber\nhttps://www.lintcode.com/problem/house-robber/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param A: An array of non-negative integers\n     * @return: The maximum amount of money you can rob tonight\n     */\n    long long houseRobber(vector &A) {\n        // write your code here\n\n        /**\n         * dp[i]: The maximum profits that we can aggregate from the first i\n         *        houses.\n         *\n         * dp[i] = MAX{ profit[i] + dp[i - 2], dp[i - 1] }\n         */\n\n        int n = A.size();\n        if (n == 0) {\n            return 0;\n        }\n\n        std::vector dp(n, 0);\n        dp[0] = A[0];\n        dp[1] = std::max(A[0], A[1]);\n\n        for (int i = 2 ; i \n"},"Fibonacci Sequence/House Robber II.html":{"url":"Fibonacci Sequence/House Robber II.html","title":"House Robber II","keywords":"","body":"Problem\nLintCode 534. House Robber II\nhttps://www.lintcode.com/problem/house-robber-ii/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param nums: An array of non-negative integers.\n     * @return: The maximum amount of money you can rob tonight\n     */\n    int houseRobber2(vector &nums) {\n        // write your code here\n\n        /**\n         *       A      =>  The key to break the loop is generating 2\n         *                  subproblems and solving them respectively.\n         *   B       E\n         *              =>  (A B C D) or (B C D E)\n         *     C   D\n         *\n         *  1. Rob the 1st house, solve the problem within the range (0, n - 2).\n         *  2. Rob the last house, solve the problem within the range (1, n - 1).\n         *\n         *  dp[i]: The maximum profits that we can aggregate from the first\n         *         i houses.\n         *\n         *  dp[i] = MAX { profit[i] + dp[i - 2], dp[i - 1] }\n         */\n\n        int n = nums.size();\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return nums[0];\n        }\n\n        return std::max(rob(nums, n, 0, n - 2), rob(nums, n, 1, n - 1));\n    }\n\nprivate:\n    int rob(const std::vector& nums, int n, int bgn, int end) {\n\n        std::vector dp(n, 0);\n\n        dp[bgn] = nums[bgn];\n        dp[bgn + 1] = std::max(nums[bgn], nums[bgn + 1]);\n\n        for (int i = bgn + 2 ; i \n"},"Fibonacci Sequence/House Robber III.html":{"url":"Fibonacci Sequence/House Robber III.html","title":"House Robber III","keywords":"","body":"Problem\nLintCode 535. House Robber III\nhttps://www.lintcode.com/problem/house-robber-iii/description\nSolution\n/**\n * Definition of TreeNode:\n * class TreeNode {\n * public:\n *     int val;\n *     TreeNode *left, *right;\n *     TreeNode(int val) {\n *         this->val = val;\n *         this->left = this->right = NULL;\n *     }\n * }\n */\n\nclass Solution {\npublic:\n    /**\n     * @param root: The root of binary tree.\n     * @return: The maximum amount of money you can rob tonight\n     */\n    int houseRobber3(TreeNode * root) {\n        // write your code here\n\n        /**\n         *        A\n         *       / \\\n         *     B     C\n         *    / \\   / \\\n         *   D   E F   G\n         *\n         * dp[c]: The maximum profits that we can aggregate in the subtree\n         *        rooted by c.\n         *\n         * dp[c] = MAX | c->val + dp[c->l->l] + dp[c->l->r] + dp[c->r->r] + dp[c->r->l]\n         *             | dp[c->l] + dp[c->r]\n         */\n\n        std::unordered_map memo;\n        return runPostOrder(root, memo);\n    }\n\nprivate:\n    int runPostOrder(TreeNode* root, std::unordered_map& memo) {\n\n        if (!root) {\n            return 0;\n        }\n\n        if (memo.count(root) == 1) {\n            return memo[root];\n        }\n\n        int l = 0, ll = 0, lr = 0, r = 0, rr = 0, rl = 0;\n\n        if (root->left) {\n            l = runPostOrder(root->left, memo);\n            ll = runPostOrder(root->left->left, memo);\n            lr = runPostOrder(root->left->right, memo);\n        }\n        if (root->right) {\n            r = runPostOrder(root->right, memo);\n            rr = runPostOrder(root->right->right, memo);\n            rl = runPostOrder(root->right->left, memo);\n        }\n\n        int max = std::max(root->val + ll + lr + rr + rl, l + r);\n\n        memo[root] = max;\n        return max;\n    }\n};\n\n"},"String and Sequence Extremum/Minimum Edit Distance.html":{"url":"String and Sequence Extremum/Minimum Edit Distance.html","title":"Minimum Edit Distance","keywords":"","body":"Problem\nLintCode 119. Edit Distance\nhttps://www.lintcode.com/problem/edit-distance/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param word1: A string\n     * @param word2: A string\n     * @return: The minimum number of steps.\n     */\n    int minDistance(string &s, string &t) {\n        // write your code here\n\n        /**\n         * dp[i][j]: The minimum costs to transform the prefix of A ending at\n         *           the index i to the prefix of B ending at the index j.\n         *\n         *  dp[i][i] = | if A[i] == B[j], dp[i - 1][j - 1]\n         *             | otherwise      , MIN | 1 + dp[i - 1][j - 1], replace A[i].\n         *                                    | 1 + dp[i][j - 1]    , insert a letter.\n         *                                    | 1 + dp[i - 1][j]    , delete a letter.\n         */\n\n        int ns = s.length();\n        int nt = t.length();\n\n        std::vector> dp(ns + 1, std::vector(nt + 1));\n\n        for (int i = 0 ; i \n"},"String and Sequence Extremum/Longest Common Subsequence.html":{"url":"String and Sequence Extremum/Longest Common Subsequence.html","title":"Longest Common Subsequence","keywords":"","body":"Problem\nLintCode 77. Longest Common Subsequence\nhttps://www.lintcode.com/problem/longest-common-subsequence/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param A: A string\n     * @param B: A string\n     * @return: The length of longest common subsequence of A and B\n     */\n    int longestCommonSubsequence(string &A, string &B) {\n        // write your code here\n\n        /**\n         *  dp[i][j]: The LCS of the prefixes A(0, i) and B(0, j).\n         *\n         *  dp[i][j] = | if A[i] == B[j], dp[i - 1][j - 1] + 1\n         *             | Otherwise      , MAX(dp[i - 1][j], dp[i][j - 1])\n         */\n\n        int na = A.size();\n        int nb = B.size();\n\n        std::vector> dp(na + 1, std::vector(nb + 1, 0));\n\n        for (int i = 1 ; i \n"},"String and Sequence Extremum/Longest Common Substring.html":{"url":"String and Sequence Extremum/Longest Common Substring.html","title":"Longest Common Substring","keywords":"","body":"Problem\nLintCode 79. Longest Common Substring\nhttps://www.lintcode.com/problem/longest-common-substring/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param A: A string\n     * @param B: A string\n     * @return: the length of the longest common substring.\n     */\n    int longestCommonSubstring(string &A, string &B) {\n        // write your code here\n\n        /**\n         * dp[i][j]: The length of the longest common substring of the 2\n         *           prefixes A(0, i) and B(0, j).\n         *\n         * dp[i][j] = | if A[i] == B[j], 1 + dp[i - 1][j - 1]\n         *            | Otherwise      , 0\n         *\n         *\n         *  e.g.: ABCD, CBCE\n         *\n         *      0 A B C D\n         *    0 0 0 0 0 0\n         *    C 0 0 0 1 0\n         *    B 0 0 1 0 0\n         *    C 0 0 0 2 0\n         *    E 0 0 0 0 0\n         */\n\n        int na = A.size();\n        int nb = B.size();\n\n        int ans = 0;\n        std::vector> dp(na + 1, std::vector(nb + 1, 0));\n\n        for (int i = 1 ; i \n"},"String and Sequence Extremum/Longest Palindromic Subsequence.html":{"url":"String and Sequence Extremum/Longest Palindromic Subsequence.html","title":"Longest Palindromic Subsequence","keywords":"","body":"Problem\nLintCode 667. Longest Palindromic Subsequence\nhttps://www.lintcode.com/problem/longest-palindromic-subsequence/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param s: the maximum length of s is 1000\n     * @return: the longest palindromic subsequence's length\n     */\n    int longestPalindromeSubseq(string &s) {\n        // write your code here\n\n        /**\n         * dp[i][j]: The length of the longest palindromic subsequence in\n         *           the substring starting at the index i and ending at the\n         *           index j.\n         *\n         * dp[i][j] = | if s[i] == s[j], 2 + dp[i + 1][j - 1]\n         *            | otherwise      , max{ dp[i][j - 1], dp[i + 1][j] }\n         */\n\n        int n = s.length();\n        if (n == 0) {\n            return 0;\n        }\n\n        std::vector> dp(n, std::vector(n, 0));\n\n        for (int i = 0 ; i \n"},"String and Sequence Extremum/Longest Palindromic Substring.html":{"url":"String and Sequence Extremum/Longest Palindromic Substring.html","title":"Longest Palindromic Substring","keywords":"","body":"Problem\nLintCode 200. Longest Palindromic Substring\nhttps://www.lintcode.com/problem/longest-palindromic-substring/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param s: input string\n     * @return: the longest palindromic substring\n     */\n    string longestPalindrome(string &s) {\n        // write your code here\n\n        /**\n         * palin[i][j]: Whether the substring starting at the index i and\n         *              ending at the index j is palindromic.\n         *\n         * palin[i][j] = s[i] == s[j] && palin[i + 1][j - 1]\n         *\n         * Since the beginning and the ending offsets already show the\n         * length of this palindromic substring, we do not need an extra\n         * data structure to record the length information.\n         */\n\n        int n = s.length();\n        if (n == 0) {\n            return \"\";\n        }\n\n        std::vector> palin(n, std::vector(n, false));\n\n        int lps = 1;\n        int bgn = 0;\n\n        for (int i = 0 ; i  lps) {\n                        lps = l;\n                        bgn = i;\n                    }\n                }\n            }\n        }\n\n        return s.substr(bgn, lps);\n    }\n};\n\n"},"String and Sequence Extremum/Longest Increasing Subsequence.html":{"url":"String and Sequence Extremum/Longest Increasing Subsequence.html","title":"Longest Increasing Subsequence","keywords":"","body":"Problem\nLintCode 77. Longest Increasing Subsequence\nhttps://www.lintcode.com/problem/longest-increasing-subsequence/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param nums: An integer array\n     * @return: The length of LIS (longest increasing subsequence)\n     */\n    int longestIncreasingSubsequence(vector &nums) {\n        // write your code here\n\n        /**\n         *   4 2 4 5 3 7\n         *\n         *  dp[0] [1] [2] [3]\n         *     4\n         *     2\n         *     2   4\n         *     2   4   5\n         *     2   3   5\n         *     2   3   5   7\n         *\n         *\n         *   O(nlogn)\n         */\n\n        int n = nums.size();\n        if (n == 0) {\n            return 0;\n        }\n\n        std::vector lis;\n        lis.push_back(nums[0]);\n\n        for (int i = 1 ; i  lis.back()) {\n                lis.push_back(nums[i]);\n                continue;\n            }\n\n            int cand = nums[i];\n\n            int l = 0, r = lis.size() - 1;\n            while (l + 1 = lis[m]) {\n                    l = m;\n                } else {\n                    r = m;\n                }\n            }\n\n            if (cand > lis[l]) {\n                lis[r] = cand;\n            } else {\n                lis[l] = cand;\n            }\n        }\n\n        return lis.size();\n    }\n};\n\n"},"String and Sequence Extremum/Longest Increasing Substring.html":{"url":"String and Sequence Extremum/Longest Increasing Substring.html","title":"Longest Increasing Substring","keywords":"","body":"Problem\nLintCode 397. Longest Increasing Substring\nhttps://www.lintcode.com/problem/longest-continuous-increasing-subsequence/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param A: An array of Integer\n     * @return: an integer\n     */\n    int longestIncreasingContinuousSubsequence(vector &A) {\n        // write your code here\n\n        /**\n         *  dp[i]: The length of the current continuous subsequence (substring)\n         *         ending at the index i.\n         *\n         *  dp[i] = | if A[i] > A[i + 1] , dp[i] = dp[i - 1] + 1.\n         *          | otherwise          , dp[i] = 1.\n         */\n\n        int n = A.size();\n        if (n == 0) {\n            return 0;\n        }\n\n        int ans = 1;\n        int dp = 1;\n        for (int i = 1 ; i  A[i - 1]) {\n                ++dp;\n                ans = std::max(ans, dp);\n            } else {\n                dp = 1;\n            }\n        }\n\n        dp = 1;\n        for (int i = n - 2 ; i >= 0 ; --i) {\n            if (A[i] > A[i + 1]) {\n                ++dp;\n                ans = std::max(ans, dp);\n            } else {\n                dp = 1;\n            }\n        }\n\n        return ans;\n    }\n};\n\n"},"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html":{"url":"String and Sequence Extremum/Longest Increasing Continuous Subsequence in 2D Matrix.html","title":"Longest Increasing Continuous Subsequence in 2D Matrix","keywords":"","body":"Problem\nLintCode 398. Longest Continuous Increasing Subsequence II\nhttps://www.lintcode.com/problem/longest-continuous-increasing-subsequence-ii/description\nSolution\n\nstruct Record {\n    int x;\n    int y;\n    int val;\n\n    Record(int x, int y, int val)\n      : x(x), y(y), val(val)\n    { }\n};\n\n\nstruct RecordCompare {\n    bool operator() (const Record& lhs, const Record& rhs) {\n        return lhs.val > rhs.val;\n    }\n};\n\n\nclass Solution {\npublic:\n    Solution()\n      : directs({{1, 0}, {-1, 0}, {0, 1}, {0, -1}})\n    { }\n\n    /**\n     * @param matrix: A 2D-array of integers\n     * @return: an integer\n     */\n    int longestContinuousIncreasingSubsequence2(vector> &matrix) {\n        // write your code here\n\n        // Dynamic Programming + Priority Queue\n\n        int num_r = matrix.size();\n        if (num_r == 0) {\n            return 0;\n        }\n\n        int num_c = matrix[0].size();\n        if (num_c == 0) {\n            return 0;\n        }\n\n        int ans = 1;\n\n        std::vector> dp(num_r, std::vector(num_c, 1));\n        std::priority_queue, RecordCompare> queue;\n        for (int i = 0 ; i = 0 && ny >= 0 && nx  val) {\n                    dp[nx][ny] = std::max(dp[nx][ny], dp[x][y] + 1);\n                    ans = std::max(ans, dp[nx][ny]);\n                }\n            }\n        }\n\n        return ans;\n    }\n\nprivate:\n    std::vector> directs;\n};\n\n"},"String and Sequence Extremum/Longest Repeating Subsequence.html":{"url":"String and Sequence Extremum/Longest Repeating Subsequence.html","title":"Longest Repeating Subsequence","keywords":"","body":"Problem\nLintCode 581. Longest Repeating Subsequence\nhttps://www.lintcode.com/problem/longest-repeating-subsequence/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param str: a string\n     * @return: the length of the longest repeating subsequence\n     */\n    int longestRepeatingSubsequence(string &str) {\n        // write your code here\n\n        /**\n         * dp[i][j]: The length of the longest common subsequence that can\n         *           be found in the prefix of str ending at the index i and\n         *           the prefix of str ending at the index j.\n         *\n         * dp[i][j] = | if s[i] == s[j], | if i != j, dp[i - 1][j - 1] + 1\n         *            |                  | otherwise, 0\n         *            |\n         *            | otherwise      , MAX{ dp[i][j - 1], dp[i - 1][j] }\n         */\n\n        int n = str.length();\n        if (n == 0) {\n            return 0;\n        }\n\n        std::vector> dp(n + 1, std::vector(n + 1, 0));\n\n        for (int i = 1 ; i \n"},"String Scramble/Distinct Subsequences.html":{"url":"String Scramble/Distinct Subsequences.html","title":"Distinct Subsequences","keywords":"","body":"Problem\nLintCode 118. Distinct Subsequences\nhttps://www.lintcode.com/problem/distinct-subsequences/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param S: A string\n     * @param T: A string\n     * @return: Count the number of distinct subsequences\n     */\n    int numDistinct(string &S, string &T) {\n        // write your code here\n\n        /**\n         *    0 r a b b b i t\n         *  0 1 1 1 1 1 1 1 1\n         *  r 0 1 1 1 1 1 1 1\n         *  a 0 0 1 1 1 1 1 1\n         *  b 0 0 0 1 2 3 3 3\n         *  b 0 0 0 0 1 3 3 3\n         *  i 0 0 0 0 0 0 3 3\n         *  t 0 0 0 0 0 0 0 3\n         *\n         *  dp[i][j]: The number of distinct ways to form the prefix of T\n         *            ending at the jth position by removing any character\n         *            of the prefix of S ending at the ith position.\n         *\n         *  dp[i][j] = | if S[i] == T[j], dp[i - 1][j - 1] + dp[i - 1][j]\n         *             | otherwise      , dp[i - 1][j]\n         */\n\n        int ns = S.length();\n        int nt = T.length();\n\n        std::vector> dp(ns + 1, std::vector(nt + 1, 0));\n        for (int i = 0 ; i \n"},"String Scramble/Interleaving String.html":{"url":"String Scramble/Interleaving String.html","title":"Interleaving String","keywords":"","body":"Problem\nLintCode 29. Interleaving String\nhttps://www.lintcode.com/problem/interleaving-string/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param s1: A string\n     * @param s2: A string\n     * @param s3: A string\n     * @return: Determine whether s3 is formed by interleaving of s1 and s2\n     */\n    bool isInterleave(string &s1, string &s2, string &s3) {\n        // write your code here\n\n        /**\n         * dp[i][j]: Whether we can form the first (i + j) characters of S3\n         *           by using the first i characters of S1 and the first j\n         *           characters of S2.\n         *\n         * dp[i][j] = (S1[i] == S3[i + j] && dp[i - 1][j]) ||\n         *            (S2[j] == S3[i + j] && dp[i][j - 1])\n         */\n\n        int n1 = s1.length();\n        int n2 = s2.length();\n        int n3 = s3.length();\n\n        if (n1 + n2 != n3) {\n            return false;\n        }\n\n        std::vector> dp(n1 + 1, std::vector(n2 + 1, false));\n        dp[0][0] = true;\n        for (int i = 1 ; i \n"},"String Scramble/Scramble String.html":{"url":"String Scramble/Scramble String.html","title":"Scramble String","keywords":"","body":"Problem\nLintCode 430. Scramble String\nhttps://www.lintcode.com/problem/scramble-string/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param s1: A string\n     * @param s2: Another string\n     * @return: whether s2 is a scrambled string of s1\n     */\n    bool isScramble(string &s1, string &s2) {\n        // write your code here\n\n        /**\n         *   great\n         *   => atgre, eatgr\n         *             => tgrea\n         *\n         *  A scrambled version of a string can be generated by interexchanging\n         *  its prefix and suffix. For example, \"deabc\" is derived from\n         *  interexchaning \"abc\", the prefix, and \"de\", the suffix, of \"abcde\".\n         *\n         *  Given 2 strings, S and T, we can determine if T is a scrambled version\n         *  of S by decompsing these 2 strings into 2 parts respectively and\n         *  checking if these 2 substrings are equal:\n         *\n         *      S = Sp + Ss\n         *      T = Tp + Ts\n         *\n         *      => Sp == Tp && Ss == Ts, scrambled one!\n         *      => Sp == Ts && Ss == Tp, scrambled one!\n         */\n\n\n        if (s1.length() != s2.length()) {\n            return false;\n        }\n\n        std::unordered_map> memo;\n        return canScramble(s1, s2, memo);\n    }\n\n\nprivate:\n    bool canScramble(const auto& s, const auto& t, auto& memo) {\n\n        // Check the cached result first.\n        if (memo.count(s) == 1 && memo[s].count(t) == 1) {\n            return memo[s][t];\n        }\n\n        if (s == t) {\n            memo[s][t] = true;\n            return true;\n        }\n\n        int n = s.length();\n        for (int i = 0 ; i \n"},"Game Theory/Coins in a Line.html":{"url":"Game Theory/Coins in a Line.html","title":"Coins in a Line","keywords":"","body":"Problem\nLintCode 394. Coins in a Line\nhttps://www.lintcode.com/problem/coins-in-a-line/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param n: An integer\n     * @return: A boolean which equals to true if the first player will win\n     */\n    bool firstWillWin(int n) {\n        // write your code here\n\n        /**\n         *  A and B 2 competitors\n         *\n         *  1. If A can push B to step into a losable state, A is winnable.\n         *\n         *  2. No matter how hard A tries, B can always step into a winnable\n         *     state. Then, A is guaranteed to lose the game.\n         *\n         *             4(W)\n         *            / \\\n         *        (L)3   2(W)\n         *          / \\\n         *      (W)2   1(W)\n         *\n         *  dp[i]: Whether a player is going to win the game if there are i\n         *         coins in a line.\n         *\n         *  dp[i] = dp[i - 1] == False || dp[i - 2] == False\n         */\n\n        if (n == 0) {\n            return false;\n        }\n        if (n == 1 || n == 2) {\n            return true;\n        }\n\n        std::vector dp(n + 1, false);\n        dp[1] = true;\n        dp[2] = true;\n\n        for (int i = 3 ; i \n"},"Game Theory/Coins in a Line II.html":{"url":"Game Theory/Coins in a Line II.html","title":"Coins in a Line II","keywords":"","body":"Problem\nLintCode 395. Coins in a Line II\nhttps://www.lintcode.com/problem/coins-in-a-line-ii/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param values: a vector of integers\n     * @return: a boolean which equals to true if the first player will win\n     */\n    bool firstWillWin(vector &values) {\n        // write your code here\n\n        /**\n         *  A and B, 2 competitors\n         *\n         *  Sum(i): The total value of the remained coins covering from the\n         *          ith coin to the last one.\n         *\n         *  Sa: The total value A can aggregate in the current iteration.\n         *  Sb: The total value B can aggregate in the next iteration.\n         *\n         *  When there are (n - i + 1) coins remained, player A has 2 choices.\n         *      1. Pick the ith coin,\n         *          Sa = values[i] + Sum(i + 1) - Sb'.\n         *             = Sum(i) - Sb'.\n         *\n         *      2. Pick the ith and the (i+1)th coin,\n         *          Sa = values[i] + values[i + 1] + Sum(i + 2) - Sb''.\n         *             = Sum(i) - Sb''.\n         *\n         * dp[i]: The maximum value that a person can aggregate when there\n         *        are (n - i + 1) coins left.\n         *\n         * dp[i] = MAX | pick the ith coin                , sum[i] - dp[i + 1]\n         *             | pick the ith and the (i+1)th coin, sum[i] - dp[i + 2]\n         */\n\n        int n = values.size();\n        if (n == 0) {\n            return false;\n        }\n        if (n == 1 || n == 2) {\n            return true;\n        }\n\n        std::vector sum(n, 0);\n        std::vector dp(n, 0);\n\n        sum[n - 1] = values[n - 1];\n        sum[n - 2] = sum[n - 1] + values[n - 2];\n        dp[n - 1] = values[n - 1];\n        dp[n - 2] = dp[n - 1] + values[n - 2];\n\n        for (int i = n - 3 ; i >= 0 ; --i) {\n            sum[i] = sum[i + 1] + values[i];\n\n            // values[i] + (sum[i + 1] - dp[i + 1])\n            int plan_a = sum[i] - dp[i + 1];\n\n            // values[i] + values[i + 1] + (sum[i + 2) - dp[i + 2])\n            int plan_b = sum[i] - dp[i + 2];\n\n            dp[i] = std::max(plan_a, plan_b);\n        }\n\n        return dp[0] * 2 > sum[0];\n    }\n};\n\n"},"Game Theory/Coins in a Line III.html":{"url":"Game Theory/Coins in a Line III.html","title":"Coins in a Line III","keywords":"","body":"Problem\nLintCode 396. Coins in a Line III\nhttps://www.lintcode.com/problem/coins-in-a-line-iii/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param values: a vector of integers\n     * @return: a boolean which equals to true if the first player will win\n     */\n    bool firstWillWin(vector &values) {\n        // write your code here\n\n        /**\n         *  A and B, 2 competitors\n         *\n         *  Sum(i, j): The total value of the remained coins covering from the\n         *             ith coin to the jth one.\n         *\n         *  Sa: The total value A can aggregate in the current iteration.\n         *  Sb: The total value B can aggregate in the next iteration.\n         *\n         *  When there are (j - i + 1) coins remained, player A has 2 choices.\n         *      1. Pick the ith coin,\n         *          Sa = values[i] + Sum(i + 1, j) - Sb'.\n         *             = Sum(i, j) - Sb'.\n         *\n         *      2. Pick the jth coin,\n         *          Sa = values[j] + Sum(i, j - 1) - Sb''.\n         *             = Sum(i, j) - Sb''.\n         *\n         * dp[i][j]: The maximum value that a person can aggregate when there\n         *           are (j - i + 1) coins left.\n         *\n         * dp[i][j] = MAX | pick the ith coin, sum[i][j] - dp[i + 1][j]\n         *                | pick the jth coin, sum[i][j] - dp[i][j - 1]\n         */\n\n        int n = values.size();\n        if (n == 0) {\n            return false;\n        }\n        if (n == 1) {\n            return true;\n        }\n\n        std::vector> sum(n, std::vector(n, 0));\n        std::vector> dp(n, std::vector(n, 0));\n\n        for (int i = 0 ; i  sum[0][n - 1];\n    }\n};\n\n"},"Iterator/Binary Tree Iterative Preorder Traversal.html":{"url":"Iterator/Binary Tree Iterative Preorder Traversal.html","title":"Binary Tree Iterative Preorder Traversal","keywords":"","body":"Problem\nLintCode 66. Binary Tree Preorder Traversal\nhttps://www.lintcode.com/problem/binary-tree-preorder-traversal/description\nSolution\n/**\n * Definition of TreeNode:\n * class TreeNode {\n * public:\n *     int val;\n *     TreeNode *left, *right;\n *     TreeNode(int val) {\n *         this->val = val;\n *         this->left = this->right = NULL;\n *     }\n * }\n */\n\nclass Solution {\npublic:\n    /**\n     * @param root: A Tree\n     * @return: Preorder in ArrayList which contains node values.\n     */\n    vector preorderTraversal(TreeNode * root) {\n        // write your code here\n\n        if (!root) {\n            return {};\n        }\n\n        std::vector ans;\n        std::stack stk;\n        stk.push(root);\n\n        while (!stk.empty()) {\n\n            auto curr = stk.top();\n            stk.pop();\n\n            ans.push_back(curr->val);\n\n            if (curr->right) {\n                stk.push(curr->right);\n            }\n            if (curr->left) {\n                stk.push(curr->left);\n            }\n        }\n\n        return ans;\n    }\n};\n\n"},"Iterator/Binary Tree Iterative Inorder Traversal.html":{"url":"Iterator/Binary Tree Iterative Inorder Traversal.html","title":"Binary Tree Iterative Inorder Traversal","keywords":"","body":"Problem\nLintCode 67. Binary Tree Inorder Traversal\nhttps://www.lintcode.com/problem/binary-tree-inorder-traversal/description\nSolution\n/**\n * Definition of TreeNode:\n * class TreeNode {\n * public:\n *     int val;\n *     TreeNode *left, *right;\n *     TreeNode(int val) {\n *         this->val = val;\n *         this->left = this->right = NULL;\n *     }\n * }\n */\n\nclass Solution {\npublic:\n    /**\n     * @param root: A Tree\n     * @return: Inorder in ArrayList which contains node values.\n     */\n    vector inorderTraversal(TreeNode * root) {\n        // write your code here\n\n        if (!root) {\n            return {};\n        }\n\n        std::vector ans;\n        std::stack stk;\n\n        auto curr = root;\n        while (curr) {\n            stk.push(curr);\n            curr = curr->left;\n        }\n\n        while (!stk.empty()) {\n\n            auto curr = stk.top();\n            stk.pop();\n\n            ans.push_back(curr->val);\n\n            curr = curr->right;\n            while (curr) {\n                stk.push(curr);\n                curr = curr->left;\n            }\n        }\n\n        return ans;\n    }\n};\n\n"},"Iterator/Binary Tree Iterative Postorder Traversal.html":{"url":"Iterator/Binary Tree Iterative Postorder Traversal.html","title":"Binary Tree Iterative Postorder Traversal","keywords":"","body":"Problem\nLintCode 68. Binary Tree Postorder Traversal\nhttps://www.lintcode.com/problem/binary-tree-postorder-traversal/description\nSolution\n/**\n * Definition of TreeNode:\n * class TreeNode {\n * public:\n *     int val;\n *     TreeNode *left, *right;\n *     TreeNode(int val) {\n *         this->val = val;\n *         this->left = this->right = NULL;\n *     }\n * }\n */\n\nclass Solution {\npublic:\n    /**\n     * @param root: A Tree\n     * @return: Postorder in ArrayList which contains node values.\n     */\n    vector postorderTraversal(TreeNode * root) {\n        // write your code here\n\n        if (!root) {\n            return {};\n        }\n\n        std::vector ans;\n        std::stack stk;\n        findSuccessor(root, stk);\n\n        while (!stk.empty()) {\n\n            auto curr = stk.top();\n            stk.pop();\n\n            ans.push_back(curr->val);\n\n            if (!stk.empty()) {\n                if (stk.top()->left == curr) {\n                    findSuccessor(stk.top()->right, stk);\n                }\n            }\n        }\n\n        return ans;\n    }\n\nprivate:\n    void findSuccessor(TreeNode* root, std::stack& stk) {\n\n        while (root) {\n            stk.push(root);\n\n            if (root->left) {\n                root = root->left;\n            } else {\n                root = root->right;\n            }\n        }\n    }\n};\n\n"},"Iterator/Flatten Binary Tree to Linked List.html":{"url":"Iterator/Flatten Binary Tree to Linked List.html","title":"Flatten Binary Tree to Linked List","keywords":"","body":"Problem\nLintCode 453. Flatten Binary Tree to Linked List\nhttps://www.lintcode.com/problem/flatten-binary-tree-to-linked-list/\nSolution\n/**\n * Definition of TreeNode:\n * class TreeNode {\n * public:\n *     int val;\n *     TreeNode *left, *right;\n *     TreeNode(int val) {\n *         this->val = val;\n *         this->left = this->right = NULL;\n *     }\n * }\n */\n\nclass Solution {\npublic:\n    /**\n     * @param root: a TreeNode, the root of the binary tree\n     * @return: nothing\n     */\n    void flatten(TreeNode * root) {\n        // write your code here\n\n        /**\n         *  case 1: no child\n         *\n         *      a\n         *\n         *  case 2: Has a left child\n         *\n         *      a    a\n         *     /  =>  \\\n         *    b        b  Return b as the last node.\n         *\n         *\n         *  case 3: Has a right child\n         *\n         *    a      a\n         *     \\  =>  \\\n         *      b      b  Return b as the last node.\n         *\n         *\n         *  case 4: Has two children\n         *\n         *     a         a      a\n         *    / \\   =>  /   =>   \\\n         *   b   c     b          b\n         *              \\          \\\n         *               c          c  Return c as the last node.\n         *\n         *\n         *  Demo:\n         *\n         *      1             1          1              1       1\n         *     / \\           / \\        / \\            /         \\\n         *    2   5    =>   2   5  =>  2   5      =>  2     =>    2\n         *   / \\   \\       /     \\      \\   \\          \\           \\\n         *  3*  4*  6     3       6*     3   6*         3           3\n         *                 \\              \\              \\           \\\n         *                  4*             4*             4           4\n         *                                                 \\           \\\n         *                                                  5           5\n         *                                                   \\           \\\n         *                                                    6           6*\n         */\n\n         runPostOrder(root);\n    }\n\nprivate:\n    TreeNode* runPostOrder(TreeNode* root) {\n\n        if (!root) {\n            return nullptr;\n        }\n\n        auto last_l = runPostOrder(root->left);\n        auto last_r = runPostOrder(root->right);\n\n        if (last_l) {\n            last_l->right = root->right;\n            root->right = root->left;\n            root->left = nullptr;\n        }\n\n        if (last_r) {\n            return last_r;\n        }\n\n        if (last_l) {\n            return last_l;\n        }\n\n        return root;\n    }\n};\n\n"},"Iterator/Flatten Nested List.html":{"url":"Iterator/Flatten Nested List.html","title":"Flatten Nested List","keywords":"","body":"Problem\nLintCode 22. Flatten List\nhttps://www.lintcode.com/problem/flatten-list/description\nSolution\n/**\n * // This is the interface that allows for creating nested lists.\n * // You should not implement it, or speculate about its implementation\n * class NestedInteger {\n *   public:\n *     // Return true if this NestedInteger holds a single integer,\n *     // rather than a nested list.\n *     bool isInteger() const;\n *\n *     // Return the single integer that this NestedInteger holds,\n *     // if it holds a single integer\n *     // The result is undefined if this NestedInteger holds a nested list\n *     int getInteger() const;\n *\n *     // Return the nested list that this NestedInteger holds,\n *     // if it holds a nested list\n *     // The result is undefined if this NestedInteger holds a single integer\n *     const vector &getList() const;\n * };\n */\nclass Solution {\npublic:\n    // @param nestedList a list of NestedInteger\n    // @return a list of integer\n    vector flatten(vector &nestedList) {\n        // Write your code here\n\n        std::vector ans;\n\n        std::stack::iterator,\n                std::vector::iterator>> stk;\n\n        if (!nestedList.empty()) {\n            stk.push(std::make_pair(nestedList.begin(), nestedList.end()));\n        }\n\n        while (!stk.empty()) {\n\n            auto top = stk.top();\n            stk.pop();\n\n            auto& bgn = top.first;\n            auto& end = top.second;\n\n            while (bgn != end) {\n                if (bgn->isInteger()) {\n                    ans.push_back(bgn->getInteger());\n                    ++bgn;\n                } else {\n                    auto& list =\n                        const_cast&>(bgn->getList());\n\n                    ++bgn;\n                    if (bgn != end) {\n                        stk.push(std::make_pair(bgn, end));\n                    }\n\n                    if (!list.empty()) {\n                        stk.push(std::make_pair(list.begin(), list.end()));\n                    }\n                    break;\n                }\n            }\n        }\n\n        return ans;\n    }\n};\n\n"},"Iterator/Flatten Nested List Iterator.html":{"url":"Iterator/Flatten Nested List Iterator.html","title":"Flatten Nested List Iterator","keywords":"","body":"Problem\nLintCode 528. Flatten Nested List Iterator\nhttps://www.lintcode.com/problem/flatten-nested-list-iterator/description\nSolution\n/**\n * // This is the interface that allows for creating nested lists.\n * // You should not implement it, or speculate about its implementation\n * class NestedInteger {\n *   public:\n *     // Return true if this NestedInteger holds a single integer,\n *     // rather than a nested list.\n *     bool isInteger() const;\n *\n *     // Return the single integer that this NestedInteger holds,\n *     // if it holds a single integer\n *     // The result is undefined if this NestedInteger holds a nested list\n *     int getInteger() const;\n *\n *     // Return the nested list that this NestedInteger holds,\n *     // if it holds a nested list\n *     // The result is undefined if this NestedInteger holds a single integer\n *     const vector &getList() const;\n * };\n */\nclass NestedIterator {\npublic:\n    NestedIterator(vector &nestedList) {\n        // Initialize your data structure here.\n\n        if (!nestedList.empty()) {\n            stk.push(std::make_pair(nestedList.begin(), nestedList.end()));\n        }\n    }\n\n    // @return {int} the next element in the iteration\n    int next() {\n        // Write your code here\n\n        return cache;\n    }\n\n    // @return {boolean} true if the iteration has more element or false\n    bool hasNext() {\n        // Write your code here\n\n        while (!stk.empty()) {\n\n            auto top = stk.top();\n            stk.pop();\n            auto& bgn = top.first;\n            auto& end = top.second;\n\n            if (bgn->isInteger()) {\n                cache = bgn->getInteger();\n\n                ++bgn;\n                if (bgn != end) {\n                    stk.push(std::make_pair(bgn, end));\n                }\n\n                return true;\n            }\n\n            auto& list =\n                const_cast&>(bgn->getList());\n\n            ++bgn;\n            if (bgn != end) {\n                stk.push(std::make_pair(bgn, end));\n            }\n\n            if (!list.empty()) {\n                stk.push(std::make_pair(list.begin(), list.end()));\n            }\n        }\n\n        return false;\n    }\n\nprivate:\n    std::stack::iterator,\n            std::vector::iterator>> stk;\n    int cache;\n};\n\n/**\n * Your NestedIterator object will be instantiated and called as such:\n * NestedIterator i(nestedList);\n * while (i.hasNext()) v.push_back(i.next());\n */\n\n"},"Iterator/Flatten 2D Vector.html":{"url":"Iterator/Flatten 2D Vector.html","title":"Flatten 2D Vector","keywords":"","body":"Problem\nLintCode 601. Flatten 2D Vector\nhttps://www.lintcode.com/problem/flatten-2d-vector/description\nSolution\nclass Vector2D {\npublic:\n    Vector2D(vector>& vec2d)\n        : total_row(vec2d.size()), index_row(0), total_col(0), index_col(0),\n          vec2d(vec2d) {\n        // Initialize your data structure here\n\n        if (index_row > vec2d;\n\n    int cache;\n};\n\n/**\n * Your Vector2D object will be instantiated and called as such:\n * Vector2D i(vec2d);\n * while (i.hasNext()) cout \n"},"Iterator/ZigZag Iterator.html":{"url":"Iterator/ZigZag Iterator.html","title":"ZigZag Iterator","keywords":"","body":"Problem\nLintCode 540. ZigZag Iterator\nhttps://www.lintcode.com/problem/zigzag-iterator/description\nSolution\nclass ZigzagIterator {\npublic:\n    /*\n    * @param v1: A 1d vector\n    * @param v2: A 1d vector\n    */ZigzagIterator(vector& v1, vector& v2)\n      : bgn_first(v1.begin()),\n        bgn_second(v2.begin()),\n        end_first(v1.end()),\n        end_second(v2.end()),\n        turn(Turn::FIRST) {\n        // do intialization if necessary\n    }\n\n    /*\n     * @return: An integer\n     */\n    int next() {\n        // write your code here\n\n        return cache;\n    }\n\n    /*\n     * @return: True if has next\n     */\n    bool hasNext() {\n        // write your code here\n\n        if (bgn_first != end_first && bgn_second != end_second) {\n            if (turn == Turn::FIRST) {\n                cache = *bgn_first;\n                ++bgn_first;\n                turn = Turn::SECOND;\n            } else {\n                cache = *bgn_second;\n                ++bgn_second;\n                turn = Turn::FIRST;\n            }\n            return true;\n        }\n\n        if (bgn_first != end_first) {\n            cache = *bgn_first;\n            ++bgn_first;\n            return true;\n        }\n\n        if (bgn_second != end_second) {\n            cache = *bgn_second;\n            ++bgn_second;\n            return true;\n        }\n\n        return false;\n    }\n\nprivate:\n    std::vector::iterator bgn_first, bgn_second, end_first, end_second;\n    char turn;\n    int cache;\n\n    enum Turn {\n        FIRST,\n        SECOND\n    };\n};\n\n/**\n * Your ZigzagIterator object will be instantiated and called as such:\n * ZigzagIterator solution(v1, v2);\n * while (solution.hasNext()) result.push_back(solution.next());\n * Ouptut result\n */\n\n"},"Iterator/ZigZag Iterator II.html":{"url":"Iterator/ZigZag Iterator II.html","title":"ZigZag Iterator II","keywords":"","body":"Problem\nLintCode 541. ZigZag Iterator II\nhttps://www.lintcode.com/problem/zigzag-iterator-ii/description\nSolution\nclass ZigzagIterator2 {\npublic:\n    /*\n    * @param vecs: a list of 1d vectors\n    */ZigzagIterator2(vector>& vecs)\n      : turn(0),\n        total(0),\n        vecs(vecs) {\n        // do intialization if necessary\n\n        for (auto& vec : vecs) {\n            if (!vec.empty()) {\n                bgns.push_back(vec.begin());\n                ends.push_back(vec.end());\n                ++total;\n            }\n        }\n    }\n\n    /*\n     * @return: An integer\n     */\n    int next() {\n        // write your code here\n\n        int elem = *bgns[turn];\n        ++bgns[turn];\n\n        if (bgns[turn] == ends[turn]) {\n            bgns.erase(bgns.begin() + turn);\n            ends.erase(ends.begin() + turn);\n\n            --total;\n            if (total > 0) {\n                turn = turn % total;\n            }\n        } else {\n            turn = (turn + 1) % total;\n        }\n\n        return elem;\n    }\n\n    /*\n     * @return: True if has next\n     */\n    bool hasNext() {\n        // write your code here\n\n        return total > 0;\n    }\n\nprivate:\n    int turn, total;\n\n    std::vector::iterator> bgns;\n    std::vector::iterator> ends;\n\n    std::vector> vecs;\n};\n\n/**\n * Your ZigzagIterator2 object will be instantiated and called as such:\n * ZigzagIterator2 solution(vecs);\n * while (solution.hasNext()) result.push_back(solution.next());\n * Ouptut result\n */\n\n\nclass ZigzagIterator2 {\npublic:\n    /*\n    * @param vecs: a list of 1d vectors\n    */ZigzagIterator2(vector>& vecs)\n      : total(0), turn(0) {\n        // do intialization if necessary\n\n        for (auto& vec : vecs) {\n            if (!vec.empty()) {\n                bgns.emplace_back(vec.begin());\n                ends.emplace_back(vec.end());\n                ++total;\n            }\n        }\n    }\n\n    /*\n     * @return: An integer\n     */\n    int next() {\n        // write your code here\n\n        return cache;\n    }\n\n    /*\n     * @return: True if has next\n     */\n    bool hasNext() {\n        // write your code here\n\n        if (total == 0) {\n            return false;\n        }\n\n        cache = *bgns[turn];\n        ++bgns[turn];\n\n        if (bgns[turn] == ends[turn]) {\n            bgns.erase(bgns.begin() + turn);\n            ends.erase(ends.begin() + turn);\n\n            --total;\n            if (total > 0) {\n                turn = turn % total;\n            }\n        } else {\n            turn = (turn + 1) % total;\n        }\n\n        return true;\n    }\n\nprivate:\n    std::vector::iterator> bgns;\n    std::vector::iterator> ends;\n\n    int total;\n    int turn;\n\n    int cache;\n};\n\n/**\n * Your ZigzagIterator2 object will be instantiated and called as such:\n * ZigzagIterator2 solution(vecs);\n * while (solution.hasNext()) result.push_back(solution.next());\n * Ouptut result\n */\n\n"},"Iterator/Nested List Weight Sum.html":{"url":"Iterator/Nested List Weight Sum.html","title":"Nested List Weight Sum","keywords":"","body":"Problem\nLintCode 551. Nested List Weight Sum\nhttps://www.lintcode.com/problem/nested-list-weight-sum/description\nSolution\n/**\n * // This is the interface that allows for creating nested lists.\n * // You should not implement it, or speculate about its implementation\n * class NestedInteger {\n *   public:\n *     // Return true if this NestedInteger holds a single integer,\n *     // rather than a nested list.\n *     bool isInteger() const;\n *\n *     // Return the single integer that this NestedInteger holds,\n *     // if it holds a single integer\n *     // The result is undefined if this NestedInteger holds a nested list\n *     int getInteger() const;\n *\n *     // Return the nested list that this NestedInteger holds,\n *     // if it holds a nested list\n *     // The result is undefined if this NestedInteger holds a single integer\n *     const vector &getList() const;\n * };\n */\n\nstruct Record {\n\n    int depth;\n    std::vector::iterator bgn, end;\n\n    Record(int depth,\n            std::vector::iterator&& bgn,\n            std::vector::iterator&& end)\n      : depth(depth), bgn(bgn), end(end)\n    { }\n};\n\n\nclass Solution {\npublic:\n    int depthSum(const vector& nestedList) {\n        // Write your code here\n\n        int sum = 0;\n\n        std::stack stk;\n        auto& input = const_cast&>(nestedList);\n        stk.push(Record(1, input.begin(), input.end()));\n\n        while (!stk.empty()) {\n\n            auto top = stk.top();\n            stk.pop();\n\n            auto& bgn = top.bgn;\n            auto& end = top.end;\n            int depth = top.depth;\n\n            while (bgn != end) {\n                if (bgn->isInteger()) {\n                    sum += bgn->getInteger() * depth;\n                    ++bgn;\n                } else {\n                    auto& list =\n                        const_cast&>(bgn->getList());\n\n                    ++bgn;\n                    if (bgn != end) {\n                        stk.push(Record(depth, std::move(bgn), std::move(end)));\n                    }\n\n                    if (!list.empty()) {\n                        stk.push(Record(depth + 1, list.begin(), list.end()));\n                    }\n\n                    break;\n                }\n            }\n        }\n\n        return sum;\n    }\n};\n\n"},"Iterator/Nested List Weight Sum II.html":{"url":"Iterator/Nested List Weight Sum II.html","title":"Nested List Weight Sum II","keywords":"","body":"Problem\nLintCode 905. Nested List Weight Sum II\nhttps://www.lintcode.com/problem/nested-list-weight-sum-ii/description\nSolution\n\n\nstruct Record {\n\n    int depth;\n    std::vector::iterator bgn, end;\n\n    Record(int depth, auto&& bgn, auto&& end)\n      : depth(depth), bgn(bgn), end(end)\n    { }\n};\n\n\nstruct Element {\n    int num, weight;\n\n    Element(int num, int weight)\n      : num(num), weight(weight)\n    { }\n};\n\n\nclass Solution {\npublic:\n    /**\n     * @param nestedList: a list of NestedInteger\n     * @return: the sum\n     */\n    int depthSumInverse(vector nestedList) {\n        // Write your code here.\n\n        /**\n         *  [[1, 1], 2, [1, 1]]\n         *\n         *  [1, 2], [1, 2], [2, 1], [1, 2], [1, 2]\n         *\n         *  => adjusted weight = maximum depth - original weight + 1\n         *\n         *  [1, 1], [1, 1], [2, 2], [1, 1], [1, 1]\n         *\n         *  => generate the final sum\n         */\n\n        if (nestedList.empty()) {\n            return 0;\n        }\n\n        std::stack stk;\n        stk.push(Record(1, nestedList.begin(), nestedList.end()));\n\n        int max_depth = 0;\n        std::vector cache;\n\n        while (!stk.empty()) {\n\n            auto top = stk.top();\n            stk.pop();\n\n            int depth = top.depth;\n            max_depth = std::max(max_depth, depth);\n\n            auto& bgn = top.bgn;\n            auto& end = top.end;\n\n            while (bgn != end) {\n\n                if (bgn->isInteger()) {\n                    cache.emplace_back(bgn->getInteger(), depth);\n                    ++bgn;\n                } else {\n                    auto& list =\n                        const_cast&>(bgn->getList());\n\n                    ++bgn;\n                    if (bgn != end) {\n                        stk.push(Record(depth, std::move(bgn), std::move(end)));\n                    }\n\n                    if (!list.empty()) {\n                        stk.push(Record(depth + 1, list.begin(), list.end()));\n                    }\n\n                    break;\n                }\n            }\n        }\n\n        int sum = 0;\n        for (auto& elem : cache) {\n            sum += elem.num * (max_depth - elem.weight + 1);\n        }\n\n        return sum;\n    }\n};\n\n"},"Binary Tree/Valid Binary Search Tree.html":{"url":"Binary Tree/Valid Binary Search Tree.html","title":"Valid Binary Search Tree","keywords":"","body":"Problem\nLintCode 95. Valid Binary Search Tree\nhttps://www.lintcode.com/problem/validate-binary-search-tree/description\nSolution\n/**\n * Definition of TreeNode:\n * class TreeNode {\n * public:\n *     int val;\n *     TreeNode *left, *right;\n *     TreeNode(int val) {\n *         this->val = val;\n *         this->left = this->right = NULL;\n *     }\n * }\n */\n\nstruct Result {\n    int max;\n    int min;\n    bool is_bst;\n\n    Result(bool is_bst)\n        : max(std::numeric_limits::min()),\n          min(std::numeric_limits::max()),\n          is_bst(is_bst)\n    { }\n\n    Result(int max, int min, bool is_bst)\n        : max(max), min(min), is_bst(is_bst)\n    { }\n};\n\n\nclass Solution {\npublic:\n    /**\n     * @param root: The root of binary tree.\n     * @return: True if the binary tree is BST, or false\n     */\n    bool isValidBST(TreeNode * root) {\n        // write your code here\n\n        auto result = runPostOrder(root);\n        return result.is_bst;\n    }\n\nprivate:\n    Result runPostOrder(TreeNode* root) {\n\n        if (!root) {\n            return Result(true);\n        }\n\n        if (!root->left && !root->right) {\n            return Result(root->val, root->val, true);\n        }\n\n        auto l = runPostOrder(root->left);\n        auto r = runPostOrder(root->right);\n\n        if (!l.is_bst || !r.is_bst) {\n            return Result(false);\n        }\n\n        if (!root->left && root->val val, true);\n        }\n\n        if (!root->right && root->val > l.max) {\n            return Result(root->val, l.min, true);\n        }\n\n        if (root->val > l.max && root->val \n"},"Binary Tree/Balanced Binary Tree.html":{"url":"Binary Tree/Balanced Binary Tree.html","title":"Balanced Binary Tree","keywords":"","body":"Problem\nLintCode 95. Balanced Binary Tree\nhttps://www.lintcode.com/problem/balanced-binary-tree/description\nSolution\n/**\n * Definition of TreeNode:\n * class TreeNode {\n * public:\n *     int val;\n *     TreeNode *left, *right;\n *     TreeNode(int val) {\n *         this->val = val;\n *         this->left = this->right = NULL;\n *     }\n * }\n */\n\nstruct Record {\n    bool balanced;\n    int height;\n\n    Record(bool balanced, int height)\n      : balanced(balanced), height(height)\n    { }\n};\n\n\nclass Solution {\npublic:\n    /**\n     * @param root: The root of binary tree.\n     * @return: True if this Binary tree is Balanced, or false.\n     */\n    bool isBalanced(TreeNode * root) {\n        // write your code here\n\n        auto res = runPostOrder(root);\n        return res.balanced;\n    }\n\nprivate:\n    Record runPostOrder(TreeNode* root) {\n\n        if (!root) {\n            return Record(true, 0);\n        }\n\n        if (!root->left && !root->right) {\n            return Record(true, 1);\n        }\n\n        auto l = runPostOrder(root->left);\n        auto r = runPostOrder(root->right);\n\n        if (!l.balanced || !r.balanced) {\n            return Record(false, -1);\n        }\n\n        int diff = std::abs(l.height - r.height);\n        if (diff > 1) {\n            return Record(false, -1);\n        }\n\n        return Record(true, std::max(l.height, r.height) + 1);\n    }\n};\n\n"},"Binary Tree/Complete Binary Tree.html":{"url":"Binary Tree/Complete Binary Tree.html","title":"Complete Binary Tree","keywords":"","body":"Problem\nLeetCode 958. Check Completeness of a Binary Tree\nhttps://leetcode.com/problems/check-completeness-of-a-binary-tree/\nSolution\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\n\nstruct Record {\n    TreeNode* node;\n    int label;\n\n    Record(TreeNode* node, int label)\n      : node(node), label(label)\n    { }\n};\n\n\nclass Solution {\npublic:\n    bool isCompleteTree(TreeNode* root) {\n\n        // Level Order Traversal + Label Counter\n\n        if (!root) {\n            return true;\n        }\n\n        int count = 0;\n        std::queue queue;\n        queue.push(Record(root, 1));\n\n        while (!queue.empty()) {\n\n            int size = queue.size();\n            for (int i = 0 ; i left) {\n                    queue.push(Record(node->left, label * 2));\n                }\n                if (node->right) {\n                    queue.push(Record(node->right, label * 2 + 1));\n                }\n            }\n        }\n\n        return true;\n    }\n};\n\n"},"Binary Tree/Maximum Width of Binary Tree.html":{"url":"Binary Tree/Maximum Width of Binary Tree.html","title":"Maximum Width of Binary Tree","keywords":"","body":"Problem\nLintCode 1101. Maximum Width of Binary Tree\nhttps://www.lintcode.com/problem/maximum-width-of-binary-tree/description\nSolution\n/**\n * Definition of TreeNode:\n * class TreeNode {\n * public:\n *     int val;\n *     TreeNode *left, *right;\n *     TreeNode(int val) {\n *         this->val = val;\n *         this->left = this->right = NULL;\n *     }\n * }\n */\n\n\nstruct Record {\n    TreeNode* node;\n    int label;\n\n    Record(TreeNode* node, int label)\n      : node(node), label(label)\n    { }\n};\n\n\nclass Solution {\npublic:\n    /**\n     * @param root: the root\n     * @return: the maximum width of the given tree\n     */\n    int widthOfBinaryTree(TreeNode * root) {\n        // Write your code here\n\n        // Level Order Traversal + Tree Label\n\n        if (!root) {\n            return 0;\n        }\n\n        int width = 0;\n\n        std::queue queue;\n        queue.push(Record(root, 1));\n\n        while (!queue.empty()) {\n\n            int max = INT_MIN;\n            int min = INT_MAX;\n            int size = queue.size();\n\n            for (int i = 0 ; i left) {\n                    queue.push(Record(node->left, label * 2));\n                }\n                if (node->right) {\n                    queue.push(Record(node->right, label * 2 + 1));\n                }\n            }\n\n            width = std::max(width, max - min + 1);\n        }\n\n        return width;\n    }\n};\n\n"},"Binary Tree/Diameter of Binary Tree.html":{"url":"Binary Tree/Diameter of Binary Tree.html","title":"Diameter of Binary Tree","keywords":"","body":"Problem\nLintCode 1181. Diameter of Binary Tree\nhttps://www.lintcode.com/problem/diameter-of-binary-tree/description\nSolution\n/**\n * Definition of TreeNode:\n * class TreeNode {\n * public:\n *     int val;\n *     TreeNode *left, *right;\n *     TreeNode(int val) {\n *         this->val = val;\n *         this->left = this->right = NULL;\n *     }\n * }\n */\n\nclass Solution {\npublic:\n    /**\n     * @param root: a root of binary tree\n     * @return: return a integer\n     */\n    int diameterOfBinaryTree(TreeNode * root) {\n        // write your code here\n\n        /**\n         *  Postorder Traversal + Divide and Conquer\n         *\n         *  To get the diameter of the subtree rooted by a node R, we can divide\n         *  the diamter into 2 segments, each of which can be calculated from\n         *  either the left branch or the right branch of R. Then, we merge\n         *  these 2 segments to form the diameter. Please note that the segment\n         *  is essentially the maximum depth of a tree. Therefore, we collect\n         *  the maximum depths from both branches and combine them to form\n         *  a diameter path.\n         */\n\n        int ans = std::numeric_limits::min();\n        runPostOrder(root, ans);\n\n        return ans;\n    }\n\nprivate:\n    int runPostOrder(TreeNode* root, int& ans) {\n\n        if (!root) {\n            return 0;\n        }\n        if (!root->left && !root->right) {\n            return 1;\n        }\n\n        int l = runPostOrder(root->left, ans);\n        int r = runPostOrder(root->right, ans);\n\n        ans = std::max(ans, r + l);\n\n        return std::max(l, r) + 1;\n    }\n};\n\n"},"Binary Tree/Minimum Depth of Binary Tree.html":{"url":"Binary Tree/Minimum Depth of Binary Tree.html","title":"Minimum Depth of Binary Tree","keywords":"","body":"Problem\nLintCode 155. Minimum Depth of Binary Tree\nhttps://www.lintcode.com/problem/minimum-depth-of-binary-tree/description\nSolution\n/**\n * Definition of TreeNode:\n * class TreeNode {\n * public:\n *     int val;\n *     TreeNode *left, *right;\n *     TreeNode(int val) {\n *         this->val = val;\n *         this->left = this->right = NULL;\n *     }\n * }\n */\n\nclass Solution {\npublic:\n    /**\n     * @param root: The root of binary tree\n     * @return: An integer\n     */\n    int minDepth(TreeNode * root) {\n        // write your code here\n\n        // Preorder Traversal + Height Comparison\n\n        if (!root) {\n            return 0;\n        }\n\n        int ans = std::numeric_limits::max();\n        runPreOrder(root, 1, ans);\n\n        return ans;\n    }\n\nprivate:\n    void runPreOrder(TreeNode* root, int h, int& ans) {\n\n        if (!root->left && !root->right) {\n            ans = std::min(h, ans);\n            return;\n        }\n\n        if (root->left) {\n            runPreOrder(root->left, h + 1, ans);\n        }\n        if (root->right) {\n            runPreOrder(root->right, h + 1, ans);\n        }\n    }\n};\n\n"},"Binary Tree/Maximum Depth of Binary Tree.html":{"url":"Binary Tree/Maximum Depth of Binary Tree.html","title":"Maximum Depth of Binary Tree","keywords":"","body":"Problem\nLintCode 97. Maximum Depth of Binary Tree\nhttps://www.lintcode.com/problem/maximum-depth-of-binary-tree/description\nSolution\n/**\n * Definition of TreeNode:\n * class TreeNode {\n * public:\n *     int val;\n *     TreeNode *left, *right;\n *     TreeNode(int val) {\n *         this->val = val;\n *         this->left = this->right = NULL;\n *     }\n * }\n */\n\nclass Solution {\npublic:\n    /**\n     * @param root: The root of binary tree.\n     * @return: An integer\n     */\n    int maxDepth(TreeNode * root) {\n        // write your code here\n\n        // Preorder Traversal + Height Comparison\n\n        if (!root) {\n            return 0;\n        }\n\n        int ans = std::numeric_limits::min();\n        runPreOrder(root, 1, ans);\n\n        return ans;\n    }\n\nprivate:\n    void runPreOrder(TreeNode* root, int h, int& ans) {\n\n        if (!root->left && !root->right) {\n            ans = std::max(ans, h);\n        }\n\n        if (root->left) {\n            runPreOrder(root->left, h + 1, ans);\n        }\n        if (root->right) {\n            runPreOrder(root->right, h + 1, ans);\n        }\n    }\n};\n\n"},"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html":{"url":"Binary Tree/Lowest Common Ancestor of a Binary Search Tree.html","title":"Lowest Common Ancestor of a Binary Search Tree","keywords":"","body":"Problem\nLintCode 1311. Lowest Common Ancestor of a Binary Search Tree\nhttps://www.lintcode.com/problem/lowest-common-ancestor-of-a-binary-search-tree/description\nSolution\n/**\n * Definition of TreeNode:\n * class TreeNode {\n * public:\n *     int val;\n *     TreeNode *left, *right;\n *     TreeNode(int val) {\n *         this->val = val;\n *         this->left = this->right = NULL;\n *     }\n * }\n */\n\nclass Solution {\npublic:\n    /**\n     * @param root: root of the tree\n     * @param p: the node p\n     * @param q: the node q\n     * @return: find the LCA of p and q\n     */\n    TreeNode * lowestCommonAncestor(TreeNode * root, TreeNode * p, TreeNode * q) {\n        // write your code here\n\n        if (root->val > p->val && root->val > q->val) {\n            return lowestCommonAncestor(root->left, p, q);\n        }\n        if (root->val val && root->val val) {\n            return lowestCommonAncestor(root->right, p, q);\n        }\n\n        return root;\n    }\n};\n\n"},"Binary Tree/Lowest Common Ancestor of a Binary Tree.html":{"url":"Binary Tree/Lowest Common Ancestor of a Binary Tree.html","title":"Lowest Common Ancestor of a Binary Tree","keywords":"","body":"Problem\nLintCode 88. Lowest Common Ancestor of a Binary Tree\nhttps://www.lintcode.com/problem/lowest-common-ancestor-of-a-binary-tree/description\nSolution\n/**\n * Definition of TreeNode:\n * class TreeNode {\n * public:\n *     int val;\n *     TreeNode *left, *right;\n *     TreeNode(int val) {\n *         this->val = val;\n *         this->left = this->right = NULL;\n *     }\n * }\n */\n\n\nclass Solution {\npublic:\n    /*\n     * @param root: The root of the binary search tree.\n     * @param A: A TreeNode in a Binary.\n     * @param B: A TreeNode in a Binary.\n     * @return: Return the least common ancestor(LCA) of the two nodes.\n     */\n    TreeNode * lowestCommonAncestor(TreeNode * root, TreeNode * A, TreeNode * B) {\n        // write your code here\n\n        /**\n         *  Postorder Traversal\n         *  Note that this solution only works when A and B can be found.\n         */\n\n        if (!root) {\n            return nullptr;\n        }\n\n        if (root == A || root == B) {\n            return root;\n        }\n\n        auto l = lowestCommonAncestor(root->left, A, B);\n        auto r = lowestCommonAncestor(root->right, A, B);\n\n        if (l && r) {\n            return root;\n        }\n\n        if (l) {\n            return l;\n        }\n\n        if (r) {\n            return r;\n        }\n    }\n};\n\n"},"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html":{"url":"Binary Tree/Lowest Common Ancestor of a Binary Tree II.html","title":"Lowest Common Ancestor of a Binary Tree II","keywords":"","body":"Problem\nLintCode 474. Lowest Common Ancestor of a Binary Tree II\nhttps://www.lintcode.com/problem/lowest-common-ancestor-ii/description\nSolution\n/**\n * Definition of ParentTreeNode:\n * class ParentTreeNode {\n * public:\n *     int val;\n *     ParentTreeNode *parent, *left, *right;\n * }\n */\n\n\nclass Solution {\npublic:\n    /*\n     * @param root: The root of the tree\n     * @param A: node in the tree\n     * @param B: node in the tree\n     * @return: The lowest common ancestor of A and B\n     */\n    ParentTreeNode * lowestCommonAncestorII(ParentTreeNode * root, ParentTreeNode * A, ParentTreeNode * B) {\n        // write your code here\n\n        std::unordered_set set;\n\n        auto curr = A;\n        while (curr) {\n            set.insert(curr);\n            curr = curr->parent;\n        }\n\n        curr = B;\n        while (curr) {\n            if (set.count(curr) == 1) {\n                return curr;\n            }\n            curr = curr->parent;\n        }\n\n        return nullptr;\n    }\n};\n\n"},"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html":{"url":"Binary Tree/Lowest Common Ancestor of a Binary Tree III.html","title":"Lowest Common Ancestor of a Binary Tree III","keywords":"","body":"Problem\nLintCode 578. Lowest Common Ancestor of a Binary Tree III\nhttps://www.lintcode.com/problem/lowest-common-ancestor-iii/description\nSolution\n/**\n * Definition of TreeNode:\n * class TreeNode {\n * public:\n *     int val;\n *     TreeNode *left, *right;\n *     TreeNode(int val) {\n *         this->val = val;\n *         this->left = this->right = NULL;\n *     }\n * }\n */\n\n\nstruct Record {\n    bool found_a;\n    bool found_b;\n    TreeNode* lca;\n\n    Record()\n      : found_a(false), found_b(false), lca(nullptr)\n    { }\n\n    Record(bool found_a, bool found_b, TreeNode* lca)\n      : found_a(found_a), found_b(found_b), lca(lca)\n    { }\n};\n\n\nclass Solution {\npublic:\n    /*\n     * @param root: The root of the binary search tree.\n     * @param A: A TreeNode in a Binary.\n     * @param B: A TreeNode in a Binary.\n     * @return: Return the least common ancestor(LCA) of the two nodes.\n     */\n    TreeNode * lowestCommonAncestor(TreeNode * root, TreeNode * A, TreeNode * B) {\n        // write your code here\n\n        auto res = runPostOrder(root, A, B);\n        return res.lca;\n    }\n\nprivate:\n    Record runPostOrder(TreeNode* root, TreeNode* A, TreeNode* B) {\n\n        if (!root) {\n            return Record();\n        }\n\n        Record curr;\n        if (root == A) {\n            curr.found_a = true;\n        }\n        if (root == B) {\n            curr.found_b = true;\n        }\n\n        auto l = runPostOrder(root->left, A, B);\n        if (l.lca) {\n            return l;\n        }\n\n        auto r = runPostOrder(root->right, A, B);\n        if (r.lca) {\n            return r;\n        }\n\n        curr.found_a = curr.found_a || l.found_a || r.found_a;\n        curr.found_b = curr.found_b || l.found_b || r.found_b;\n\n        if (curr.found_a && curr.found_b) {\n            curr.lca = root;\n            return curr;\n        }\n\n        return curr;\n    }\n};\n\n"},"Binary Tree/Recover Binary Search Tree.html":{"url":"Binary Tree/Recover Binary Search Tree.html","title":"Recover Binary Search Tree","keywords":"","body":"Problem\nLintCode 691. Recover Binary Search Tree\nhttps://www.lintcode.com/problem/recover-binary-search-tree/description\nSolution\n\n/**\n * Definition of TreeNode:\n * class TreeNode {\n * public:\n *     int val;\n *     TreeNode *left, *right;\n *     TreeNode(int val) {\n *         this->val = val;\n *         this->left = this->right = NULL;\n *     }\n * }\n */\n\nclass Solution {\npublic:\n    /**\n     * @param root: the given tree\n     * @return: the tree after swapping\n     */\n    TreeNode * bstSwappedNode(TreeNode * root) {\n        // write your code here\n\n        /**\n         *  Apply inorder traversal to finde the inversed number pairs.\n         *\n         *  Specifically, we use 2 pointers curr and pred, which is the inorder\n         *  predecessor of curr, to traverse the tree. For the first time,\n         *  if we find out an inversed number pair, namely pred > curr, we record\n         *  pred. For the second time, if we discover another inversed number\n         *  pair, we record curr.\n         *\n         *    *     *\n         *  1 5 3 4 2  => 5 > 3 => (5, 2)\n         *  1 2 3 4 5     4 > 2\n         *\n         *  *     *    => 4 > 2 => (4, 1)\n         *  4 2 3 1 5     3 > 1\n         *  1 2 3 4 5\n         *\n         */\n\n        TreeNode *pred = nullptr, *src = nullptr, *dst = nullptr;\n        runInOrder(root, pred, src, dst);\n\n        if (src && dst) {\n            std::swap(src->val, dst->val);\n        }\n\n        return root;\n    }\n\nprivate:\n    void runInOrder(\n        TreeNode* curr, TreeNode*& pred, TreeNode*& src, TreeNode*& dst) {\n\n        if (curr->left) {\n            runInOrder(curr->left, pred, src, dst);\n        }\n\n        if (pred && pred->val > curr->val) {\n            if (!src) {\n                src = pred;\n            }\n            if (src) {\n                dst = curr;\n            }\n\n            /**\n             *  This is wrong!\n             *  Consider the trival case like {1, 3, 4}.\n             *\n             *  if (!src) {\n             *      src = pred;\n             *  } else {\n             *      dst = curr;\n             *  }\n             *\n             */\n        }\n        pred = curr;\n\n        if (curr->right) {\n            runInOrder(curr->right, pred, src, dst);\n        }\n    }\n};\n\n"},"Expression Parsing/Convert Infix Expression to Postfix Expression.html":{"url":"Expression Parsing/Convert Infix Expression to Postfix Expression.html","title":"Convert Infix Expression to Postfix Expression","keywords":"","body":"Problem\nLintCode 370. Convert Expression to Reverse Polish Notation\nhttps://www.lintcode.com/problem/convert-expression-to-reverse-polish-notation/description\nSolution\nclass Solution {\npublic:\n    Solution()\n      : map({{\"*\", 2}, {\"/\", 2}, {\"+\", 1}, {\"-\", 1}, {\"(\", 0}})\n    { }\n\n    /**\n     * @param expression: A string array\n     * @return: The Reverse Polish notation of this expression\n     */\n    vector convertToRPN(vector &exp) {\n        // write your code here\n\n        /**\n         *  *, /: 2,\n         *  +, -: 1,\n         *  (   : 0\n         *\n         *      A + B / C * (D + E) - F\n         *\n         *  Symbol      Stack       Postfix\n         *    A                     A\n         *    +           +         A\n         *    B           +         AB\n         *    /           +/        AB\n         *    C           +/        ABC\n         *    *           +*        ABC/\n         *    (           +*(       ABC/\n         *    D           +*(       ABC/D\n         *    +           +*(+      ABC/D\n         *    E           +*(+      ABC/DE\n         *    )           +*        ABC/DE+\n         *    -           -         ABC/DE+*+\n         *    F           -         ABC/DE+*+F\n         *                          ABC/DE+*+F-\n         */\n\n        std::vector rpn;\n        std::stack stack;\n\n        for (const auto& token : exp) {\n\n            if (token == \"(\") {\n                stack.push(token);\n\n            } else if (token == \")\") {\n                while (stack.top() != \"(\") {\n                    rpn.push_back(stack.top());\n                    stack.pop();\n                }\n                stack.pop();\n\n            } else if ('0'  map;\n};\n\n"},"Expression Parsing/Convert Infix Expression to Prefix Expression.html":{"url":"Expression Parsing/Convert Infix Expression to Prefix Expression.html","title":"Convert Infix Expression to Prefix Expression","keywords":"","body":"Problem\nLintCode 369. Convert Expression to Polish Notation\nhttps://www.lintcode.com/problem/convert-expression-to-polish-notation/description\nSolution\nclass Solution {\npublic:\n    Solution()\n      : map({{\"*\", 2}, {\"/\", 2}, {\"+\", 1}, {\"-\", 1}, {\"(\", 0}})\n    { }\n\n    /**\n     * @param expression: A string array\n     * @return: The Polish notation of this expression\n     */\n    vector convertToPN(vector &exp) {\n        // write your code here\n\n        std::stack stack;\n        std::vector pn;\n\n        int n = exp.size();\n        for (int i = n - 1 ; i >= 0 ; --i) {\n            const auto& token = exp[i];\n\n            if (token == \")\") {\n                stack.push(token);\n\n            } else if (token == \"(\") {\n                while (stack.top() != \")\") {\n                    pn.push_back(stack.top());\n                    stack.pop();\n                }\n                stack.pop();\n\n            } else if ('0'  map;\n};\n\n"},"Expression Parsing/Evaluate Postfix Expression.html":{"url":"Expression Parsing/Evaluate Postfix Expression.html","title":"Evaluate Postfix Expression","keywords":"","body":"Problem\nLintCode 424. Evaluate Reverse Polish Notation\nhttps://www.lintcode.com/problem/evaluate-reverse-polish-notation/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param tokens: The Reverse Polish Notation\n     * @return: the value\n     */\n    int evalRPN(vector &tokens) {\n        // write your code here\n\n        std::stack stack;\n\n        for (const auto& token : tokens) {\n            if (token == \"+\") {\n                evaluate(stack, '+');\n            } else if (token == \"-\") {\n                evaluate(stack, '-');\n            } else if (token == \"*\") {\n                evaluate(stack, '*');\n            } else if (token == \"/\") {\n                evaluate(stack, '/');\n            } else {\n                stack.push(std::stoi(token));\n            }\n        }\n\n        return stack.top();\n    }\n\nprivate:\n    void evaluate(std::stack& stack, char op) {\n\n        int op2 = stack.top();\n        stack.pop();\n        int op1 = stack.top();\n        stack.pop();\n\n        int result;\n        switch(op) {\n            case '+':\n                result = op1 + op2;\n                break;\n            case '-':\n                result = op1 - op2;\n                break;\n            case '*':\n                result = op1 * op2;\n                break;\n            case '/':\n                result = op1 / op2;\n                break;\n        }\n\n        stack.push(result);\n    }\n};\n\n"},"Expression Parsing/Evaluate Infix Expression.html":{"url":"Expression Parsing/Evaluate Infix Expression.html","title":"Evaluate Infix Expression","keywords":"","body":"Problem\nLintCode 368. Expression Evaluation\nhttps://www.lintcode.com/problem/expression-evaluation/description\nSolution\nclass Solution {\npublic:\n    Solution()\n      : map({{\"*\", 2}, {\"/\", 2}, {\"+\", 1}, {\"-\", 1}, {\"(\", 0}})\n    { }\n\n    /**\n     * @param expression: a list of strings\n     * @return: an integer\n     */\n    int evaluateExpression(vector &expression) {\n        // write your code here\n\n        auto rpn = convertToRPN(expression);\n        return evaluateRPN(rpn);\n    }\n\nprivate:\n    std::vector convertToRPN(const std::vector& exp) {\n\n        /**\n         *  *, /: 2\n         *  +, -: 1\n         *  (   : 0\n         */\n\n        std::vector rpn;\n        std::stack stk;\n\n        for (const auto& token : exp) {\n\n            if ('0' = precedence) {\n                    rpn.push_back(stk.top());\n                    stk.pop();\n                }\n\n                stk.push(token);\n            }\n        }\n\n        while (!stk.empty()) {\n            rpn.push_back(stk.top());\n            stk.pop();\n        }\n\n        return rpn;\n    }\n\n    int evaluateRPN(const std::vector& rpn) {\n\n        std::stack stk;\n\n        for (const auto& token : rpn) {\n\n            if ('0'  map;\n};\n\n"},"Expression Parsing/Expression Tree Construction.html":{"url":"Expression Parsing/Expression Tree Construction.html","title":"Expression Tree Construction","keywords":"","body":"Problem\nLintCode 367. Expression Tree Build\nhttps://www.lintcode.com/problem/expression-tree-build/description\nSolution\n/**\n * Definition of ExpressionTreeNode:\n * class ExpressionTreeNode {\n * public:\n *     string symbol;\n *     ExpressionTreeNode *left, *right;\n *     ExpressionTreeNode(string symbol) {\n *         this->symbol = symbol;\n *         this->left = this->right = NULL;\n *     }\n * }\n */\n\n\nclass Solution {\npublic:\n    Solution()\n      : map({{\"*\", 2}, {\"/\", 2}, {\"+\", 1}, {\"-\", 1}, {\"(\", 0}})\n    { }\n\n    /*\n     * @param expression: A string array\n     * @return: The root of expression tree\n     */\n    ExpressionTreeNode * build(vector &expression) {\n        // write your code here\n\n        auto rpn = convertToRPN(expression);\n        return buildTree(rpn);\n    }\n\nprivate:\n    std::vector convertToRPN(const std::vector& exp) {\n\n        /**\n         * *, /: 2\n         * +, -: 1\n         * (   : 0\n         */\n\n        std::vector rpn;\n        std::stack stk;\n\n        for (const auto& token : exp) {\n\n            if ('0' = precedence) {\n                    rpn.push_back(stk.top());\n                    stk.pop();\n                }\n\n                stk.push(token);\n            }\n        }\n\n        while (!stk.empty()) {\n            rpn.push_back(stk.top());\n            stk.pop();\n        }\n\n        return rpn;\n    }\n\n\n    ExpressionTreeNode* buildTree(const std::vector& rpn) {\n\n        std::stack stk;\n\n        for (const auto& token : rpn) {\n\n            if ('0' left = left;\n                root->right = right;\n\n                stk.push(root);\n            }\n        }\n\n        return !stk.empty() ? stk.top() : nullptr;\n    }\n\n\n    std::unordered_map map;\n};\n\n"},"Word Puzzle/Word Break.html":{"url":"Word Puzzle/Word Break.html","title":"Word Break","keywords":"","body":"Problem\nLintCode 107. Word Break\nhttps://www.lintcode.com/problem/word-break/description\nSolution\nclass Solution {\npublic:\n    /*\n     * @param s: A string\n     * @param dict: A dictionary of words dict\n     * @return: A boolean\n     */\n    bool wordBreak(string &s, unordered_set &dict) {\n        // write your code here\n\n        /**\n         * dp[i]: Whether the prefix ending at the ith position can be composed\n         *        by the dictionary words.\n         *\n         * dp[i] =   OR { dp[j] && (s.substr(j + 1, i) in dict) }\n         *         0 i.\n         *\n         */\n\n        /*\n        int n = s.length();\n        if (n == 0) {\n            return true;\n        }\n\n        std::vector dp(n + 1, false);\n        dp[0] = true;\n\n        for (int i = 1 ; i  dp(n + 1, false);\n        dp[0] = true;\n\n        for (int i = 0 ; i  n || dp[j]) {\n                    continue;\n                }\n\n                dp[j] = word == s.substr(i, len);\n            }\n        }\n\n        return dp[n];\n    }\n};\n\n"},"Word Puzzle/Word Break II.html":{"url":"Word Puzzle/Word Break II.html","title":"Word Break II","keywords":"","body":"Problem\nLintCode 582. Word Break II\nhttps://www.lintcode.com/problem/word-break-ii/description\nSolution\nclass Solution {\npublic:\n    /*\n     * @param s: A string\n     * @param wordDict: A set of words.\n     * @return: All possible sentences.\n     */\n    vector wordBreak(string &s, unordered_set &wordDict) {\n        // write your code here\n\n        /**\n         *  lintcode => l intcode\n         *           => li ntcode\n         *           => lin tcode\n         *           => lint code\n         *           ...\n         *\n         *  lint => l int   code => c ode\n         *       => li nt        => co de\n         *       => lin t        => cod e\n         */\n\n        if (s.empty()) {\n            return {};\n        }\n\n        std::unordered_map> memo;\n        return runBacktracking(s, wordDict, memo);\n    }\n\nprivate:\n    std::vector runBacktracking(\n            const std::string& str,\n            const std::unordered_set& dict,\n            std::unordered_map>& memo) {\n\n        if (str.empty()) {\n            return {\"\"};\n        }\n\n        if (memo.count(str) == 1) {\n            return memo[str];\n        }\n\n        std::vector ans;\n\n        int n = str.length();\n        for (const auto& word : dict) {\n\n            int l = word.length();\n            if (l > n || l == 0) {\n                continue;\n            }\n\n            auto prefix = str.substr(0, l);\n            if (prefix != word) {\n                continue;\n            }\n\n            auto suffix = str.substr(l, n - l);\n\n            auto res = runBacktracking(suffix, dict, memo);\n\n            /**\n             * prefix:  piece:\n             * a        b c d\n             * a        bc d\n             * a        bcd\n             * ...\n             */\n            for (const auto& piece : res) {\n                if (!piece.empty()) {\n                    ans.push_back(prefix + \" \" + piece);\n                } else {\n                    ans.push_back(prefix);\n                }\n            }\n        }\n\n        memo[str] = std::move(ans);\n        return memo[str];\n    }\n};\n\n"},"Word Puzzle/Word Break III.html":{"url":"Word Puzzle/Word Break III.html","title":"Word Break III","keywords":"","body":"Problem\nLintCode 683. Word Break III\nhttps://www.lintcode.com/problem/word-break-iii/description\nSolution\nclass Solution {\npublic:\n    /*\n     * @param : A string\n     * @param : A set of word\n     * @return: the number of possible sentences.\n     */\n    int wordBreak3(string& s, unordered_set& words) {\n        // Write your code here\n\n        /**\n         * dp[i]: The number of ways to decompose the prefix ending at the\n         *        ith offset.\n         *\n         * dp[i] =  SUM { dp[j], if (s.substr(j + 1, i - j) in dict) }\n         *         0 dict;\n\n        for (const auto& word : words) {\n            std::string norm(word);\n\n            std::transform(norm.begin(), norm.end(), norm.begin(),\n                [](char ch) {\n                    return std::tolower(ch);\n                });\n\n            dict.emplace(std::move(norm));\n        }\n\n        std::vector dp(n + 1, 0);\n        dp[0] = 1;\n\n        for (int i = 0 ; i  n) {\n                    continue;\n                }\n\n                if (word == s.substr(i, l)) {\n                    dp[i + l] += dp[i];\n                }\n            }\n        }\n\n        return dp[n];\n    }\n};\n\n"},"Binary Approximation/Sqrt.html":{"url":"Binary Approximation/Sqrt.html","title":"Sqrt(x)","keywords":"","body":"Problem\nLintCode 141. Sqrt(x)\nhttps://www.lintcode.com/problem/sqrtx/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param x: An integer\n     * @return: The sqrt of x\n     */\n    int sqrt(int x) {\n        // write your code here\n\n        int l = 1, r = x;\n\n        while (l + 1 = m) {\n                l = m;\n            } else {\n                r = m;\n            }\n        }\n\n        return (r * r > x) ? l : r;\n    }\n};\n\n"},"Binary Approximation/Sqrt II.html":{"url":"Binary Approximation/Sqrt II.html","title":"Sqrt(x) II","keywords":"","body":"Problem\nLintCode 586. Sqrt(x) II\nhttps://www.lintcode.com/problem/sqrtx-ii/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param x: a double\n     * @return: the square root of x\n     */\n    double sqrt(double x) {\n        // write your code here\n\n        if (x == 0) {\n            return 0;\n        }\n\n        double l = (x >= 1) ? 1 : 0;\n        double r = (x >= 1) ? x : 1;\n\n        while (l + 1e-10 = m) {\n                l = m;\n            } else {\n                r = m;\n            }\n        }\n\n        return (x / r > r) ? r : l;\n    }\n};\n\n"},"Binary Approximation/Wood Cut.html":{"url":"Binary Approximation/Wood Cut.html","title":"Wood Cut","keywords":"","body":"Problem\nLintCode 183. Wood Cut\nhttps://www.lintcode.com/problem/wood-cut/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param L: Given n pieces of wood with length L[i]\n     * @param k: An integer\n     * @return: The maximum length of the small pieces\n     */\n    int woodCut(vector &L, int k) {\n        // write your code here\n\n        /**\n         *  n pieces of woods\n         *\n         *  s: The length of small pieces\n         *  L1/s + L2/s + ... + Ln/s = ?\n         *\n         *  We need to find a s so that the above fuction is equal to k.\n         *  Besides, s should be maximal.\n         *\n         *  For this, we can use binary approximation to gradually approach\n         *  the ideal s:\n         *      l = 1, r = Lmax\n         *      s = (l + r) / 2\n         *\n         *  O(nlogL)\n         */\n\n        if (L.empty() || k == 0) {\n            return 0;\n        }\n\n        int l = 1;\n        int r = 0;\n        for (int len : L) {\n            if (len > r) {\n                r = len;\n            }\n        }\n\n        while (l + 1 = k) {\n                l = m;\n            } else {\n                r = m;\n            }\n        }\n\n        if (countSmallPieces(L, l) & L, int s) {\n\n        int count = 0;\n        for (int len : L) {\n            count += len / s;\n        }\n\n        return count;\n    }\n};\n\n"},"Binary Approximation/Copy Books.html":{"url":"Binary Approximation/Copy Books.html","title":"Copy Books","keywords":"","body":"Problem\nLintCode 437. Copy Books\nhttps://www.lintcode.com/problem/copy-books/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param pages: an array of integers\n     * @param k: An integer\n     * @return: an integer\n     */\n    int copyBooks(vector &books, int k) {\n        // write your code here\n\n        /**\n         *  Given N books, K copiers, and the total number of pages is S. We\n         *  need to find the shortest time period for the slowest copier to\n         *  finish his work.\n         *\n         *  Let the candidate period be T, we can gradually increase T from 1\n         *  to S to check whether all the copiers can finish their works with\n         *  this time period. Hence, we get an O(NS) algorithm. However, we\n         *  still can boost the performance by estimating the ideal T with\n         *  binary approximation, thus acquiring a O(NlogS) solution.\n         */\n\n        if (books.empty() || k == 0) {\n            return 0;\n        }\n\n        int l = 1, r = 0;\n        for (int book : books) {\n            r += book;\n        }\n\n        while (l + 1 & books, int period, int k) {\n\n        int sum = 1;\n        int left = period;\n\n        for (int book : books) {\n            if (book > period) {\n                return false;\n            }\n\n            left -= book;\n            if (left \n"},"Binary Approximation/Copy Books II.html":{"url":"Binary Approximation/Copy Books II.html","title":"Copy Books II","keywords":"","body":"Problem\nLintCode 438. Copy Books\nhttps://www.lintcode.com/problem/copy-books-ii/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param n: An integer\n     * @param times: an array of integers\n     * @return: an integer\n     */\n    int copyBooksII(int n, vector &times) {\n        // write your code here\n\n        /**\n         *  Given N books, K copiers, and the total number of pages is S. We\n         *  need to find the shortest time period for the copiers to finish\n         *  the job.\n         *\n         *  Let the candidate period be T, we can gradually increase T from 1\n         *  to S to check whether all the copiers can finish their tasks with\n         *  this time period. Hence, we get an O(NS) algorithm. However, we\n         *  still can boost the performance by estimating the ideal T with\n         *  binary approximation, thus acquiring a O(NlogS) solution.\n         */\n\n        if (times.empty() || n == 0) {\n            return 0;\n        }\n\n        int l = 1;\n        int r = 0;\n        for (int time :times) {\n            r = std::max(r, time);\n        }\n        r *= n;\n\n        while (l + 1 = n;\n    }\n};\n\n"},"Binary Approximation/Find the Duplicate Number.html":{"url":"Binary Approximation/Find the Duplicate Number.html","title":"Find the Duplicate Number","keywords":"","body":"Problem\nLintCode 183. Wood Cut\nhttps://www.lintcode.com/problem/wood-cut/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param nums: an array containing n + 1 integers which is between 1 and n\n     * @return: the duplicate one\n     */\n    int findDuplicate(vector &nums) {\n        // write your code here\n\n        /**\n         *  There are (n + 1) numbers, and suppose that p is the duplicate.\n         *  We can divide these numbers into 3 portions.\n         *\n         *  1, 2, ..., (p - 1) | p, ..., p | (p + 1), ..., n\n         *\n         *  Based on the pigeon hole theory,\n         *\n         *  The amount of numbers = (p + 1) at least\n         *  The amount of numbers  p:  >= (x + 1) at least\n         *  The amount of numbers = (x + 1), we know that we\n         *  should decrase the upper bound to find our target. Otherwise,\n         *  if the amount of numbers that are = m + 1) {\n                r = m;\n            } else {\n                l = m;\n            }\n        }\n\n        return (countNumber(nums, l) \n"},"Binary Approximation/Maximum Average Subarray II.html":{"url":"Binary Approximation/Maximum Average Subarray II.html","title":"Maximum Average Subarray II","keywords":"","body":"Problem\nLintCode 617. Maximum Average Subarray II\nhttps://www.lintcode.com/problem/maximum-average-subarray-ii/description\nSolution\nclass Solution {\npublic:\n    /**\n     * @param nums: an array with positive and negative numbers\n     * @param k: an integer\n     * @return: the maximum average\n     */\n    double maxAverage(vector &nums, int k) {\n        // write your code here\n\n        /**\n         * Use binary approximation, and then we transform the problem into\n         * checking if it is possible to find a subarray whose average sum\n         * is equal to or less than T.\n         *\n         *     A[i] + ... + A[j] / (j - i + 1) >= T , (j - i + 1) >= k\n         *  => A[i] + ... + A[j] >= T + ... + T\n         *  => (A[i] - T) + ... + (A[j] - T) >= 0\n         *  => B[i] + ... + B[j] >= 0               , (j - i + 1) >= k\n         *\n         *          j             i\n         *  -------------------------\n         *  | MIN | *     MAX     * |\n         *  -------------------------\n         */\n\n        int n = nums.size();\n        if (n == 0 || k == 0) {\n            return 0;\n        }\n\n        double l = nums[0], r = nums[0];\n        for (int i = 1 ; i (nums[i]));\n            r = std::max(r, static_cast(nums[i]));\n        }\n\n        while (l + 1e-5 (nums[i]) - x;\n        }\n\n        for (int i = k ; i = min_l_sum) {\n                return true;\n            }\n\n            // B[i] ... B[j]\n            r_sum += static_cast(nums[i]) - x;\n            l_sum += static_cast(nums[i - k]) - x;\n            min_l_sum = std::min(min_l_sum, l_sum);\n        }\n\n        return r_sum >= min_l_sum;\n    }\n};\n\n"},"Sweep Line/Number of Airplanes in the Sky.html":{"url":"Sweep Line/Number of Airplanes in the Sky.html","title":"Number of Airplanes in the Sky","keywords":"","body":"Problem\nLintCode 391. Number of Airplanes in the Sky\nhttps://www.lintcode.com/problem/number-of-airplanes-in-the-sky/description\nSolution\n/**\n * Definition of Interval:\n * classs Interval {\n *     int start, end;\n *     Interval(int start, int end) {\n *         this->start = start;\n *         this->end = end;\n *     }\n * }\n */\n\n\nstruct Record {\n    int time;\n    char type;\n\n    Record(int time, char type)\n      : time(time), type(type)\n    { }\n};\n\n\nclass Solution {\npublic:\n    /**\n     * @param airplanes: An interval array\n     * @return: Count of airplanes are in the sky.\n     */\n    int countOfAirplanes(vector &airplanes) {\n        // write your code here\n\n        /**\n         *\n         *          *******\n         *\n         *            *******\n         *\n         *      ***\n         *\n         *    *******************\n         *  0 1 2 3 4 5 6 7 8 9 10\n         *\n         */\n\n        std::vector records;\n\n        for (const auto& airplane : airplanes) {\n            records.push_back(Record(airplane.start, Event::TAKE_OFF));\n            records.push_back(Record(airplane.end, Event::LAND));\n        }\n\n        std::sort(records.begin(), records.end(),\n            [] (const auto& lhs, const auto& rhs) {\n                if (lhs.time == rhs.time) {\n                    return lhs.type \n"},"Sweep Line/Time Intersection.html":{"url":"Sweep Line/Time Intersection.html","title":"Time Intersection","keywords":"","body":"Problem\nLintCode 821. Time Intersection\nhttps://www.lintcode.com/problem/time-intersection/description\nSolution\n/**\n * Definition of Interval:\n * classs Interval {\n *     int start, end;\n *     Interval(int start, int end) {\n *         this->start = start;\n *         this->end = end;\n *     }\n * }\n */\n\n\nstruct Record {\n    int time;\n    char event;\n\n    Record(int time, char event)\n      : time(time), event(event)\n    { }\n};\n\n\nclass Solution {\npublic:\n    /**\n     * @param seqA: the list of intervals\n     * @param seqB: the list of intervals\n     * @return: the time periods\n     */\n    vector timeIntersection(vector &seqA, vector &seqB) {\n        // Write your code here\n\n        /**\n         *  ***********\n         *\n         *  ***     **************\n         *\n         *  1 2 3 4 5 6 ... ... 100\n         */\n\n        std::vector recs;\n\n        for (const auto& seq : seqA) {\n            recs.push_back(Record(seq.start, Event::LOG_IN));\n            recs.push_back(Record(seq.end, Event::LOG_OUT));\n        }\n        for (const auto& seq : seqB) {\n            recs.push_back(Record(seq.start, Event::LOG_IN));\n            recs.push_back(Record(seq.end, Event::LOG_OUT));\n        }\n\n        std::sort(recs.begin(), recs.end(),\n            [] (const auto& lhs, const auto& rhs) {\n                if (lhs.time == rhs.time) {\n                    return lhs.event  ans;\n        Interval interval;\n        int count = 0;\n\n        for (const auto& rec : recs) {\n            if (rec.event == Event::LOG_IN) {\n                ++count;\n                if (count == 2) {\n                    interval.start = rec.time;\n                }\n            } else {\n                if (count == 2) {\n                    interval.end = rec.time;\n                    ans.push_back(interval);\n                }\n                --count;\n            }\n        }\n\n        return ans;\n    }\n\nprivate:\n    enum Event {\n        LOG_OUT,\n        LOG_IN\n    };\n};\n\n"},"Sweep Line/Meeting Rooms.html":{"url":"Sweep Line/Meeting Rooms.html","title":"Meeting Rooms","keywords":"","body":"Problem\nLintCode 920. Meeting Rooms\nhttps://www.lintcode.com/problem/meeting-rooms/description\nSolution\n/**\n * Definition of Interval:\n * classs Interval {\n *     int start, end;\n *     Interval(int start, int end) {\n *         this->start = start;\n *         this->end = end;\n *     }\n * }\n */\n\nclass Solution {\npublic:\n    /**\n     * @param intervals: an array of meeting time intervals\n     * @return: if a person could attend all meetings\n     */\n    bool canAttendMeetings(vector &intervals) {\n        // Write your code here\n\n        int n = intervals.size();\n        if (n == 0) {\n            return true;\n        }\n\n        std::sort(intervals.begin(), intervals.end(),\n            [] (const Interval& lhs, const Interval& rhs) {\n                if (lhs.start == rhs.start) {\n                    return lhs.end \n"},"Sweep Line/Meeting Rooms II.html":{"url":"Sweep Line/Meeting Rooms II.html","title":"Meeting Rooms II","keywords":"","body":"Problem\nLintCode 919. Meeting Rooms II\nhttps://www.lintcode.com/problem/meeting-rooms-ii/description\nSolution\n/**\n * Definition of Interval:\n * classs Interval {\n *     int start, end;\n *     Interval(int start, int end) {\n *         this->start = start;\n *         this->end = end;\n *     }\n * }\n */\n\nstruct Record {\n    int time;\n    char type;\n\n    Record(int time, char type)\n      : time(time), type(type)\n    { }\n};\n\n\nclass Solution {\npublic:\n    /**\n     * @param intervals: an array of meeting time intervals\n     * @return: the minimum number of conference rooms required\n     */\n    int minMeetingRooms(vector &intervals) {\n        // Write your code here\n\n        /**\n         *\n         *    ****  ****\n         *\n         *  ******************\n         *\n         *  0 5 10 15 20 25 30\n         *\n         */\n\n        std::vector recs;\n        for (const auto& interval : intervals) {\n            recs.push_back(Record(interval.start, Event::BGN));\n            recs.push_back(Record(interval.end, Event::END));\n        }\n\n        std::sort(recs.begin(), recs.end(),\n            [] (const auto& lhs, const auto& rhs) {\n                if (lhs.time == rhs.time) {\n                    return lhs.type \n"},"Data Structure Design/Trie.html":{"url":"Data Structure Design/Trie.html","title":"Trie","keywords":"","body":"Problem\nLintCode 442. Implement Trie (Prefix Tree)\nhttps://www.lintcode.com/problem/implement-trie-prefix-tree/description\nSolution\n\nstruct TrieNode {\n    bool is_word;\n    std::unordered_map> branch;\n\n    TrieNode()\n      : is_word(false)\n    { }\n};\n\n\nclass Trie {\npublic:\n    Trie()\n      : root(std::make_shared()) {\n        // do intialization if necessary\n    }\n\n    /*\n     * @param word: a word\n     * @return: nothing\n     */\n    void insert(string &word) {\n        // write your code here\n\n        auto curr = root;\n\n        for (char ch : word) {\n            if (curr->branch.count(ch) == 0) {\n                curr->branch[ch] = std::make_shared();\n            }\n            curr = curr->branch[ch];\n        }\n\n        curr->is_word = true;\n    }\n\n    /*\n     * @param word: A string\n     * @return: if the word is in the trie.\n     */\n    bool search(string &word) {\n        // write your code here\n\n        auto curr = root;\n\n        for (char ch : word) {\n            if (curr->branch.count(ch) == 0) {\n                return false;\n            }\n            curr = curr->branch[ch];\n        }\n\n        return curr->is_word;\n    }\n\n    /*\n     * @param prefix: A string\n     * @return: if there is any word in the trie that starts with the given prefix.\n     */\n    bool startsWith(string &prefix) {\n        // write your code here\n\n        auto curr = root;\n\n        for (char ch : prefix) {\n            if (curr->branch.count(ch) == 0) {\n                return false;\n            }\n            curr = curr->branch[ch];\n        }\n\n        return true;\n    }\n\nprivate:\n    std::shared_ptr root;\n};\n\n"},"Data Structure Design/Insert Delete GetRandom.html":{"url":"Data Structure Design/Insert Delete GetRandom.html","title":"Insert Delete GetRandom O(1)","keywords":"","body":"Problem\n657. Insert Delete GetRandom O(1)\nhttps://www.lintcode.com/problem/insert-delete-getrandom-o1/description\nSolution\n/**\n * Your RandomizedSet object will be instantiated and called as such:\n * RandomizedSet obj = new RandomizedSet();\n * bool param = obj.insert(val);\n * bool param = obj.remove(val);\n * int param = obj.getRandom();\n */\n\n\nclass RandomizedSet {\npublic:\n    RandomizedSet() {\n        // do intialization if necessary\n        srand(time(nullptr));\n    }\n\n    /*\n     * @param val: a value to the set\n     * @return: true if the set did not already contain the specified element or false\n     */\n    bool insert(int val) {\n        // write your code here\n\n        if (refs.count(val) == 1) {\n            return false;\n        }\n\n        nums.push_back(val);\n        refs[val] = nums.size() - 1;\n        return true;\n    }\n\n    /*\n     * @param val: a value from the set\n     * @return: true if the set contained the specified element or false\n     */\n    bool remove(int val) {\n        // write your code here\n\n        if (refs.count(val) == 0) {\n            return false;\n        }\n\n        // If the number that we want to remove is just the last element of the\n        // vector, we simply clean the relevant entries.\n        int index = refs[val];\n        if (index == nums.size() - 1) {\n            refs.erase(val);\n            nums.pop_back();\n            return true;\n        }\n\n        // Otherwise, we swap the last element with the to be removed element\n        // and update the indexing structure for that last element.\n        std::swap(nums.back(), nums[index]);\n        refs[nums[index]] = index;\n        nums.pop_back();\n        return true;\n    }\n\n    /*\n     * @return: Get a random element from the set\n     */\n    int getRandom() {\n        // write your code here\n\n        int index = random() % nums.size();\n        return nums[index];\n    }\n\nprivate:\n    std::vector nums;\n    std::unordered_map refs;\n};\n\n/**\n * Your RandomizedSet object will be instantiated and called as such:\n * RandomizedSet obj = new RandomizedSet();\n * bool param = obj.insert(val);\n * bool param = obj.remove(val);\n * int param = obj.getRandom();\n */\n\n"},"Data Structure Design/LRU Cache.html":{"url":"Data Structure Design/LRU Cache.html","title":"LRU Cache","keywords":"","body":"Problem\n134. LRU Cache\nhttps://www.lintcode.com/problem/lru-cache/description\nSolution\n#include \n\nclass LRUCache {\npublic:\n    /*\n    * @param capacity: An integer\n    */LRUCache(int capacity)\n      : size(0),\n        capacity(capacity) {\n        // do intialization if necessary\n    }\n\n    /*\n     * @param key: An integer\n     * @return: An integer\n     */\n    int get(int key) {\n        // write your code here\n\n        if (refs.count(key) == 0) {\n            return -1;\n        }\n\n        auto iter = refs[key];\n        int value = iter->second;\n\n        list.erase(iter);\n        list.push_front(std::make_pair(key, value));\n        refs[key] = list.begin();\n\n        return value;\n    }\n\n    /*\n     * @param key: An integer\n     * @param value: An integer\n     * @return: nothing\n     */\n    void set(int key, int value) {\n        // write your code here\n\n        if (refs.count(key) == 0) {\n            list.push_front(std::make_pair(key, value));\n            refs[key] = list.begin();\n\n            ++size;\n            if (size == capacity + 1) {\n                auto iter = --list.end();\n                int expired_key = iter->first;\n\n                list.erase(iter);\n                refs.erase(expired_key);\n\n                --size;\n            }\n            return;\n        }\n\n        auto iter = refs[key];\n        list.erase(iter);\n        list.push_front(std::make_pair(key, value));\n        refs[key] = list.begin();\n    }\n\nprivate:\n    int size;\n    int capacity;\n    std::list> list;\n    std::unordered_map>::iterator> refs;\n};\n\n"}}}